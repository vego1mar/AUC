<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="content-type" />
  <meta name="generator" content="Esselbach Contentteller CMS" />
  <meta property="og:image" content="http://www.majorgeeks.com/images/logos/majorgeeks.gif"/>
  <meta name="description" content="KeePass Password Safe is an open-source password manager or safe which helps you to manage your passwords in a secure way.  KeePass Password Safe is designed to store everything from passwords, usernames as well as other fields, including free-form notes and file attachments inside an encrypted file." />
  <meta name="keywords" content="KeePass Password Safe, Password, Manager, passwords, safe, secure, key-disk" /> 
  <base href="https://www.majorgeeks.com/" />
  <title>Download KeePass Password Safe 2.41 Professional / 1.37 Classic Edition</title>

  

  <script type="text/javascript" src="core/javaload/jquery.js"></script>
  <link rel="stylesheet" type="text/css" href="index.php?ct=core&amp;action=css&amp;id=2" title="Theme #2" />
  <!--[if IE 6]>
  <link rel="stylesheet" type="text/css" href="index.php?ct=core&amp;action=css&amp;id=2&amp;ie=6" />
  <![endif]-->
  <!--[if IE 7]>
  <link rel="stylesheet" type="text/css" href="index.php?ct=core&amp;action=css&amp;id=2&amp;ie=7" />
  <![endif]-->
  <link rel="canonical" href="http://www.majorgeeks.com/mg/getmirror/keepass_password_safe,1.html" />
</head>

<body>

<!-- Template: site_header_alt -->

<div class="pageborder">
<div class="pageheader">



<div class="centerborder">
<h1><a href="https://www.majorgeeks.com"><img src="images/logos/majorgeeks.gif" alt="Providing Free and Editor Tested Software Downloads" /></a></h1>
<div class="geekad">

<div align="center">



<!-- 728 ad -->

<!-- Revive Adserver Asynchronous JS Tag - Generated with Revive Adserver v4.1.3 -->
<ins data-revive-zoneid="1" data-revive-id="e1ae6e2743255c6dac1aff6e1e0dbfb4"></ins>
<script async src="//ra.majorgeeks.com/www/delivery/asyncjs.php"></script>

<!-- 728 ad --> 
</div>


</div>
</div>



</div>

<div class="altmainpage" id="content">

<div style="text-align: center;"></div>

<div class="colmiddle" id="menu3">

</div><!-- Template: files_layout_get -->
<!-- Template: files_get_header -->

<div align=center>
<div style="width:80%;">
<div class="navigation">


<a href="https://www.majorgeeks.com">MajorGeeks.Com</a> &#187; <a href="files/categories/internet_tools.html">Internet Tools</a> &#187; <a href="files/categories/password_managers.html">Password Managers</a> &#187; <a href="files/details/keepass_password_safe.html">KeePass Password Safe 2.41 Professional / 1.37 Classic Edition </a> &#187; Download
</div>
</div>
</div>
<br />
<!-- Template: files_get  -->

<div align="center";>
<div class="geekywraplight" style="width:80%";  >
<h1>Downloading KeePass Password Safe 2.41 Professional / 1.37 Classic Edition</h1>
<div class="geekyinsidecontent">KeePass Password Safe is an open-source password manager or safe which helps you to manage your passwords in a secure way. </div>
<br>
<div class="content">Your download will automatically start in 5 seconds.  Please wait while we transfer you to the requested download or...... <br /><br />
<div align="center"><a href="index.php?ct=files&amp;action=download&amp;PHPSESSID=0s5k3noq54qt377e45vjhvpgq4">
<img border="0" src="images/click_here.gif" alt="Click here if it does not."></a>
</div>
<hr>
<img alt="Reimage download" border="0" src="images/icons/red_icon_18x17px.png" width="18" height="17">
<b><font color ="#00000f">TIP</font>: <a target="top" href="http://www.reimageplus.com/includes/router_land.php?tracking=Majorgeeks&banner=dltxt">Click Here to Repair/Restore Missing Windows OS Files Damaged by Malware </font></u></a>

<script type="text/javascript">
<!--
setTimeout('location.href="index.php?ct=files&action=download&PHPSESSID=0s5k3noq54qt377e45vjhvpgq4"',5000);
-->
</script>






<hr>

  
<!-- google inline ad -->
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-6960825562757852"
     data-ad-slot="6756421832"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
<!--google inline ad -->



<hr>
<!--
<CENTER><FONT face=Arial size=3>-=<font color="#B8220E"> advertisement </font> =-</FONT></CENTER>
-->
<div align="center";>
<table><tr><td></td><td>
<!--test-->
<script type="text/javascript" src="b/advertisement.js"></script>
<div align="center">
<script type="text/javascript">
if (document.getElementById("tester") != undefined)
{
	document.write('<br>');
}
else
{
	document.write("<iframe width=425 height=425 border=1 frameborder=1 src='/mg/mg.html'>");
	document.write("</iframe>");
}
</script>
<!-- test scripts -->
</td></tr></table></div>


 
<!-- Begin MailChimp Signup Form -->
<link href="//cdn-images.mailchimp.com/embedcode/horizontal-slim-10_7.css" rel="stylesheet" type="text/css">
<style type="text/css">
	#mc_embed_signup{background:#e1e1bb; clear:left; font:14px Helvetica,Arial,sans-serif; width:100%;}
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
</style>
<div id="mc_embed_signup">
<form action="https://majorgeeks.us4.list-manage.com/subscribe/post?u=11e02cf9dc4ef3eb0ab4606ef&amp;id=8c93a2875d" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
    <div id="mc_embed_signup_scroll">
	<label for="mce-EMAIL">Subscribe to our mailing list and Be the Envy of ALL!</label>
	<input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="email address" required>
    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
    <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_11e02cf9dc4ef3eb0ab4606ef_8c93a2875d" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
    </div>
</form>
</div>

<!--End mc_embed_signup-->


<!-- google -->



<!--
<hr>
<!-- google -->
<hr>


</div>

<hr color=#666633>

<div class='addnow' data-id='498'></div>
<script type="text/javascript"> var _addnow = _addnow || []; _addnow.push(["set", "hash_id", "136:CzsdHHhsptbrFmFmOjHbPZR1jZw"]); (function() {var addnow = document.createElement("script"); addnow.type = "text/javascript"; addnow.async = true; addnow.src = ("https:" == document.location.protocol ? "https://" : "http://") + "cdn.addnow.com/widget/addnow.js"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(addnow, s);})(); </script>
<!-- google ad -->
<center>

<br>


<!--
<img border="0" src="/images/ts-1.jpg" alt="">
-->


<!-- MDTest-->
<div itemscope itemtype="https://schema.org/Product">
<meta itemprop="name" content="KeePass Password Safe">


<div itemprop="aggregateRating" itemscope itemtype="https://schema.org/AggregateRating">
<meta itemprop="worstRating" content="1">
<meta itemprop="bestRating" content="5">
<meta itemprop="ratingValue" content="5">
<meta itemprop="ratingCount" content="148">
</div>


<div itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="Dominik Reichl">
</div>

</div>
<!-- MDTest -->


<center>
<div  align="right";></div>
<!--
<br /><br /><br />
<strong>Webmasters:</strong> Please link to the previous page. Thanks for understanding.</div>
<br />
-->
<!-- wrap -->
</div></div><br />


<!-- Debug: http://files2.majorgeeks.com/2821457d3c37d0405f1ac2c0f97b8670c543967e/internet/KeePass-2.41-Setup.exe -->

<br>





<!-- Facebook Popup Widget START -->

<!-- Facebook Popup Widget START -->
<script src='//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js' type='text/javascript'></script>
<style>
#fanback {
display:none;
background:rgba(0,0,0,0.8);
width:100%;
height:100%;
position:fixed;
top:0;
left:0;
z-index:99999;
}
#fan-exit {
width:100%;
height:100%;
}
#MorganAndMen {
background:white;
width:420px;
height:300px;
position:absolute;
top:58%;
left:63%;
margin:-220px 0 0 -375px;
-webkit-box-shadow: inset 0 0 50px 0 #939393;
-moz-box-shadow: inset 0 0 50px 0 #939393;
box-shadow: inset 0 0 50px 0 #939393;
-webkit-border-radius: 5px;
-moz-border-radius: 5px;
border-radius: 5px;
margin: -220px 0 0 -375px;
}
#TheBlogWidgets {
float:right;
cursor:pointer;
background:url(images/fanclose.png) repeat;
height:15px;
padding:20px;
position:relative;
padding-right:40px;
margin-top:-20px;
margin-right:-22px;
}
.remove-borda {
height:1px;
width:366px;
margin:0 auto;
background:#F3F3F3;
margin-top:16px;
position:relative;
margin-left:20px;
}
#linkit,#linkit a.visited,#linkit a,#linkit a:hover {
color:#80808B;
font-size:10px;
margin: 0 auto 5px auto;
float:center;
}
</style>


<script type='text/javascript'>
//<![CDATA[
jQuery.cookie = function (key, value, options) {

// key and at least value given, set cookie...
if (arguments.length > 1 && String(value) !== "[object Object]") {
options = jQuery.extend({}, options);

if (value === null || value === undefined) {
options.expires = -1;
}

if (typeof options.expires === 'number') {
var days = options.expires, t = options.expires = new Date();
t.setDate(t.getDate() + days);
}

value = String(value);

return (document.cookie = [
encodeURIComponent(key), '=',
options.raw ? value : encodeURIComponent(value),
options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
options.path ? '; path=' + options.path : '',
options.domain ? '; domain=' + options.domain : '',
options.secure ? '; secure' : ''
].join(''));
}

// key and possibly options given, get cookie...
options = value || {};
var result, decode = options.raw ? function (s) { return s; } : decodeURIComponent;
return (result = new RegExp('(?:^|; )' + encodeURIComponent(key) + '=([^;]*)').exec(document.cookie)) ? decode(result[1]) : null;
};
//]]>
</script>
<script type='text/javascript'>
jQuery(document).ready(function($){
if($.cookie('popup_user_login') != 'yes'){
$('#fanback').delay(10000).fadeIn('medium');
$('#TheBlogWidgets, #fan-exit').click(function(){
$('#fanback').stop().fadeOut('medium');
});
}
$.cookie('popup_user_login', 'yes', { path: '/', expires: 7 });
});
</script>

<div id='fanback'>
<div id='fan-exit'>
</div>
<div id='MorganAndMen'>
   Like us or the bunny gets it!
<div id='TheBlogWidgets'>
</div>
<div class='remove-borda'>
</div>

<iframe src="https://www.facebook.com/plugins/page.php?href=https%3A%2F%2Fwww.facebook.com%2Fmajorgeeksdotcom%2F&tabs=timeline&width=402&height=255&small_header=true&adapt_container_width=true&hide_cover=true&show_facepile=true&appId=117729275063662" width="402" height="255" style="border:none;overflow:hidden" scrolling="no" frameborder="0" allowTransparency="true"></iframe>


<center></center>
</div>



<!-- Facebook Popup Widget END. Brought to you by www.MorganAndMen.com - www.TheBlogWidgets.com -->



<!-- Template: files_get_footer -->



<!--
<div class="navigation">
<a href="https://www.majorgeeks.com">MajorGeeks.Com</a> &#187; <a href="files/categories/internet_tools.html">Internet Tools</a> &#187; <a href="files/categories/password_managers.html">Password Managers</a> &#187; <a href="files/details/keepass_password_safe.html">KeePass Password Safe 2.41 Professional / 1.37 Classic Edition </a> &#187; Download
</div>
-->


<!-- Template: site_footer_alt -->
<div style="text-align: center;"></div>

</div>
</div>

<div class="pagefooter">
&copy; 2000-2019 MajorGeeks.com<br />

<!-- Do not remove -->
Powered by <a href="http://www.contentteller.com">Contentteller&reg; Business Edition</a><img src="index.php?ct=core&amp;action=tasks" alt="" />
<!-- Do not remove -->
</div>

</div>

<SCRIPT LANGUAGE="JavaScript">
<!-- Hide from JavaScript-Impaired Browsers
setTimeout('location.href="http://www.majorgeeks.com"',100000);
// End Hiding -->
</SCRIPT>




<!-- Geek Stats -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-956038-1', 'auto');
  ga('send', 'pageview');

</script>
<!-- Geek Stats -->


<!-- Start Quantcast tag -->
<!-- End Quantcast tag -->

<!--cp -->
<!-- cp-->

<!--dt-->
<script type="text/javascript" src="//ads.pro-market.net/ads/scripts/site-133323.js"></script>




</body>
</html>