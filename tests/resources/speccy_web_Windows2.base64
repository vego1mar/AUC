 
  <!DOCTYPE html>
<!--[if lte IE 7]> <html class="ie7 no-js" data-locale="en-us"> <![endif]-->
<!--[if IE 8]> <html class="ie8 no-js" data-locale="en-us"> <![endif]-->
<!--[if IE 9]> <html class="ie9 no-js" data-locale="en-us"> <![endif]-->
<!--[if !IE]><!--> <html class="no-js" data-locale="en-us"> <!--<![endif]-->
<head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb#">
  <title>Speccy - Standard</title>
  <meta name="description" content="Piriform - Authors of the hugely popular software CCleaner, Defraggler, Recuva and Speccy." />
  <meta name="keywords" content="piriform,ccleaner,cc cleaner,cccleaner,agomo,recuva,defraggler,defrag,recover,speccy,software,freeware,download,homepage" />
  <link rel="canonical" href="https://www.ccleaner.com/speccy/download/standard" />
  <meta charset="utf-8">

  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width,initial-scale=1">

  <link href="http://feeds.feedburner.com/piriform" rel="alternate" type="application/rss+xml" title="RSS Feed">

  <!-- Favicon -->
  <link rel="apple-touch-icon" sizes="180x180" href="//s1.pir.fm/pf/favicons--AwgCBwYOBQc/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="//s1.pir.fm/pf/favicons--AwgCBwYOBQc/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="//s1.pir.fm/pf/favicons--AwgCBwYOBQc/favicon-16x16.png">
  <link rel="manifest" href="/css/manifest.json">
  <link rel="mask-icon" href="//s1.pir.fm/pf/favicons--AwgCBwYOBQc/safari-pinned-tab.svg" color="#5bbad5">
  <meta name="theme-color" content="#ffffff">
  <!-- END Favicon -->

  <meta name="verify-v1" content="CL5YHvlJYGfQ8xfzQT4NsvEV8U1LSKl/CcjVhtu6fkc=">

  <link rel="stylesheet" href="/css/global--blessed.1.css?v=CQYDAwIPDQs" type="text/css">  
  <link rel="stylesheet" href="/css/global--blessed.css?v=CQYDAwIPDQs" type="text/css">  
  <!--[if IE 7]>
    <link rel="stylesheet" href="/css/ie7-grid.css" type="text/css">
  <![endif]-->

  <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
  <script type="text/javascript" src="/scripts/jquery-migrate-1.2.1.min.js"></script>
  <script type="text/javascript" src="/scripts/trunk8.js"></script>
	
    
	
  

	
  <script type="text/javascript">
  var _vwo_code=(function(){
  var account_id=176159,
  settings_tolerance=2000,
  library_tolerance=2500,
  use_existing_jquery=true,
  f=false,d=document;return{use_existing_jquery:function(){return use_existing_jquery;},library_tolerance:function(){return library_tolerance;},finish:function(){if(!f){f=true;var a=d.getElementById('_vis_opt_path_hides');if(a)a.parentNode.removeChild(a);}},finished:function(){return f;},load:function(a){var b=d.createElement('script');b.src=a;b.type='text/javascript';b.innerText;b.onerror=function(){_vwo_code.finish();};d.getElementsByTagName('head')[0].appendChild(b);},init:function(){settings_timer=setTimeout('_vwo_code.finish()',settings_tolerance);this.load('//dev.visualwebsiteoptimizer.com/j.php?a='+account_id+'&u='+encodeURIComponent(d.URL)+'&r='+Math.random());var a=d.createElement('style'),b='body{opacity:0 !important;filter:alpha(opacity=0) !important;background:none !important;}',h=d.getElementsByTagName('head')[0];a.setAttribute('id','_vis_opt_path_hides');a.setAttribute('type','text/css');if(a.styleSheet)a.styleSheet.cssText=b;else a.appendChild(d.createTextNode(b));h.appendChild(a);return settings_timer;}};}());_vwo_settings_timer=_vwo_code.init();
  </script>

    <!--[if lt IE 8]><script src="/scripts/json2.js"></script><![endif]-->
  <!--[if lte IE 8]><script src="//cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.min.js"></script><![endif]-->
  <script type="text/javascript">(function(e,b){if(!b.__SV){var a,f,i,g;window.mixpanel=b;b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(".");2==a.length&&(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;"undefined"!==typeof d?c=b[d]=[]:d="mixpanel";c.people=c.people||[];c.toString=function(b){var a="mixpanel";"mixpanel"!==d&&(a+="."+d);b||(a+=" (stub)");return a};c.people.toString=function(){return c.toString(1)+".people (stub)"};i="disable time_event track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.union people.track_charge people.clear_charges people.delete_user".split(" ");
  for(g=0;g<i.length;g++)f(c,i[g]);b._i.push([a,e,d])};b.__SV=1.2;a=e.createElement("script");a.type="text/javascript";a.async=!0;a.src="undefined"!==typeof MIXPANEL_CUSTOM_LIB_URL?MIXPANEL_CUSTOM_LIB_URL:"file:"===e.location.protocol&&"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js".match(/^\/\//)?"https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js":"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js";f=e.getElementsByTagName("script")[0];f.parentNode.insertBefore(a,f)}})(document,window.mixpanel||[]);
  mixpanel.init("a184f18750db5ebbdce6b0646183d192");</script>
  
  <script src="/scripts/modernizr-custom.js"></script>  
  
  <!-- Google Tag Manager DataLayer -->
  <script>
    dataLayer = [];
  </script>
  <!-- End Google Tag Manager DataLayer -->
  <!-- Google Tag Manager -->
  <noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-KFXRTR"
  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-KFXRTR');</script>
  <!-- End Google Tag Manager -->

  <script type="text/javascript">
    // remove 'no-js' class from html element
    $('html').removeClass('no-js');
  </script>

  <meta name="google-site-verification" content="ml6x5QoEjuCGEjr6qZ9blR4xB6cBhkAxJGIklPS-AUA" />

</head>
  <body data-behavior="unsupported-browser-redirect-module">
  <div data-behavior="unsupported-browser-redirect-module-config" data-redirect-target="/unsupported-browser" data-lowest-supported-ie-version="9"></div>
  
  <div data-behavior="language-change-module">
</div>
  <header class="page-head page-head--consumer">
    <div class="container page-head__inner">
      <a class="site-logo" href="/" id="GTM__header__ccleaner-logo">CCleaner</a>
      
      <div class="lang-select" onclick="this.classList.toggle('lang-select--open')">

        <span class="lang-select__tab">EN</span>
        <ul class="lang-select__dropdown">
          <li class="lang-select__list-header">Languages</li>
          <li class="lang-select__language"><a href="/speccy/download/standard/" id="GTM__lang-select__en-US" data-lang-change-link="en-US">English</a></li>
          <li class="lang-select__language"><a href="/speccy/download/standard/" id="GTM__lang-select__de-de" data-lang-change-link="de-DE">Deutsch</a></li>
          <li class="lang-select__language"><a href="/speccy/download/standard/" id="GTM__lang-select__es-es" data-lang-change-link="es-ES">Español</a></li>
          <li class="lang-select__language"><a href="/speccy/download/standard/" id="GTM__lang-select__fr-fr" data-lang-change-link="fr-FR">Français</a></li>
          <li class="lang-select__language"><a href="/speccy/download/standard/" id="GTM__lang-select__it-it" data-lang-change-link="it-IT">Italiano</a></li>
          <li class="lang-select__language"><a href="/speccy/download/standard/" id="GTM__lang-select__nl-nl" data-lang-change-link="nl-NL">Nederlands</a></li>
          <li class="lang-select__language"><a href="/speccy/download/standard/" id="GTM__lang-select__ru-ru" data-lang-change-link="ru-RU">Pусский</a></li>
          <li class="lang-select__language"><a href="/speccy/download/standard/" id="GTM__lang-select__pt-br" data-lang-change-link="pt-BR">Português</a></li>
        </ul>
      </div>


      <div class="page-search">
        <form method="get" action="/search">
          <input class="page-search__input  text-input" type="search" name="q" placeholder="Search">
          <input class="page-search__submit" type="submit" value="">
        </form>
      </div>

      <div data-behavior="hamburger-module" class="has-lang-select">

        <div class="menu-btn" data-behavior="hamburger-module__menu-btn">
          <img src="//s1.pir.fm/pf/btn-hamburger-grey.png" alt="">
        </div>

        <nav class="primary-nav" data-behavior="hamburger-module__primary-nav">
          <ul>
            <li>
              <span class="dir" data-behavior="hamburger-module__dir">
                <a href="/download" class="parent" id="GTM__top-nav__for-home">For Home</a>
                <span class="expand-menu" data-behavior="hamburger-module__expand-menu"></span>
              </span>
              <ul data-behavior="hamburger-module__sub-nav">
                <li>
                  <ul>
                    <li class="primary-nav__heading"><a href="/download" id="GTM__top-nav__for-home__pc-software">PC Apps</a></li>
                    <li><a href="/ccleaner" id="GTM__top-nav__for-home__ccleaner">CCleaner</a></li>
                    <li><a href="/defraggler" id="GTM__top-nav__for-home__defraggler">Defraggler</a></li>
                    <li><a href="/recuva" id="GTM__top-nav__for-home__recuva">Recuva</a></li>
                    <li><a href="/speccy" id="GTM__top-nav__for-home__speccy">Speccy</a></li>
                  </ul>
                  <ul>
                    <li class="primary-nav__heading"><a href="/ccleaner-android" id="GTM__top-nav__for-home__mobile-software">Mobile Apps</a></li>
                    <li><a href="/ccleaner-android" id="GTM__top-nav__for-home__ccleaner-for-android">CCleaner for Android</a></li>
                    <li class="primary-nav__heading"><a href="/ccleaner-mac" id="GTM__top-nav__for-home__mac-software">Mac Apps</a></li>
                    <li><a href="/ccleaner-mac" id="GTM__top-nav__for-home__ccleaner-for-mac">CCleaner for Mac</a></li>
                  </ul>
                  <ul class="navlast">
                    <li class="primary-nav__heading"><a href="/ccleaner-cloud" id="GTM__top-nav__for-home__cloud-technology">Cloud Technology</a></li>
                    <li><a href="/ccleaner-cloud" id="GTM__top-nav__for-home__ccleaner-cloud">CCleaner Cloud</a></li>
                  </ul>
                </li>
              </ul>
            </li>
            <li>
              <span class="dir" data-behavior="hamburger-module__dir">
                <a href="/business" class="parent" id="GTM__top-nav__for-business">For Business</a>
                <span class="expand-menu" data-behavior="hamburger-module__expand-menu"></span>
              </span>
              <ul data-behavior="hamburger-module__sub-nav">
                <li>
                  <ul class="navlast">
                    <li class="primary-nav__heading"><a href="/business" id="GTM__top-nav__for-business__ccleaner-network">Endpoint Optimization</a></li>
                    <li><a href="/business/ccleaner-cloud" id="GTM__top-nav__for-business__ccleaner-cloud">CCleaner Cloud</a></li>
                    <li><a href="/business/ccleaner-network-edition" id="GTM__top-nav__for-business__ccleaner-network">CCleaner Network</a></li>
                    <li><a href="/business/ccleaner-business-edition" id="GTM__top-nav__for-business__ccleaner-business">CCleaner Business</a></li>
                    <li><a href="/business/ccleaner-technician-edition" id="GTM__top-nav__for-business__ccleaner-technician">CCleaner Technician</a></li>
                    <li class="small"><a href="/business/ccleaner-product-matrix" id="GTM__top-nav__for-business__ccleaner-product-matrix">Product Comparison Table</a></li>
                  </ul>
                </li>
              </ul>
            </li>
            <li>
              <span class="dir" data-behavior="hamburger-module__dir">
                <a href="/download" class="parent" id="GTM__top-nav__download">Download</a>
                <span class="expand-menu" data-behavior="hamburger-module__expand-menu"></span>
              </span>
              <ul data-behavior="hamburger-module__sub-nav">
                <li>
                  <ul class="navlast">
                    <li class="primary-nav__heading"><a href="/download" id="GTM__top-nav__download__download-center">Download Center</a></li>
                    <li><a href="/ccleaner/download" id="GTM__top-nav__download__download-ccleaner">Download CCleaner</a></li>
                    <li><a href="/defraggler/download" id="GTM__top-nav__download__download-defraggler">Download Defraggler</a></li>
                    <li><a href="/recuva/download" id="GTM__top-nav__download__download-recuva">Download Recuva</a></li>
                    <li><a href="/speccy/download" id="GTM__top-nav__download__download-speccy">Download Speccy</a></li>
                    <li><a href="/ccleaner-android" id="GTM__top-nav__download__download-ccleaner-for-android">Download CCleaner for Android</a></li>
                  </ul>
                </li>
              </ul>
            </li>
            <li>
              <span class="dir" data-behavior="hamburger-module__dir">
                <a href="/support" id="GTM__top-nav__support">Support</a>
                <span class="expand-menu" data-behavior="hamburger-module__expand-menu"></span>
              </span>
              <ul data-behavior="hamburger-module__sub-nav">
                <li>
                  <ul class="navlast">
                    <li class="primary-nav__heading"><a href="/support" class="clear" id="GTM__top-nav__support__product-support">Product Support</a></li>
                    <li><a href="/support/license-lookup" id="GTM__top-nav__support__lost-license-key">Lost License Key</a></li>
                    <li><a href="http://support.ccleaner.com/" target="_blank" id="GTM__top-nav__support__my-account">My Account</a></li>
                    <li><a href="http://forum.ccleaner.com" target="_blank" id="GTM__top-nav__support__community-forum">Community Forum</a></li>
                    <li><a href="/docs" id="GTM__top-nav__support__documentation">Documentation</a></li>
                  </ul>
                </li>
              </ul>
            </li>
            <li>
              <span class="dir" data-behavior="hamburger-module__dir">
                <a href="/about" id="GTM__top-nav__about">About Us</a>
                <span class="expand-menu" data-behavior="hamburger-module__expand-menu"></span>
              </span>
              <ul class="primary-nav__end" data-behavior="hamburger-module__sub-nav">
                <li>
                  <ul>
                    <li class="primary-nav__heading"><a href="/about" id="GTM__top-nav__about__about-piriform">About Us</a></li>
                    <li><a href="/about" id="GTM__top-nav__about__company-info">Company Info</a></li>
                    <li><a href="/news/blog" id="GTM__top-nav__about__blog">Blog</a></li>
                    <li><a href="/news/release-announcements" id="GTM__top-nav__about__release-announcements">Release Announcements</a></li>
                    <li><a href="/about/press-releases" id="GTM__top-nav__about__press-releases">Press Releases</a></li>
                    <li><a href="/about/offices" id="GTM__top-nav__about__offices">Offices</a></li>
                    <li><a href="/about/privacy-policy" id="GTM__top-nav__about__privacy-policy">Privacy Policy</a></li>
                    <li><a href="/about/data-factsheet" id="GTM__top-nav__about__data-factsheet">Data Factsheet</a></li>
                    <li><a href="/about/cookies-policy" id="GTM__top-nav__about__cookies-policy">Cookies Policy</a></li>
                    <li><a href="/about/terms-of-use" id="GTM__top-nav__about__terms-of-use">Terms of Use</a></li>
                    <li><a href="/legal" id="GTM__top-nav__about__legal">Legal</a></li>
                    <li><a href="/about/jobs" id="GTM__top-nav__about__jobs">Jobs</a></li>
                    <li><a href="/contact" id="GTM__top-nav__about__contact-us">Contact Us</a></li>
                  </ul>
                  <ul class="navlast">
                    <li class="primary-nav__heading"><a href="/partners" id="GTM__top-nav__partner-program">Partner Program</a></li>
                    <li><a href="/partners"                     id="GTM__top-nav__partner-program__overview">Overview</a></li>
                    <li><a href="/partners#affiliates"          id="GTM__top-nav__partner-program__affiliates">Affiliates</a></li>
                    <li><a href="/partners#resellers"           id="GTM__top-nav__partner-program__resellers">Resellers</a></li>
                    <li><a href="/partners#technicians"         id="GTM__top-nav__partner-program__technicians">Technicians</a></li>
                    <li><a href="/partners#msps"                id="GTM__top-nav__partner-program__msps">MSPs</a></li>
                    <li><a href="/partners#techandstrategy"     id="GTM__top-nav__partner-program__tech-and-strategy">Tech &amp; Strategy</a></li>
                  </ul>
                </li>
              </ul>
            </li>
          </ul>
        </nav>

      </div>

    </div>
  </header>
	
    

	

  <div class="container cf view--product-download">
	
		<main class="page-body page-body--flush--wide">

			<div class="band band--shaded">
				<div class="grid grid--center">
				  <div class="col-4-5--lap-and-up pb--lg">			
						<!----><div data-behavior="download-module" data-download-url="https://download.ccleaner.com/spsetup132.exe" data-timeout="5000" xmlns:piriform.templateutils="urn:PFWeb.Presentation.XSLT.TemplateUtils"></div>
<div class="text-center" xmlns:piriform.templateutils="urn:PFWeb.Presentation.XSLT.TemplateUtils">
  <h1>
            Thank you for downloading Speccy</h1>
  <p>
            Your download should start automatically within a few seconds.
            <br>If it doesn't please use this link to <a href="https://download.ccleaner.com/spsetup132.exe">start the download</a></p><br><div class="text-center" id="BigDownload"><a class="btn btn--large btn--download" href="https://download.ccleaner.com/spsetup132.exe"><span>Start Download</span></a></div>
</div>
					</div>
				</div>
			</div>
		  
			<div class="band band--newsletter">
				<div class="grid grid--center">
				  <div class="col-4-5--lap-and-up pb--lg pb--0--lap-and-up">							
						<h3 class="text-center text-semibold">Stay up to date with the latest news and special offers!</h3>
						<div class="newsletter-signup newsletter-signup--standalone" data-behavior="newsletter-module" data-newsletter-type="">

  <form
        data-parsley-validate
        novalidate

        method="post" action="//www.ccleaner.com/Handlers/signup.ashx" data-newsletter-form
        >

    <input type="hidden" name="userid" value="176538">
    <input type="hidden" name="ReturnURL" value="//www.ccleaner.com/newsletter-verification">
    

    <input type="hidden" name="cd_ORIGIN_SITE" value="Y">

    <input type="hidden" name="cd_CONSUMER_REFERRID" value="1550" onkeydown="return checkNumber(event);" data-consumer-referrer-id disabled>
    <input type="hidden" name="cd_CONSUMER_REFERRNAME" value="Standard" data-consumer-referrer-name disabled>
    <input type="hidden" name="cd_CONSUMER_REFERRTITLE" value="" data-referrer-title data-consumer-referrer-title disabled>
    <input type="hidden" name="cd_CONSUMER_REFERRURL" value="/speccy/download/standard/" data-consumer-referrer-url disabled>
    <input type="hidden" name="cd_CONSUMER_REFERRURL_R" value="/speccy/download/standard" data-consumer-referrer-url-raw disabled>
    <input type="hidden" name="cd_CONSUMER_SITE_SUBSCR" value="Y" data-consumer-site-subscriber disabled>
    <input type="hidden" name="cd_CONSUMER_NEWSLETTER" value="Y" data-consumer-newsletter disabled>

    <input type="hidden" name="cd_BUSINESS_REFERRID" value="1550" onkeydown="return checkNumber(event);" data-business-referrer-id disabled>
    <input type="hidden" name="cd_BUSINESS_REFERRNAME" value="Standard" data-business-referrer-name disabled>
    <input type="hidden" name="cd_BUSINESS_REFERRTITLE" data-referrer-title data-business-referrer-title disabled>
    <input type="hidden" name="cd_BUSINESS_REFERRURL" value="/speccy/download/standard/" data-business-referrer-url disabled>
    <input type="hidden" name="cd_BUSINESS_REFERRURL_R" value="/speccy/download/standard" data-business-referrer-url-raw disabled>
    <input type="hidden" name="cd_BUSINESS_SITE_SUBSCR" value="Y" data-business-site-subscriber disabled>
    <input type="hidden" name="cd_BUSINESS_NEWSLETTER" value="Y" data-business-newsletter disabled>

    <input type="hidden" name="cd_COUNTRY" value="Poland">
    <input type="hidden" name="cd_COUNTRY_CODE" value="PL">
    <input type="hidden" name="cd_CURRENCY_CODE" value="PLN">

    <input type="hidden" name="dma" value="http://piriform-mail.com/signup.ashx">

    <div class="newsletter-signup--standalone__wrapper pt--xxs">

      <div class="newsletter-signup--standalone__col-2-3 newsletter-signup--homepage__col-">
        <div class="newsletter-signup__inputs-wrapper">
          <div class="newsletter-signup__first-name mb--xxs">
            <label class="newsletter-signup__first-name-label">Your first name:</label>
            <input class="text-input newsletter-signup__first-name-input" name="cd_FIRSTNAME" title="Your first name" placeholder="John" type="text" data-parsley-trigger="change" data-parsley-required-message="Please fill in your first name" data-text-input required />
          </div>
          <div class="newsletter-signup__email">
            <label class="newsletter-signup__email-label">Your email:</label>
            <input class="text-input" name="email" title="Your email address" placeholder="john@email.com" type="text" data-parsley-required data-parsley-type="email" data-parsley-trigger="change" data-parsley-required-message="Please fill in your email address" data-parsley-type-message="Please enter a valid email address" data-text-input />
          </div>
        </div>        
      </div>
      <div class="newsletter-signup--standalone__col-1-3 newsletter-signup--homepage__col-1-2">
        <div class="media media--small media--rev">
          <div class="media__img">
            
            <button class="btn btn--small btn--alt" type="submit" id="GTM__link--PF-NewsletterSignup" data-btn-submit>Sign me up!</button>
          </div>
          <div class="media__body">
            <div class="newsletter-signup__checkboxes">
              
              
              <label for="addressbook_149768">
                <input class="newsletter-signup__checkbox" type="checkbox" name="addressbook_149768" id="addressbook_149768" data-parsley-required data-parsley-multiple="newsletterSignup" data-parsley-required-message="Please select which list newsletter you'd like to subscribe to" data-newsletter-form-consumer> Home
              </label>
              <label for="addressbook_149769">
                <input class="newsletter-signup__checkbox" type="checkbox" name="addressbook_149769" id="addressbook_149769" data-parsley-required data-parsley-multiple="newsletterSignup" data-newsletter-form-business> Business
              </label>
            </div>
          </div>
        </div> 

        
        <button class="btn btn--small btn--alt hide newsletter-signup__btn" type="submit" id="GTM__link--PF-NewsletterSignupAlt" data-btn-submit>Sign me up!</button>
      </div>

      <input class="text-input newsletter-signup__confirm" name="email-confirmation" title="Confirm email address" placeholder="your@email.com" type="text" aria-hidden="true" />

    </div>

  </form>
</div>
					</div>
				</div>
			</div>

			<div class="band--shaded">
				<!-- Load Facebook SDK for JavaScript -->
<div id="fb-root"></div>
<script>
    window.fbAsyncInit = function() {               
        FB.Event.subscribe('xfbml.render', function(response) {
          piriform.events.facebook.pluginsrendered()
        });        
    };

    (function(d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s); js.id = id;
      js.async=true;
      js.src = "//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v2.7";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
</script>

<!-- Load Twitter Widgets JavaScript -->
<script>
    window.twttr = (function (d, s, id) {
        var t, js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id))
            return;
        js = d.createElement(s); js.id = id;
        js.src = "//platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs);
        return window.twttr || (t = { _e: [], ready: function (f) { t._e.push(f) } });
    }(document, "script", "twitter-wjs"));
</script>


<div class="social-followers-proto " data-behavior="social-module">

    <div class="grid grid--center">
        <div class="col--custom-fixed">

            <div class="comp">
                <div class="comp__fixed">
                    <a class="alt-social-icon alt-social-icon--xl icon-alt--facebook--xl" href="https://www.facebook.com/Piriform" target="_blank">Facebook</a>
                </div>
                <div class="comp__variable">

                    <div class="social-followers-proto__main-action social-followers-proto__fb--disabled">
                        <!--[if lte IE 8 ]><a title="Like Piriform's Page on Facebook" class="fb-like-fallback-ie7" target="_blank" href="https://www.facebook.com/Piriform"></a><![endif]-->
                        <!--[if gte IE 9 ]>    <a 
        title="Like us on Facebook" 
        class="fb-like" 
        target="_blank" 
        href="https://www.facebook.com/Piriform" 
        data-href="https://www.facebook.com/Piriform" 
        data-layout="button_count" data-action="like" 
        data-show-faces="false" 
        data-share="false"></a>
<![endif]-->
                        <!--[if !IE]>-->    <a 
        title="Like us on Facebook" 
        class="fb-like" 
        target="_blank" 
        href="https://www.facebook.com/Piriform" 
        data-href="https://www.facebook.com/Piriform" 
        data-layout="button_count" data-action="like" 
        data-show-faces="false" 
        data-share="false"></a>
<!--<![endif]-->
                    </div>

                    <div class="social-followers-proto__secondary-action">
                        <a href="http://www.facebook.com/share.php?u=https://www.facebook.com/Piriform&title=Piriform" target="_blank" class="btn btn--social--fb" data-behavior="social-module__facebook-share">Share</a>
                    </div>

                </div>
            </div>

        </div>
        <div class="col--custom-fixed">

            <div class="comp">
                <div class="comp__fixed">
                    <a class="alt-social-icon alt-social-icon--xl icon-alt--twitter--xl" href="https://www.twitter.com/Piriform" target="_blank">Twitter</a>
                </div>
                <div class="comp__variable">

                    <div class="social-followers-proto__main-action social-followers-proto__tw--disabled">
                        <a title="Follow Piriform (@piriform) on Twitter" class="twitter-follow-button" target="_blank" href="https://twitter.com/piriform" data-show-count="true" data-show-screen-name="false"></a>
                    </div>

                    <div class="social-followers-proto__secondary-action">
                        <a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fwww.ccleaner.com%2F&text=Check%20out%20these%20Piriform%20products&hashtags=CCleaner,Defraggler,Recuva,Speccy" class="btn btn--social--tw">Share</a>
                    </div>

                </div>
            </div>

        </div>
        <div class="col--custom-fixed">

            <div class="comp">
                <div class="comp__fixed">
                    <a class="alt-social-icon alt-social-icon--xl icon-alt--linkedin--xl" href="https://www.linkedin.com/company/piriform" target="_blank">Linkedin</a>
                </div>
                <div class="comp__variable">

                    <div class="social-followers-proto__main-action social-followers-proto__in--disabled" data-behavior="social-module__linkedin-follow">
                        <a title="Follow Piriform on Linkedin" class="linkedin-follow-button" target="_blank" href="https://www.linkedin.com/company/piriform"></a>
                    </div>

                    <div class="social-followers-proto__secondary-action">
                        <a href="http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.ccleaner.com&title=Piriform%20-%20makers%20of%20CCleaner&source=https%3A%2F%2Fwww.ccleaner.com" target="_blank" class="btn btn--social--in" data-behavior="social-module__linkedin-share">Share</a>
                    </div>

                </div>
            </div>

        </div>

    </div>

</div>
			</div>

			<!-- Other products -->
			<div class="band">
				<div style="max-width: 600px; margin: 0 auto;" class="pl--xs pr--xs pl--xl--desk pl--lg--lap-and-up"><h2>Do you like Speccy?</h2><div class="media mb"><a class="media__img" href="/ccleaner/"><img alt="CCleaner" src="//s1.pir.fm/pf/icon/cc_32.png" /></a><div class="media__body">Then why not try <strong>CCleaner</strong>, our Optimization and Cleaning tool. <br /><a href="/ccleaner/">
              Click here for more info about CCleaner</a></div></div><div class="media mb"><a class="media__img" href="/ccleaner-mac/"><img alt="CCleaner Mac" src="//s1.pir.fm/pf/icon/cc_32.png" /></a><div class="media__body">Or how about <strong>CCleaner Mac</strong>, our Optimization and Cleaning tool. <br /><a href="/ccleaner-mac/">
              Click here for more info about CCleaner Mac</a></div></div><div class="media mb"><a class="media__img" href="/defraggler/"><img alt="Defraggler" src="//s1.pir.fm/pf/icon/df_32.png" /></a><div class="media__body">Or <strong>Defraggler</strong>, our Disk Defragmentation tool. <br /><a href="/defraggler/">
              Click here for more info about Defraggler</a></div></div><div class="media mb"><a class="media__img" href="/recuva/"><img alt="Recuva" src="//s1.pir.fm/pf/icon/rc_32.png" /></a><div class="media__body">Or <strong>Recuva</strong>, our File Recovery tool. <br /><a href="/recuva/">
              Click here for more info about Recuva</a></div></div></div>
			</div>				
			
			<!-- Additional -->
			
			
		</main>
	  
	</div>


	

	
  <footer class="page-foot ">
    <div class="container">
      <div class="page-foot--business__wrapper">



        <div class="grid">
          <div class="footer-nav  col-3-4--lap-and-up col-4-5--desk col-3-4--wide">
            <div class="grid">
              <div class="col-1-2 col-1-4--palm-and-up">
                <ul>
                  <li><h5><a href="/" id="GTM__bottom-nav__home">Home</a></h5></li>
                  <li><a href="/news/blog" id="GTM__bottom-nav__home__news">Blog</a></li>
                  <li><a href="/products" id="GTM__bottom-nav__home__products">Products</a></li>
                  <li><a href="/business" id="GTM__bottom-nav__home__solutions">Solutions</a></li>
                  <li><a href="/about" id="GTM__bottom-nav__home__about">About</a></li>
                </ul>
              </div>
              <div class="col-1-2 col-1-4--palm-and-up">
                <ul>
                  <li><h5><a href="/download" id="GTM__bottom-nav__download">Download</a></h5></li>
                  <li><a href="/ccleaner/download" id="GTM__bottom-nav__download__ccleaner">CCleaner</a></li>
                  <li><a href="/defraggler/download" id="GTM__bottom-nav__download__defraggler">Defraggler</a></li>
                  <li><a href="/recuva/download" id="GTM__bottom-nav__download__recuva">Recuva</a></li>
                  <li><a href="/speccy/download" id="GTM__bottom-nav__download__speccy">Speccy</a></li>
                </ul>
              </div>
              <div class="col-1-2 col-1-4--palm-and-up">
                <ul>
                  <li><h5><a href="/support" id="GTM__bottom-nav__support">Support</a></h5></li>
                  <li><a href="http://support.ccleaner.com/" id="GTM__bottom-nav__support__my-account">My Account</a></li>
                  <li><a href="/docs" id="GTM__bottom-nav__support__documentation">Documentation</a></li>
                  <li><a href="http://forum.ccleaner.com" target="_blank" id="GTM__bottom-nav__support__community">Community</a></li>
                </ul>
              </div>
              <div class="col-1-2 col-1-4--palm-and-up">
                <ul>
                  <li><h5><a href="/business" id="GTM__bottom-nav__business">Business</a></h5></li>
                  <li><a href="/business/ccleaner-network-edition" id="GTM__bottom-nav__business__ccleaner-network">CCleaner Network</a></li>
                  <li><a href="/business/ccleaner-business-edition" id="GTM__bottom-nav__business__ccleaner-business">CCleaner Business</a></li>
                  <li><a href="/business/ccleaner-cloud" id="GTM__bottom-nav__business__ccleaner-cloud">CCleaner Cloud</a></li>
                </ul>
              </div>
            </div>
          </div>
          <div class="col-1-4--lap-and-up col-1-5--desk col-1-4--wide">
            <div class="page-foot__social">
              <a class="social-icon icon--fb" href="https://www.facebook.com/Piriform" target="_blank" id="GTM__bottom-nav__social__facebook">Facebook</a>
              <a class="social-icon icon--twitter" href="http://twitter.com/piriform" target="_blank" id="GTM__bottom-nav__social__twitter">Twitter</a>
              <a class="social-icon icon--gplus" href="https://plus.google.com/+piriform" target="_blank" id="GTM__bottom-nav__social__google-plus">Google+</a><!--
              --><br>
              <a class="social-icon icon--rss" href="http://feeds.feedburner.com/piriform" target="_blank" id="GTM__bottom-nav__social__rss">RSS</a>
              <a class="social-icon icon--linkedin" href="http://www.linkedin.com/company/piriform" target="_blank" id="GTM__bottom-nav__social__linkedin">LinkedIn</a>
              <a class="social-icon icon--youtube" href="http://www.youtube.com/ccleaner" target="_blank" id="GTM__bottom-nav__social__youtube">YouTube</a>
            </div>
          </div>
        </div>

        <div class="page-foot__copyright">
          &copy; Copyright 2005-2019 Piriform Ltd - All rights reserved - <a href="/about/terms-of-use" id="GTM__footer__terms-of-use">Terms of Use</a> - <a href="/about/privacy-policy" id="GTM__footer__privacy-policy">Privacy Policy</a> - <a href="/about/cookies-policy" id="GTM__footer__cookies-policy">Cookies Policy</a>
        <br />
        CCleaner, Defraggler, Recuva and Speccy are all registered trademarks of Piriform Ltd.
        </div>
        
      </div>
    </div>
  </footer>  
  <div class="fixed-banner sales-banner pa--xs">
  <p class="text-center color--white text-semibold fs-14">
    Looking to clean up your business?
    <a id="gtm-smb-productbar--cta" href="/business/ccleaner-business-edition/lp" class="fixed-banner__btn  btn btn--alt btn--simple btn--simple--rounded">
      <span class="fixed-banner__btn-icon fixed-banner__btn-icon--email"></span>
      Learn More
    </a>
  </p>
  <span id="gtm-smb-productbar--close-btn"
        title="Hide this banner"
        class="fixed-banner__close fs-22 color--white"
        onclick="piriform.utilities.removeClass({ selector: 'body', classToRemove: 'show-sales-banner' })">&times;</span>
</div>  
  <div class="fixed-banner cookie-banner pa--xs" data-behavior="cookie-banner-module">
    <div class="container container--pocket-narrow text-center color--white text-semibold fs-14">
      <p>We use cookies on our website to personalize your experience, like showing you prices in your local currency, <br class="hide show-desk" />or learning which parts of our site people use the most. By using our site you accept our <a id="gtm__link--PF-cookiePolicy" href="/about/cookies-policy" target="_blank" title="CCleaner cookie policy">use of cookies</a>.</p>
    </div>
    <span id="gtm__UI--PF-closeCookieBanner"
          title="Hide this banner"
          class="fixed-banner__close fs-22 color--white"
          onclick="piriform.utilities.removeClass({ selector: 'body', classToRemove: 'show-cookie-banner' })">&times;</span>
  </div>  
  <script type="text/javascript">
    var piriform = piriform || {};
    piriform.constants = piriform.constants || {};

    piriform.constants.countryCode = 'PL'; // "fastly-GeoIP-CountryCode"
    piriform.constants.mycc = ''; // "HTTP_X_COUNTRY_SHORT"
    piriform.constants.regionCode = 'EU';

    piriform.constants.rpList = 'WyAgeyAgICAiZnJpZW5kbHlOYW1lIjogIkNvbW1pc3Npb24gSnVuY3Rpb24iLCAgICAiSUQiOiAiQ2djT0F3b0RCdzAiLCAgICAicXVlcnlTdHJpbmdQYXJhbWV0ZXJOYW1lIjogInNvdXJjZSIsICAgICJjb29raWVFeHBpcnkiOiA0NSwgICAgInhTb3VyY2VWYWx1ZSI6IDkwMSwgICAgImFiYnIiOiAiY2oiLCAgICAicGFzc3Rocm91Z2hRUyI6ICJjamV2ZW50IiAgfV0=';
    piriform.constants.ccpPOList = 'WyAgeyAgICAia2V5IjogIlVTX2Rpc2NvdW50UGVyY2VudGFnZVVuZm9ybWF0dGVkIiwgICAgInZhbHVlIjogIjIwIiAgfSwgIHsgICAgImtleSI6ICJVU19ncm9zc1ByaWNlRm9ybWF0dGVkIiwgICAgInZhbHVlIjogIiQxOS45NSIgIH0sICB7ICAgICJrZXkiOiAiVVNfc3RhcnRpbmdQcmljZUZvcm1hdHRlZCIsICAgICJ2YWx1ZSI6ICIkMjQuOTUiICB9LCAgeyAgICAia2V5IjogIlVTX2Rpc2NvdW50Rm9ybWF0dGVkIiwgICAgInZhbHVlIjogIiQ1IiAgfSwgIHsgICAgImtleSI6ICJDQV9kaXNjb3VudFBlcmNlbnRhZ2VVbmZvcm1hdHRlZCIsICAgICJ2YWx1ZSI6ICIyMCIgIH0sICB7ICAgICJrZXkiOiAiQ0FfZ3Jvc3NQcmljZUZvcm1hdHRlZCIsICAgICJ2YWx1ZSI6ICIkMTkuOTUiICB9LCAgeyAgICAia2V5IjogIkNBX3N0YXJ0aW5nUHJpY2VGb3JtYXR0ZWQiLCAgICAidmFsdWUiOiAiJDI0Ljk1IiAgfSwgIHsgICAgImtleSI6ICJDQV9kaXNjb3VudEZvcm1hdHRlZCIsICAgICJ2YWx1ZSI6ICIkNSIgIH0sICB7ICAgICJrZXkiOiAiQVVfZGlzY291bnRQZXJjZW50YWdlVW5mb3JtYXR0ZWQiLCAgICAidmFsdWUiOiAiMzAiICB9LCAgeyAgICAia2V5IjogIkFVX2dyb3NzUHJpY2VGb3JtYXR0ZWQiLCAgICAidmFsdWUiOiAiQSQxOS45NSIgIH0sICB7ICAgICJrZXkiOiAiQVVfc3RhcnRpbmdQcmljZUZvcm1hdHRlZCIsICAgICJ2YWx1ZSI6ICJBJDI5Ljk1IiAgfSwgIHsgICAgImtleSI6ICJBVV9kaXNjb3VudEZvcm1hdHRlZCIsICAgICJ2YWx1ZSI6ICJBJDEwIiAgfSwgIHsgICAgImtleSI6ICJDSF9kaXNjb3VudFBlcmNlbnRhZ2VVbmZvcm1hdHRlZCIsICAgICJ2YWx1ZSI6ICI1MCIgIH0sICB7ICAgICJrZXkiOiAiQ0hfZ3Jvc3NQcmljZUZvcm1hdHRlZCIsICAgICJ2YWx1ZSI6ICJDSEYxOS45NSIgIH0sICB7ICAgICJrZXkiOiAiQ0hfc3RhcnRpbmdQcmljZUZvcm1hdHRlZCIsICAgICJ2YWx1ZSI6ICJDSEYzOS45NSIgIH0sICB7ICAgICJrZXkiOiAiQ0hfZGlzY291bnRGb3JtYXR0ZWQiLCAgICAidmFsdWUiOiAiQ0hGMjAiICB9LCAgeyAgICAia2V5IjogIlZXT19FVV9ob21lLWRvd25sb2FkY2VudGVyX1VSTCIsICAgICJ2YWx1ZSI6ICJodHRwczovL3NlY3VyZS5jY2xlYW5lci5jb20vNTAyL3V1cmwteGtheWh1Z2d5byIgIH0sICB7ICAgICJrZXkiOiAiVldPX0VVX0xPV19wcm9kdWN0X1VSTCIsICAgICJ2YWx1ZSI6ICJodHRwczovL3NlY3VyZS5jY2xlYW5lci5jb20vNTAyL3V1cmwta3o1MGYxYTc5NT94LXNvdXJjZT0xNyIgIH0sICB7ICAgICJrZXkiOiAiVldPX0VVX0xPV19kb3dubG9hZF9VUkwiLCAgICAidmFsdWUiOiAiaHR0cHM6Ly9zZWN1cmUuY2NsZWFuZXIuY29tLzUwMi91dXJsLWt6NTBmMWE3OTU/eC1zb3VyY2U9MTUiICB9LCAgeyAgICAia2V5IjogIlZXT19FVV9MT1dfcmVsZWFzZW5vdGVzX1VSTCIsICAgICJ2YWx1ZSI6ICJodHRwczovL3NlY3VyZS5jY2xlYW5lci5jb20vNTAyL3V1cmwta3o1MGYxYTc5NT94LXNvdXJjZT0yNTAiICB9LCAgeyAgICAia2V5IjogIlZXT19FVV9MT1dfdXBkYXRlX1VSTCIsICAgICJ2YWx1ZSI6ICJodHRwczovL3NlY3VyZS5jY2xlYW5lci5jb20vNTAyL3V1cmwta3o1MGYxYTc5NT94LXNvdXJjZT0xMyIgIH0sICB7ICAgICJrZXkiOiAiVldPX0VVX0xPV19kb3dubG9hZHVwZ3JhZGVfVVJMIiwgICAgInZhbHVlIjogImh0dHBzOi8vc2VjdXJlLmNjbGVhbmVyLmNvbS81MDIvdXVybC1rejUwZjFhNzk1P3gtc291cmNlPTE2IiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfTUlEX3Byb2R1Y3RfVVJMIiwgICAgInZhbHVlIjogImh0dHBzOi8vc2VjdXJlLmNjbGVhbmVyLmNvbS81MDIvdXVybC1iNmN0a3YzMWZvP3gtc291cmNlPTE3IiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfTUlEX2Rvd25sb2FkX1VSTCIsICAgICJ2YWx1ZSI6ICJodHRwczovL3NlY3VyZS5jY2xlYW5lci5jb20vNTAyL3V1cmwtYjZjdGt2MzFmbz94LXNvdXJjZT0xNSIgIH0sICB7ICAgICJrZXkiOiAiVldPX0VVX01JRF9yZWxlYXNlbm90ZXNfVVJMIiwgICAgInZhbHVlIjogImh0dHBzOi8vc2VjdXJlLmNjbGVhbmVyLmNvbS81MDIvdXVybC1iNmN0a3YzMWZvP3gtc291cmNlPTI1MCIgIH0sICB7ICAgICJrZXkiOiAiVldPX0VVX01JRF91cGRhdGVfVVJMIiwgICAgInZhbHVlIjogImh0dHBzOi8vc2VjdXJlLmNjbGVhbmVyLmNvbS81MDIvdXVybC1iNmN0a3YzMWZvP3gtc291cmNlPTEzIiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfTUlEX2Rvd25sb2FkdXBncmFkZV9VUkwiLCAgICAidmFsdWUiOiAiaHR0cHM6Ly9zZWN1cmUuY2NsZWFuZXIuY29tLzUwMi91dXJsLWI2Y3RrdjMxZm8/eC1zb3VyY2U9MTYiICB9LCAgeyAgICAia2V5IjogIlZXT19FVV9ISUdIX3Byb2R1Y3RfVVJMIiwgICAgInZhbHVlIjogImh0dHBzOi8vc2VjdXJlLmNjbGVhbmVyLmNvbS81MDIvdXVybC12dHRvbmR5ZjExP3gtc291cmNlPTE3IiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfSElHSF9kb3dubG9hZF9VUkwiLCAgICAidmFsdWUiOiAiaHR0cHM6Ly9zZWN1cmUuY2NsZWFuZXIuY29tLzUwMi91dXJsLXZ0dG9uZHlmMTE/eC1zb3VyY2U9MTUiICB9LCAgeyAgICAia2V5IjogIlZXT19FVV9ISUdIX3JlbGVhc2Vub3Rlc19VUkwiLCAgICAidmFsdWUiOiAiaHR0cHM6Ly9zZWN1cmUuY2NsZWFuZXIuY29tLzUwMi91dXJsLXZ0dG9uZHlmMTE/eC1zb3VyY2U9MjUwIiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfSElHSF91cGRhdGVfVVJMIiwgICAgInZhbHVlIjogImh0dHBzOi8vc2VjdXJlLmNjbGVhbmVyLmNvbS81MDIvdXVybC15M3I2NTV4NG5lIiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfSElHSF9kb3dubG9hZHVwZ3JhZGVfVVJMIiwgICAgInZhbHVlIjogImh0dHBzOi8vc2VjdXJlLmNjbGVhbmVyLmNvbS81MDIvdXVybC1iNmN0a3YzMWZvP3gtc291cmNlPTE2IiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfTE9XX1BSSUNFX2xpc3QiLCAgICAidmFsdWUiOiAi4oKsMjkuOTUiICB9LCAgeyAgICAia2V5IjogIlZXT19FVV9MT1dfUFJJQ0VfYWN0dWFsIiwgICAgInZhbHVlIjogIuKCrDE0Ljk1IiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfTE9XX1BSSUNFX2Rpc2NvdW50IiwgICAgInZhbHVlIjogIuKCrDE1IiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfTE9XX1BSSUNFX2Rpc2NvdW50UGVyY2VudGFnZSIsICAgICJ2YWx1ZSI6ICI1MCIgIH0sICB7ICAgICJrZXkiOiAiVldPX0VVX01JRF9QUklDRV9saXN0IiwgICAgInZhbHVlIjogIuKCrDI5Ljk1IiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfTUlEX1BSSUNFX2FjdHVhbCIsICAgICJ2YWx1ZSI6ICLigqwxOS45NSIgIH0sICB7ICAgICJrZXkiOiAiVldPX0VVX01JRF9QUklDRV9kaXNjb3VudCIsICAgICJ2YWx1ZSI6ICLigqwxMCIgIH0sICB7ICAgICJrZXkiOiAiVldPX0VVX01JRF9QUklDRV9kaXNjb3VudFBlcmNlbnRhZ2UiLCAgICAidmFsdWUiOiAiMzAiICB9LCAgeyAgICAia2V5IjogIlZXT19FVV9ISUdIX1BSSUNFX1YxX2xpc3QiLCAgICAidmFsdWUiOiAi4oKsMjkuOTUiICB9LCAgeyAgICAia2V5IjogIlZXT19FVV9ISUdIX1BSSUNFX1YxX2FjdHVhbCIsICAgICJ2YWx1ZSI6ICLigqwyNC45NSIgIH0sICB7ICAgICJrZXkiOiAiVldPX0VVX0hJR0hfUFJJQ0VfVjFfZGlzY291bnQiLCAgICAidmFsdWUiOiAi4oKsNSIgIH0sICB7ICAgICJrZXkiOiAiVldPX0VVX0hJR0hfUFJJQ0VfVjFfZGlzY291bnRQZXJjZW50YWdlIiwgICAgInZhbHVlIjogIjE1IiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfSElHSF9QUklDRV9WMl9saXN0IiwgICAgInZhbHVlIjogIuKCrDI5Ljk1IiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfSElHSF9QUklDRV9WMl9hY3R1YWwiLCAgICAidmFsdWUiOiAi4oKsMTkuOTUiICB9LCAgeyAgICAia2V5IjogIlZXT19FVV9ISUdIX1BSSUNFX1YyX2Rpc2NvdW50IiwgICAgInZhbHVlIjogIuKCrDEwIiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfSElHSF9QUklDRV9WMl9kaXNjb3VudFBlcmNlbnRhZ2UiLCAgICAidmFsdWUiOiAiMzAiICB9XQ==';
    piriform.constants.ccppPOList = 'WyAgeyAgICAia2V5IjogIlZXT19FVV9wcm9kdWN0X1VSTCIsICAgICJ2YWx1ZSI6ICJodHRwczovL3NlY3VyZS5jY2xlYW5lci5jb20vNTAyL3V1cmwtZm41azFlcWR5eD94LXNvdXJjZT0xNyIgIH0sICB7ICAgICJrZXkiOiAiVldPX0VVX2Rvd25sb2FkX1VSTCIsICAgICJ2YWx1ZSI6ICJodHRwczovL3NlY3VyZS5jY2xlYW5lci5jb20vNTAyL3V1cmwtZm41azFlcWR5eD94LXNvdXJjZT0xNSIgIH0sICB7ICAgICJrZXkiOiAiVldPX0VVX2Rvd25sb2FkY2VudGVyX1VSTCIsICAgICJ2YWx1ZSI6ICJodHRwczovL3NlY3VyZS5jY2xlYW5lci5jb20vNTAyL3V1cmwtZm41azFlcWR5eD94LXNvdXJjZT0xOSIgIH0sICB7ICAgICJrZXkiOiAiVldPX0VVX2Rvd25sb2FkdXBncmFkZV9VUkwiLCAgICAidmFsdWUiOiAiaHR0cHM6Ly9zZWN1cmUuY2NsZWFuZXIuY29tLzUwMi91dXJsLWZuNWsxZXFkeXg/eC1zb3VyY2U9MTYiICB9LCAgeyAgICAia2V5IjogIlZXT19FVV9QUklDRV9saXN0IiwgICAgInZhbHVlIjogIuKCrDQ5Ljk1IiAgfSwgIHsgICAgImtleSI6ICJWV09fRVVfUFJJQ0VfYWN0dWFsIiwgICAgInZhbHVlIjogIuKCrDM5Ljk1IiAgfV0=';
</script>
  <script type="text/javascript" src="/scripts/dist/vendor.min.js?v=CQYDAwIPDQs"></script>
  <script type="text/javascript" src="/scripts/dist/piriform.app.min.js?v=CQYDAwIPDQs"></script>

  <script type="text/javascript" src="/scripts/dist/piriform.bootstrap.bundle.js?v=CQYDAwIPDQs"></script>
  <script type="text/javascript" src="/scripts/dist/piriform.commons.bundle.js?v=CQYDAwIPDQs"></script>
  <script type="text/javascript" src="/scripts/dist/piriform.consumer.bundle.js?v=CQYDAwIPDQs"></script>
  <!--[if (gte IE 8)|(!IE)]><!-->
    <script type="text/javascript">
      function piriform_recaptcha_onloadCallback() { piriform.recaptcha.onloadCallback(); }
    </script>
    <script src="https://www.google.com/recaptcha/api.js?onload=piriform_recaptcha_onloadCallback&render=explicit"
      defer async>
    </script>
  <!--<![endif]-->
  
  <!-- Quantcast Tag -->
	<script type="text/javascript">
	var _qevents = _qevents || [];
	(function() {
	var elem = document.createElement('script');
	elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
	elem.async = true;
	elem.type = "text/javascript";
	var scpt = document.getElementsByTagName('script')[0];
	scpt.parentNode.insertBefore(elem, scpt);
	})();
	_qevents.push({qacct:"p-2Vcf5EEk4gbDT"});
	</script>
	<noscript>
	<div style="display:none;">
	<img src="//pixel.quantserve.com/pixel/p-2Vcf5EEk4gbDT.gif" border="0" height="1" width="1" alt="Quantcast"/>
	</div>
	</noscript>
  <!-- End Quantcast tag -->
	
  

  </body>
  </html>
