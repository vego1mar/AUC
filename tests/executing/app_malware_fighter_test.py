import unittest
import executing as ex
import helpers as hp
import requesting as rq
import triggers as tr


class MalwareFighterTestData:
    APP_NAME = "Malware Fighter"
    WEB_SPACE_URL_1 = "https://www.iobit.com/en/malware-fighter.php"
    WEB_SPACE_URL_2 = "https://www.dobreprogramy.pl/IObit-Malware-Fighter-Free,Program,Windows,25512.html"
    WEB_SPACE_HTML_PATH_2 = r"../resources/imf_web_Windows.base64"

    def __init__(self):
        self.execution_order = ex.ExecutionOrder()
        self.execution_order.add_entry(get_entry_1(), True)
        self.execution_order.add_entry(get_entry_2(), True)
        self.expected_win_ver = '7.0.2.5228'
        self.expected_win_date = '2019-05-08'
        self.expected_win_size = '60,42 MB'


def get_win_exe():
    return 'https://en.softonic.com/download-launch?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkb3dubG9hZFR5cGUiO' \
           'iJpbnRlcm5hbERvd25sb2FkIiwiZG93bmxvYWRVcmwiOiJodHRwczovL2dzZi1mbC5zb2Z0b25pYy5jb20vOTZlLzNlMC8xZTM3ODU0Y' \
           'zRlYzRkOWY1ZDIxZTE3NjRiNTEyYTcyNTQ0L0lPYml0LU1hbHdhcmUtRmlnaHRlci1TZXR1cC5leGU_RXhwaXJlcz0xNTU1Mjc2Mzg5J' \
           'lNpZ25hdHVyZT01NmI5MDdkNTllNzMwZTEyZjNlZWNlZmM2OTRjY2QxYWM3YjRjYzY0JlNEX3VzZWQ9JmNoYW5uZWw9V0VCJmZkaD1ub' \
           'yZpZF9maWxlPTBhNjdjOTNlLTk2ZDUtMTFlNi05YzIwLTAwMTYzZWQ4MzNlNyZpbnN0YW5jZT1zb2Z0b25pY19lbiZ0eXBlPVBST0dSQ' \
           'U0mdXJsPWh0dHBzOi8vaW9iaXQtbWFsd2FyZS1maWdodGVyLmVuLnNvZnRvbmljLmNvbSZGaWxlbmFtZT1JT2JpdC1NYWx3YXJlLUZpZ' \
           '2h0ZXItU2V0dXAuZXhlIiwiYXBwSWQiOiIwYTY3YzkzZS05NmQ1LTExZTYtOWMyMC0wMDE2M2VkODMzZTciLCJpYXQiOjE1NTUyMzcxM' \
           'zYsImV4cCI6MTU1NTI0MDczNn0.vRLw973fBN5oNmPGjonUKmkmqVQLnelqdc8KUjAv_No'


def get_entry_1():
    app_website = str(MalwareFighterTestData.WEB_SPACE_URL_1)
    req_01 = rq.InvocationRequest(rq.Target(rq.SpaceName.WORK, True, "app_website"), tr.SetWorkspace(app_website))
    req_02 = rq.InvocationRequest(rq.Target(rq.SpaceName.WORK, True, "win_exe"), tr.SetWorkspace(get_win_exe()))
    chain_request = (req_01, req_02)
    return ex.ExecutionOrderEntry(chain_request, str())


def get_entry_2():
    web_space = hp.get_web_space(MalwareFighterTestData.WEB_SPACE_HTML_PATH_2)
    return hp.get_entry_for_dobreprogramy_pl(web_space, "win_ver", "win_date", "win_size", (1, 1))


class MalwareFighterTest(unittest.TestCase):
    def test_package_collecting(self):
        # given
        dt = MalwareFighterTestData()
        collector = ex.InfoCollector(dt.APP_NAME, dt.execution_order)

        # when
        collector.collect()

        # then
        self.assertEqual(dt.APP_NAME, collector.get_app_name())
        self.assertEqual(dt.WEB_SPACE_URL_1, collector.get_collectibles()['app_website'])
        self.assertEqual(get_win_exe(), collector.get_collectibles()['win_exe'])
        self.assertEqual(dt.expected_win_ver, collector.get_collectibles()['win_ver'])
        self.assertEqual(dt.expected_win_date, collector.get_collectibles()['win_date'])
        self.assertEqual(dt.expected_win_size, collector.get_collectibles()['win_size'])


if __name__ == '__main__':
    unittest.main()
