    <!DOCTYPE html><html class="
            native-mode prices-in-pln lang--pl-pl curr-symbol-after
                        lato-20
            has-new-menu
            
        "
                    ng-app="gog"
                lang="pl-PL"
    ><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><title>
        GOG.com		</title><meta name="viewport" content="width=device-width"><meta name="routes_allowed:0" content="frontpage"><meta name="routes_allowed:1" content="gog_plugin_galaxy_landing_page_homepage"><meta name="routes_allowed:2" content="gog_website_promo_divinity_hero_homepage"><meta name="routes_allowed:3" content="gog_website_promo_summer2016_promo_xp_page"><meta name="routes_allowed:4" content="pinata_landing_page"><meta name="routes_allowed:5" content="gog_website_partner_page"><meta name="routes_allowed:6" content="hackathon"><meta name="description" content="Download the best classic and new games on Windows, Mac &amp; Linux. A vast selection of titles, DRM-free, with free goodies and 30-day money-back guarantee."><meta name="fb:app_id" content="132032436846771"><meta name="og:type" property="og:type" content="game"><meta name="og:site_name" property="og:site_name" content="GOG.com"><meta name="og:title" property="og:title" content="GOG Galaxy"><meta name="og:url" property="og:url" content="http://www.gog.com/galaxy"><meta name="og:image" property="og:image" content="https://images.gog.com/844bac20026bcb6faf3d308fe9ad38365b3df6d1b5c4b74d0db309b426c997c5.jpg"><meta name="og:description" property="og:description" content="GOG Galaxy is a fully optional client that installs and updates your games alongside online multiplayer, achievements, chat, game-time tracking & more - all optional!"><meta name="keywords" content=""><link rel="shortcut icon" href="/favicon.ico?3"><link rel="apple-touch-icon" href="/apple-touch-icon-57x57.png" sizes="57x57"><link rel="apple-touch-icon" href="/apple-touch-icon-72x72.png" sizes="72x72"><link rel="apple-touch-icon" href="/apple-touch-icon-76x76.png" sizes="76x76"><link rel="apple-touch-icon" href="/apple-touch-icon-114x114.png" sizes="114x114"><link rel="apple-touch-icon" href="/apple-touch-icon-120x120.png" sizes="120x120"><link rel="apple-touch-icon" href="/apple-touch-icon-144x144.png" sizes="144x144"><link rel="apple-touch-icon" href="/apple-touch-icon-152x152.png" sizes="152x152"><link rel="apple-touch-icon" href="/apple-touch-icon-180x180.png" sizes="180x180"><link rel="apple-touch-icon" href="/apple-touch-icon.png"><link rel="alternate" type="application/rss+xml" title="Aktualności GOG.com" href="https://www.gog.com/news/feed" /><script>
            !function(){if('PerformanceLongTaskTiming' in window){var g=window.__tti={e:[]};
            g.o=new PerformanceObserver(function(l){g.e=g.e.concat(l.getEntries())});
            g.o.observe({entryTypes:['longtask']})}}();
            </script><script src="/csrf-cookie"></script><style type="text/css">
            [ng-cloak], .ng-cloak, .ng-hide { display:none !important; }
        </style><link href='//fonts.googleapis.com/css?family=Open+Sans:300,400,600,700' rel='stylesheet'><link href="//www4-static.gog.com/css/19be8dd-522529f.css" rel="stylesheet">


<link rel="stylesheet" type="text/css" href="https://menu-static.gog.com/assets/css/menu.a4472f296578bec5ea3ff456c6ea9a651fcd0dfc.css">
<link href="//www4-static.gog.com/css/36de127-1cb8cd5.css" rel="stylesheet"><style type="text/css">.menu-friend{box-sizing:content-box}.cookies{z-index:199}.inapp-product__descr,a[href="https://www.gog.com/games?page=1&sort=popularity&tab=on_sale"] .big-spot__action{display:none} .product-tile *, .product-tile__cover:before { transition: none !important; } @media (max-width: 360px) { .now-on-sale__content{margin-bottom: 20px;} }.carousel--paused [product-tile-id="1841195376"] .big-spot__background { filter:none; -ms-filter:none; -moz-filter:none; background:none; opacity:1; }
.carousel--paused [product-tile-id="1841195376"] .big-spot__background { filter:none; -ms-filter:none; -moz-filter:none; background:none; opacity:1; }
.carousel--paused [product-tile-id="1841195376"] .big-spot__gradien { opacity:1; }
.carousel--paused [product-tile-id="1841195376"] .big-spot__gradien { opacity:1; }
.carousel--paused [product-tile-id="1841195376"] .big-spot__media { opacity:0; }
[product-tile-id="1841195376"] .product-tile__platforms {visibility:hidden}</style></head><body
        ng-init="userModel = {isUser: false, isAnonymous: false, bodyClass:false}; bodyModel = {bodyClass: ''}"
        ng-class="{'is-user':userModel.isUser, 'is-anonymous':userModel.isAnonymous}"
        class="{{ bodyModel.bodyClass }} page_galaxy_landing_page"
        gog-string-format
            ><svg style="width:0;height:0;overflow:hidden;position:fixed;visibility:hidden"><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-camera"><g id="camera-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M30.2,7.5h-3.4c-0.5,0-0.9-0.3-1.2-0.7l-2-3.7c-0.2-0.4-0.7-0.7-1.2-0.7h-9.9
		c-0.5,0-0.9,0.3-1.2,0.7l-2,3.7C9.2,7.2,8.7,7.5,8.3,7.5H4.8c-2.3,0-4.3,1.5-4.3,4V28c0,2.5,1.9,4.5,4.3,4.5h25.5
		c2.3,0,4.2-2,4.2-4.5V11.5C34.5,9.1,32.6,7.5,30.2,7.5z M32.5,29.1c0,0.8-0.6,1.5-1.4,1.5H3.9c-0.8,0-1.4-0.7-1.4-1.5V11
		c0-0.8,0.6-1.5,1.4-1.5h5.5c0.5,0,0.9-0.3,1.2-0.7l2-3.3c0.2-0.4,0.7-0.9,1.2-0.9h7.6c0.5,0,0.9,0.4,1.2,0.8l1.8,3.5
		c0.2,0.4,0.7,0.7,1.2,0.7h5.7c0.8,0,1.4,0.7,1.4,1.5V29.1z M17.5,13.5c-3.3,0-6,2.7-6,6c0,3.3,2.7,6,6,6s6-2.7,6-6
		C23.5,16.2,20.8,13.5,17.5,13.5z M17.5,23.5c-2.2,0-4-1.8-4-4c0-2.2,1.8-4,4-4s4,1.8,4,4C21.5,21.7,19.7,23.5,17.5,23.5z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-chat"><g id="chat-_x33_5px"><path d="M34.4,23.9L32.1,18c0.7-1.4,1.5-2.9,1.5-4.5c0-6.1-4.7-11-11-11c-4.9,0-8.3,2.6-9.9,7C6.7,9.9,1.4,15,1.4,20.8
		c0,1.6,0.9,3.1,1.5,4.5l-2.4,5.9c-0.1,0.3,0,0.9,0.2,1.1c0.2,0.2,0.4,0.3,0.6,0.3c0.1,0,0.2,0,0.3-0.1l5.2-1.6
		c1.9,1.3,4.2,1.7,6.6,1.7c5,0,9.3-3.8,10.9-8.1c2.1-0.1,2,0.2,3.8-0.9l5.2,1.6c0.1,0.1,0.2,0.1,0.3,0.1c0.2,0,0.4-0.1,0.6-0.3
		C34.5,24.7,34.6,24.3,34.4,23.9z M13.5,30.6c-2.2,0-4.3-0.4-6.1-1.7c-0.1-0.1-0.3-0.1-0.4-0.1c-0.1,0-0.2,0-0.3,0.1L3,29.8l1.8-4.2
		c0.1-0.3,0.1-0.6,0-0.8c-0.7-1.3-1.2-2.6-1.2-4c0-5,4.5-9.3,10-9.3c5.5,0,9,4.3,9,9.3C22.5,25.8,19,30.6,13.5,30.6z M28.4,21.5
		c-0.3-0.1-0.5-0.1-0.8,0.1c-1.4,1-1,0.8-2.7,1c0.1-0.6-0.4-1.1-0.4-1.7c0-5.8-4.1-10.9-10-11.3c1.6-3.3,4.1-4.9,8.1-4.9
		c5.5,0,9,4,9,9c0,1.4-0.7,2.7-1.4,4c-0.1,0.3-0.2,0.6,0,0.8l2,4.2L28.4,21.5z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-chip-smile"><g id="chip-smile-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M31.5,18.5c0.5,0,1-0.5,1-1s-0.5-1-1-1h-2v-4h2c0.5,0,1-0.5,1-1s-0.5-1-1-1h-2v-4
		c0-0.5-0.5-1-1-1h-4v-2c0-0.5-0.5-1-1-1s-1,0.5-1,1v2h-4v-2c0-0.5-0.5-1-1-1s-1,0.5-1,1v2h-4v-2c0-0.5-0.5-1-1-1s-1,0.5-1,1v2h-4
		c-0.5,0-1,0.5-1,1v4h-2c-0.5,0-1,0.5-1,1s0.5,1,1,1h2v4h-2c-0.5,0-1,0.5-1,1s0.5,1,1,1h2v4h-2c-0.5,0-1,0.5-1,1s0.5,1,1,1h2v4
		c0,0.5,0.5,1,1,1h4v2c0,0.5,0.5,1,1,1s1-0.5,1-1v-2h4v2c0,0.5,0.5,1,1,1s1-0.5,1-1v-2h4v2c0,0.5,0.5,1,1,1s1-0.5,1-1v-2h4
		c0.5,0,1-0.5,1-1v-4h2c0.5,0,1-0.5,1-1s-0.5-1-1-1h-2v-4H31.5z M27.5,26.5c0,0.5-0.5,1-1,1h-18c-0.5,0-1-0.5-1-1v-18
		c0-0.5,0.5-1,1-1h18c0.5,0,1,0.5,1,1V26.5z M17.5,22.5c-2,0-3-0.8-4.6-2.4l1.3-1.4c2.5,2.7,3.9,2.7,6.5,0l1.3,1.4
		C20.5,21.7,19.5,22.5,17.5,22.5z M14,12.5c0.8,0,1.5,0.7,1.5,1.5c0,0.8-0.7,1.5-1.5,1.5c-0.8,0-1.5-0.7-1.5-1.5
		C12.5,13.2,13.2,12.5,14,12.5z M21,12.5c0.8,0,1.5,0.7,1.5,1.5c0,0.8-0.7,1.5-1.5,1.5s-1.5-0.7-1.5-1.5
		C19.5,13.2,20.2,12.5,21,12.5z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-circle-plus-o"><g id="circle-plus-o-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M17.5,2.5c-8.3,0-15,6.7-15,15c0,8.3,6.7,15,15,15c8.3,0,15-6.7,15-15
		C32.5,9.2,25.8,2.5,17.5,2.5z M17.5,30.5c-7.2,0-13-5.8-13-13c0-7.2,5.8-13,13-13c7.2,0,13,5.8,13,13
		C30.5,24.7,24.7,30.5,17.5,30.5z M18.5,16.5h6v2h-6v6h-2v-6h-6v-2h6v-6h2V16.5z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-circle-thunder-o"><g id="circle-thunder-o-_x33_5px"><path d="M30.3,9.6c-4.4-7-13.6-9.2-20.6-4.9c-7,4.4-9.2,13.6-4.9,20.6c4.4,7,13.6,9.2,20.6,4.9S34.6,16.7,30.3,9.6z M6.5,24.3
		c-3.8-6.1-1.9-14.1,4.2-17.9c3.7-2.3,8-2.5,11.7-1l-9.9,13.8h3.7l-4.1,10C9.8,28.3,7.9,26.6,6.5,24.3z M24.3,28.5
		c-3.7,2.3-8.2,2.5-12,0.9l10.1-13.7h-3.7l3.9-10.1c2.3,1,4.4,2.7,5.8,5.1C32.3,16.8,30.4,24.8,24.3,28.5z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-clock-undo"><g id="clock-undo-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M33.5,17.4c0.1,8.3-6.6,15.1-14.9,15.1c-4.6,0-8.8-2-11.6-5.3l1.7-1.1
		c2.4,2.7,5.9,4.4,9.8,4.4c7.2-0.1,12.9-5.9,12.9-13.1c-0.1-7.2-5.9-12.9-13.1-12.9c-6.1,0-11.2,4.3-12.5,10h2.6l-3.5,6l-3.5-6h2.3
		c1.4-6.8,7.3-11.9,14.6-12C26.7,2.4,33.4,9.1,33.5,17.4z M18.7,9.5h-0.3c-0.4,0-0.8,0.3-0.8,0.8v7.5c0,0.3,0.2,0.5,0.4,0.7
		c0,0,0,0,0.1,0.1l5.7,2.9c0.5,0.3,1,0.1,1.3-0.4c0.3-0.5,0.1-1-0.4-1.3L19.4,17v-6.8C19.4,9.8,19.1,9.5,18.7,9.5z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-cloud-arrow"><g id="cloud-arrow-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M34.5,18v2c0,5-4,9-9,9h-4v-2h4c3.9,0,7-3.1,7-7v-2c0-1.5-0.4-2.8-1.2-3.9
		c-0.5-0.7-1.1-1.3-1.8-1.8c0-1.1-0.5-2.1-1.2-2.8C27.5,8.6,26.3,8,25,8c-0.8,0-1.6,0.2-2.3,0.6c-0.2,0.1-0.3,0.2-0.5,0.4
		c-0.4,0.3-0.8,0.7-1,1.2C21,9.8,20.8,9.4,20.6,9c-0.1-0.3-0.3-0.5-0.5-0.8C18.8,6.3,16.5,5,14,5c-3,0-5.6,1.8-6.8,4.3
		c-0.4,0.7-0.6,1.5-0.7,2.4c-0.8,0.4-1.5,0.8-2,1.4c-1.3,1.3-2,3-2,4.9v2c0,3.9,3.1,7,7,7h4v2h-4c-5,0-9-4-9-9v-2
		c0-3.2,1.7-6,4.2-7.6C5.7,6.1,9.5,3,14,3c3.2,0,6,1.5,7.7,3.9C22.7,6.3,23.8,6,25,6c3.1,0,5.8,2.2,6.4,5.2
		C33.3,12.8,34.5,15.3,34.5,18z M13.5,20L13.5,20L13.5,20L13.5,20C13.5,20,13.5,20,13.5,20z M17.5,14l-4,6c0,0,0,0,0,0h3v13h2V20h3
		L17.5,14z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-crossroads-sign"><g id="crossroads-sign-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M27.5,17h-9v-2h3V6h-3V4l-1-1l-1,1v2h-9l-5,4.5l5,4.5h9v2h-3v9h3v7h2v-7h9l5-4.5
		L27.5,17z M8.5,13l-3-2.5l3-2.5h11v5H8.5z M26.5,24h-11v-5h11l3,2.5L26.5,24z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-cup"><g id="cup-_x33_5px"><path d="M26,2.5C25.9,2.5,25.9,2.5,26,2.5c-0.1,0-0.1,0-0.1,0H9.5c-0.5,0-1,0.4-1,0.9v2.1h-4c0,0-0.1,0-0.1,0
		c-0.5,0-0.8,0.4-0.9,0.9c-0.2,2.6,0.1,8.2,1.3,10c1.1,1.8,2.1,3.8,4.8,4c0.4,0.5,0.9,0.1,1.4,0.5c0.8,0.7,2.6,1.1,3.1,1.7
		c0.4,0.4,0.4,2.9,0.5,3.4c-3.2,0.9-4.6,1.9-6,4.6c-0.2,0.5,0,1.6,0.4,1.9c0.1,0.1,0.3,0.1,0.4,0.1h8.4h7.5c0.5,0,1-0.4,1-0.9
		c0-0.1,0-0.9-0.1-1c-1.4-2.7-2.8-3.7-6-4.6c0.1-0.5,0.1-3,0.5-3.4c0.5-0.6,2.3-1,3.1-1.7c0.5-0.4,1,0,1.4-0.5c0,0,0,0,0,0
		c2.7-0.2,3.7-2.3,4.8-4c1.1-1.8,1.5-7.3,1.3-9.9c0-0.5-0.5-0.9-1-0.9h-4V3.4C26.5,2.9,26.5,2.5,26,2.5C26,2.5,26,2.5,26,2.5L26,2.5
		z M10.5,4.5h14v11.7c0,0,0,0.1,0,0.1c0.3,2.6-1.3,1.8-2.9,3.1c-0.8,0.6-1.6,0.7-2.3,1.5c-0.7,0.8-1.3,3.5-1.3,4.7
		c0,0.2,0.1,0.4,0.2,0.6c0.1,0.3,0.7,2.1,1,2.2c2.5,0.6,3.1,0.5,4.4,2h-5.7h-6.6c1.3-1.5,2-1.4,4.4-2c0.3-0.1,0.8-1.9,0.9-2.2
		c0.2-0.2,0.2-0.4,0.2-0.6c0-1.2-0.6-4-1.3-4.7c-0.7-0.8-2.6-0.8-3.3-1.4c-1.5-1.2-2.2-0.5-1.9-3.1c0,0,0-0.1,0-0.1V4.5L10.5,4.5z
		 M5.4,7.5h3.1v6.7h0c-0.1,1.2-0.4,2.4-0.1,3.2c-1.4-0.3-1.4-1.2-2-2.2C5.7,14.2,5.4,9.5,5.4,7.5z M26.5,7.5h3c0,2-0.3,6.7-1,7.8
		c-0.6,1-0.6,1.8-2.1,2.2c0.3-0.9,0.1-2.1,0-3.2h0V7.5z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-dandelion"><g id="dandelion-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M32.5,17.5c0,1.1-0.9,2-2,2c-0.9,0-1.7-0.6-1.9-1.5h-8.1
		c-0.1,0.4-0.2,0.8-0.5,1.2l5.6,5.6c0.7-0.4,1.7-0.3,2.3,0.3c0.8,0.8,0.8,2,0,2.8c-0.8,0.8-2,0.8-2.8,0c-0.7-0.7-0.7-1.7-0.3-2.4
		l-5.6-5.6c-0.4,0.3-0.8,0.5-1.3,0.5v8.1c0.9,0.2,1.5,1,1.5,1.9c0,1.1-0.9,2-2,2c-1.1,0-2-0.9-2-2c0-0.9,0.6-1.7,1.5-1.9v-8.1
		c-0.5-0.1-0.9-0.3-1.3-0.5L10,25.6c0.5,0.8,0.4,1.8-0.3,2.5c-0.8,0.8-2,0.8-2.8,0c-0.8-0.8-0.8-2,0-2.8c0.6-0.6,1.6-0.7,2.4-0.3
		l5.8-5.8c-0.2-0.3-0.4-0.8-0.5-1.2H6.4c-0.2,0.9-1,1.5-1.9,1.5c-1.1,0-2-0.9-2-2s0.9-2,2-2c0.9,0,1.7,0.6,1.9,1.5h8.1
		c0.1-0.5,0.3-0.9,0.5-1.3l-5.6-5.6c-0.8,0.5-1.8,0.4-2.4-0.3c-0.8-0.8-0.8-2,0-2.8c0.8-0.8,2-0.8,2.8,0c0.6,0.6,0.7,1.6,0.3,2.3
		l5.6,5.6c0.3-0.2,0.8-0.4,1.2-0.5V6.4c-0.9-0.2-1.5-1-1.5-1.9c0-1.1,0.9-2,2-2c1.1,0,2,0.9,2,2c0,0.9-0.6,1.7-1.5,1.9v8.1
		c0.4,0.1,0.8,0.2,1.2,0.5L25,9.3c-0.4-0.8-0.3-1.7,0.3-2.4c0.8-0.8,2-0.8,2.8,0c0.8,0.8,0.8,2,0,2.8c-0.7,0.7-1.7,0.8-2.5,0.3
		l-5.7,5.7c0.3,0.4,0.5,0.8,0.5,1.3h8.1c0.2-0.9,1-1.5,1.9-1.5C31.6,15.5,32.5,16.4,32.5,17.5z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-disk-arrow-down"><g id="disk-arrow-down-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M31.8,23.2L29.5,12c0,0-0.9-5.5-4.5-5.5h-3.5v2H25c2.5,0,2.5,3.5,2.5,3.5l1.8,8.8
		c-0.5-0.2-1.1-0.3-1.8-0.3h-20c-0.7,0-1.3,0.1-1.8,0.3L7.5,12c0,0,0-3.5,2.5-3.5h3.5v-2H10C6.4,6.5,5.5,12,5.5,12L3.2,23.2
		c-0.5,0.9-0.7,2.1-0.7,3.3c0,3.3,1.7,6,5,6h20c3.3,0,5-2.7,5-6C32.5,25.3,32.3,24.2,31.8,23.2z M27.5,30.5h-20c-2.2,0-3-1.8-3-4
		L5,24c0.5-0.9,1.2-1.5,2.5-1.5h20c1.2,0,2,0.6,2.5,1.5l0.5,2.5C30.5,28.7,29.7,30.5,27.5,30.5z M27.5,26.5c0,0.6-0.4,1-1,1
		c-0.6,0-1-0.4-1-1c0-0.6,0.4-1,1-1C27.1,25.5,27.5,25.9,27.5,26.5z M13.5,11.5h3v-9h2v9h3l-4,6L13.5,11.5z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-monitor-arrow-down"><g id="monitor-arrow-down-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M13.5,11.5h3v-9h2v9h3l-4,6L13.5,11.5z M31.5,10.5v15c0,2.2-1.9,4-4,4H20l4.9,3
		H10.1l4.9-3H7.5c-2.1,0-4-1.8-4-4v-15c0-2.2,1.9-4,4-4h6v2h-5c-1.6,0-3,1-3,2.3v12.4c0,1.4,1.4,2.3,3,2.3h17.9c1.6,0,3-1,3-2.3
		V10.8c0-1.4-1.4-2.3-3-2.3h-5v-2h6C29.6,6.5,31.5,8.3,31.5,10.5z M27.5,27.5c0-0.6-0.4-1-1-1c-0.6,0-1,0.4-1,1c0,0.6,0.4,1,1,1
		C27.1,28.5,27.5,28.1,27.5,27.5z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-orbit"><g id="orbit-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M7.5,2.5c-2.8,0-5,2.2-5,5c0,2.8,2.2,5,5,5c2.8,0,5-2.2,5-5
		C12.5,4.7,10.3,2.5,7.5,2.5z M7.5,10.5c-1.7,0-3-1.3-3-3c0-1.7,1.3-3,3-3c1.7,0,3,1.3,3,3C10.5,9.2,9.2,10.5,7.5,10.5z M27.5,22.5
		c-2.8,0-5,2.2-5,5c0,2.8,2.2,5,5,5c2.8,0,5-2.2,5-5C32.5,24.7,30.3,22.5,27.5,22.5z M27.5,30.5c-1.7,0-3-1.3-3-3c0-1.7,1.3-3,3-3
		c1.7,0,3,1.3,3,3C30.5,29.2,29.2,30.5,27.5,30.5z M32.2,14.6l-2,0.5c-0.1-0.7-0.3-1.3-0.5-1.9l2-0.5C31.9,13.3,32.1,13.9,32.2,14.6
		z M28.8,7.6l-1.4,1.4c-0.4-0.5-0.9-1-1.4-1.4l1.4-1.4C27.9,6.7,28.3,7.1,28.8,7.6z M17.4,2.5c0.4,0,0.7,0,1.1,0v2
		c-0.4,0-0.7,0-1.1,0c-0.3,0-0.6,0-0.9,0.1v-2C16.8,2.5,17.1,2.5,17.4,2.5z M20.4,2.8c0.7,0.1,1.3,0.3,1.9,0.5l-0.5,1.9
		c-0.6-0.2-1.3-0.4-1.9-0.5L20.4,2.8z M5,25.8c-0.2-0.4-0.5-0.7-0.7-1.1l0,0c-0.1-0.2-0.2-0.4-0.3-0.6l1.7-1c0.3,0.6,0.6,1.2,1,1.7
		L5,25.8z M30.4,16.5h2c0,0.3,0,0.6,0.1,0.9c0,0.4,0,0.7,0,1.1h-2c0-0.4,0-0.7,0-1.1C30.5,17.1,30.5,16.8,30.4,16.5z M4.6,18.5h-2
		c0-0.3,0-0.6-0.1-0.9c0-0.4,0-0.7,0-1.1h2c0,0.4,0,0.7,0,1.1C4.5,17.9,4.5,18.2,4.6,18.5z M30,9.2c0.2,0.4,0.5,0.7,0.7,1.1l0,0
		c0.1,0.2,0.2,0.4,0.3,0.6l-1.7,1c-0.3-0.6-0.6-1.2-1-1.7L30,9.2z M24.1,4c0.6,0.3,1.2,0.6,1.7,1l-1,1.8c-0.5-0.4-1.1-0.7-1.7-1
		L24.1,4z M22.3,31.7c-0.6,0.2-1.3,0.4-1.9,0.5l-0.5-2c0.7-0.1,1.3-0.3,1.9-0.5L22.3,31.7z M17.6,32.5c-0.4,0-0.7,0-1.1,0v-2
		c0.4,0,0.7,0,1.1,0c0.3,0,0.6,0,0.9-0.1v2C18.2,32.5,17.9,32.5,17.6,32.5z M14.6,32.2c-0.7-0.1-1.3-0.3-1.9-0.5l0.5-1.9
		c0.6,0.2,1.3,0.4,1.9,0.5L14.6,32.2z M31.7,22.3l-1.9-0.5c0.2-0.6,0.4-1.3,0.5-1.9l2,0.5C32.1,21.1,31.9,21.7,31.7,22.3z M3.3,12.7
		l1.9,0.5c-0.2,0.6-0.4,1.3-0.5,1.9l-2-0.5C2.9,13.9,3.1,13.3,3.3,12.7z M3.3,22.3c-0.2-0.6-0.4-1.3-0.5-1.9l2-0.5
		c0.1,0.7,0.3,1.3,0.5,1.9L3.3,22.3z M12.7,3.3c0.6-0.2,1.3-0.4,1.9-0.5l0.5,2c-0.7,0.1-1.3,0.3-1.9,0.5L12.7,3.3z M6.2,27.4
		l1.4-1.4c0.4,0.5,0.9,1,1.4,1.4l-1.4,1.4C7.1,28.3,6.7,27.9,6.2,27.4z M10.9,31c-0.6-0.3-1.2-0.6-1.7-1l1-1.8
		c0.5,0.4,1.1,0.7,1.7,1L10.9,31z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 10 10" id="icon-registered-symbol"><g id="registered-symbol-_x31_0px"><path d="M5,0.7c0.4,0,0.8,0.1,1.1,0.2c0.4,0.1,0.7,0.2,1,0.4c0.3,0.2,0.6,0.4,0.9,0.7c0.3,0.3,0.5,0.6,0.7,0.9
		c0.2,0.3,0.3,0.7,0.4,1C9.3,4.2,9.3,4.6,9.3,5c0,0.4-0.1,0.8-0.2,1.2c-0.1,0.4-0.2,0.7-0.4,1C8.5,7.5,8.3,7.8,8.1,8.1
		C7.8,8.3,7.5,8.6,7.2,8.7c-0.3,0.2-0.7,0.3-1,0.4C5.8,9.3,5.4,9.3,5,9.3c-0.4,0-0.8-0.1-1.2-0.2c-0.4-0.1-0.7-0.2-1-0.4
		C2.5,8.6,2.2,8.3,1.9,8.1C1.7,7.8,1.5,7.5,1.3,7.2c-0.2-0.3-0.3-0.7-0.4-1C0.7,5.8,0.7,5.4,0.7,5c0-0.4,0.1-0.8,0.2-1.1
		c0.1-0.4,0.2-0.7,0.4-1c0.2-0.3,0.4-0.6,0.7-0.9c0.3-0.3,0.6-0.5,0.9-0.7c0.3-0.2,0.7-0.3,1-0.4C4.2,0.7,4.6,0.7,5,0.7z M5,9
		c0.4,0,0.7,0,1.1-0.1c0.3-0.1,0.7-0.2,1-0.4c0.3-0.2,0.6-0.4,0.8-0.6C8.1,7.6,8.3,7.3,8.4,7c0.2-0.3,0.3-0.6,0.4-1
		C8.9,5.7,9,5.4,9,5c0-0.6-0.1-1.1-0.3-1.6S8.2,2.5,7.8,2.2S7,1.5,6.6,1.3C6.1,1.1,5.6,1,5,1S3.9,1.1,3.4,1.3C3,1.5,2.5,1.8,2.2,2.2
		C1.8,2.5,1.5,3,1.3,3.4S1,4.4,1,5c0,0.6,0.1,1.1,0.3,1.6s0.5,0.9,0.8,1.3C2.5,8.2,3,8.5,3.4,8.7C3.9,8.9,4.4,9,5,9z M4.9,2.3
		c0.6,0,1.1,0.1,1.4,0.3c0.3,0.2,0.5,0.6,0.5,1.1c0,0.4-0.1,0.7-0.4,1C6.1,5,5.7,5.1,5.3,5.2c0.1,0,0.2,0.1,0.2,0.2l1.7,2.2H6.7
		c0,0-0.1,0-0.1,0c0,0-0.1,0-0.1-0.1L4.9,5.5c0,0-0.1-0.1-0.1-0.1c0,0-0.1,0-0.2,0H3.9v2.3H3.4V2.3H4.9z M4.8,4.9
		c0.5,0,0.8-0.1,1.1-0.3c0.2-0.2,0.4-0.5,0.4-0.8c0-0.4-0.1-0.6-0.3-0.8s-0.6-0.3-1-0.3h-1v2.2H4.8z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-shield-check-o"><g id="shield-check-o-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M17.5,2.5l-15,2c0,0,0.5,16.8,4.9,22.9c2.6,3.5,10.1,5.2,10.1,5.2
		s7.5-1.6,10.1-5.2c4.4-6,4.9-22.9,4.9-22.9L17.5,2.5z M26.4,25.9c-2.2,3-8.9,4.7-8.9,4.7s-6.7-1.7-8.9-4.7
		C4.9,20.7,4.4,6.4,4.4,6.4l13.1-2l13.1,2C30.6,6.4,30.1,20.7,26.4,25.9z M23.3,10.2l1.4,1.4l-6.8,11.7l-0.3,0.5l-6.3-6.2l1.4-1.4
		l4.5,4.5L23.3,10.2z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-square-check-o"><g id="square-check-o-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M27.5,2.5h-20c-2.8,0-5,2.2-5,5v20c0,2.8,2.2,5,5,5h20c2.8,0,5-2.2,5-5v-20
		C32.5,4.7,30.3,2.5,27.5,2.5z M30.5,25.5c0,2.8-2.2,5-5,5h-16c-2.8,0-5-2.2-5-5v-16c0-2.8,2.2-5,5-5h16c2.8,0,5,2.2,5,5V25.5z
		 M24.8,10.8l1.4,1.4L16.1,25.4l-6.3-6.2l1.4-1.4l4.6,4.6L24.8,10.8z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-square-double-arrow-o"><g id="square-double-arrow-o-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M27.1,7.5l0.4,0.4v7.6h-2v-3c0-0.5-0.1-0.9-0.3-1.3l-14,14
		c0.4,0.2,0.8,0.3,1.3,0.3h3v2H7.9l-0.4-0.4v-7.6h2v3c0,0.5,0.1,0.9,0.3,1.3l14-14c-0.4-0.2-0.8-0.3-1.3-0.3h-3v-2H27.1z M32.5,5.5
		v24c0,1.7-1.3,3-3,3h-24c-1.7,0-3-1.3-3-3v-24c0-1.7,1.3-3,3-3h24C31.2,2.5,32.5,3.8,32.5,5.5z M30.5,7.2c0-1.7-1.1-2.8-2.8-2.8
		H7.2c-1.7,0-2.8,1.1-2.8,2.8v20.4c0,1.7,1.2,2.8,2.8,2.8h20.2c1.7,0,3-1.3,3-3V7.2z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-square-notification-o"><g id="square-notification-o-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M32.5,8.5c0-3.3-2.7-6-6-6c-2.6,0-4.8,1.7-5.7,4H5.5c-1.7,0-3,1.3-3,3v20
		c0,1.7,1.3,3,3,3h20c1.7,0,3-1.3,3-3V14.2C30.8,13.3,32.5,11.1,32.5,8.5z M26.5,27.5c0,1.7-1.3,3-3,3h-16c-1.7,0-3-1.3-3-3v-16
		c0-1.7,1.3-3,3-3h13c0,3.3,2.7,6,6,6V27.5z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-switches"><g id="switches-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M26,2.5H9C5.4,2.5,2.5,5.4,2.5,9v1c0,3.6,2.9,6.5,6.5,6.5h17
		c3.6,0,6.5-2.9,6.5-6.5V9C32.5,5.4,29.6,2.5,26,2.5z M25.5,14.5h-16c-2.8,0-5-2.2-5-5c0-2.8,2.2-5,5-5h16c2.8,0,5,2.2,5,5
		C30.5,12.3,28.3,14.5,25.5,14.5z M26,18.5H9c-3.6,0-6.5,2.9-6.5,6.5v1c0,3.6,2.9,6.5,6.5,6.5h17c3.6,0,6.5-2.9,6.5-6.5v-1
		C32.5,21.4,29.6,18.5,26,18.5z M25.5,30.5h-16c-2.8,0-5-2.2-5-5c0-2.8,2.2-5,5-5h16c2.8,0,5,2.2,5,5C30.5,28.3,28.3,30.5,25.5,30.5
		z M9.5,5.5c2.2,0,4,1.8,4,4c0,2.2-1.8,4-4,4c-2.2,0-4-1.8-4-4C5.5,7.3,7.3,5.5,9.5,5.5z M25.5,21.5c2.2,0,4,1.8,4,4
		c0,2.2-1.8,4-4,4s-4-1.8-4-4C21.5,23.3,23.3,21.5,25.5,21.5z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-timer"><g id="timer-_x33_5px"><path fill-rule="evenodd" clip-rule="evenodd" d="M16.4,8h2v2h-2V8z M16.4,28h2v2h-2V28z M6.4,18h2v2h-2V18z M26.4,18h2v2h-2V18z
		 M23.4,11h2v2h-2V11z M9.4,25h2v2h-2V25z M11.4,11h-2v2h2V11z M25.4,25h-2v2h2V25z M22.9,13.4C22.9,13.4,22.9,13.3,22.9,13.4
		L22.9,13.4C22,14,16.6,17.8,16.4,18c-0.2,0.3-0.1,2-0.1,2l0,0c0,0,1.8,0.1,2-0.1C18.7,19.8,22.3,14.3,22.9,13.4L22.9,13.4
		C23,13.4,22.9,13.4,22.9,13.4z M31.1,9.5l-4.2-4.2l-2.3,2.3c-1.4-0.9-3-1.5-4.7-1.9c-0.1-0.2-0.2-0.5-0.2-0.7
		c0-0.7,0.7-1.5,0.8-1.5h0.5v-1h-7v1h0.5c0,0,0.8,0.7,0.8,1.5c0,0.3-0.1,0.5-0.2,0.7c-6.3,1.2-11,6.7-11,13.3
		c0,7.5,6,13.5,13.5,13.5c7.5,0,13.5-6,13.5-13.5c0-2.6-0.8-5.1-2.1-7.2L31.1,9.5z M17.4,30.5C11,30.5,5.9,25.4,5.9,19
		S11,7.5,17.4,7.5S28.9,12.6,28.9,19S23.7,30.5,17.4,30.5z"/></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 35 35" id="icon-users"><g id="users-_x33_5px"><path d="M6.5,28.4c0,0.4,0,0.7,0.1,1c-3-0.2-6.1-0.8-6.1-3.1c0-2.9,2.5-8,6.3-8c-2-1.3-3.3-3.7-3.3-6.3c0-4.1,3.2-7.5,7.1-7.5
		c1,0,1.9,0.2,2.7,0.6c-0.5,0.5-0.9,1.1-1.2,1.8c-0.5-0.3-1-0.4-1.6-0.4c-2.5,0-5.1,2.9-5.1,5.6s2.7,4.5,5.1,4.5
		c0.4,0,0.8-0.1,1.2-0.2c0.3,0.4,0.7,0.8,1.4,1.2c-1,0-1.8,0.3-2.5,0.8c0,0,0,0,0,0c-4.8,0-8,5.2-8.1,7.7c0.3,0.3,1.8,0.8,4.1,1.1
		C6.5,27.6,6.5,28.1,6.5,28.4z M34.5,27.6c0,4.1-9.1,4.9-13,4.9c-3.9,0-13-0.8-13-4.9c0-3.4,4.8-9.2,8.9-9.1
		c-2.2-1.5-3.9-4.2-3.9-7.3c0-4.8,3.8-8.7,8.1-8.7s7.9,3.9,7.9,8.7c0,3.1-1.6,5.8-3.7,7.3C30.1,18.5,34.5,24.1,34.5,27.6z
		 M21.6,17.6c2.8,0,6-3.3,6-6.4c0-3.2-3.1-6.7-6-6.7c-2.8,0-6.1,3.6-6.1,6.7C15.5,14.3,18.8,17.6,21.6,17.6z M32.4,27.5
		c-0.2-3.1-4.5-8.1-10.8-8.1c-6.5,0-10.8,5-11,8.1c0.6,0.6,4.9,3,10.9,3C27.5,30.5,31.8,28.1,32.4,27.5z"/></g></symbol></svg><div class="universe"><svg style="width:0;height:0;overflow:hidden;position:fixed;visibility:hidden"><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 6.688 4.844" id="icon-arrow-down2"><path d="M3.5,3.684l-2.428-3L0.157,1.5,3.5,5.537,6.844,1.5,5.928,0.681Z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 5 7" id="icon-arrow-right4"><path d="M2.76,3.5,0,5.93,1,7,5,3.5,1,0,0,1.07Z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 17 16.1" id="icon-cart2"><path d="M16.8,1.5l-1.8,0L13,11l-1,1l-9,0l-1.1-1L0,3l1.5,0l2.1,7.6h7.7L13.4,1l1-1L17,0L16.8,1.5z
     M4.6,8.2V7.7h5.8v0.5L4.6,8.2L4.6,8.2z M4.3,5.6h6.2l0,0.5l-6.2,0V5.6L4.3,5.6z M3.5,4l0-0.4h7.9l0,0.4L3.5,4z M4.5,13
    C5.3,13,6,13.6,6,14.4c0,0,0,0.1,0,0.1c0,0.9-0.7,1.6-1.5,1.6c0,0,0,0,0,0C3.7,16,3,15.4,3,14.6c0,0,0-0.1,0-0.1
    c0-0.8,0.5-1.4,1.3-1.5C4.4,13,4.4,13,4.5,13L4.5,13z M10.4,13c0.8-0.1,1.6,0.6,1.6,1.4c0,0,0,0,0,0c0,0.9-0.7,1.6-1.6,1.6
    c-0.8,0-1.5-0.7-1.5-1.5C8.9,13.7,9.6,13,10.4,13L10.4,13L10.4,13z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 14.9 15.2" id="icon-close4"><path d="M14.9,13.8l-1.4,1.4L7.6,9l-6.1,6.1L0,13.7l6.1-6.1L0.1,1.4L1.4,0l6.1,6.2L13.4,0l1.4,1.4L8.9,7.7
    L14.9,13.8z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 20 32" id="icon-fat-arrow-left"><g id="fat-arrow-left-icomoon-ignore"><line stroke-width="1" stroke="#449FDB" opacity=""/></g><path d="M17.646 32l2.8-2.665-15.112-13.334 15.112-13.334-2.804-2.666-17.642 16 17.646 16z" fill="#000000"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 20 32" id="icon-fat-arrow-right"><g id="fat-arrow-right-icomoon-ignore"><line stroke-width="1" stroke="#449FDB" opacity=""/></g><path d="M20.446 16l-17.642-16-2.804 2.666 15.112 13.334-15.112 13.334 2.8 2.665 17.646-16z" fill="#000000"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 10 9" id="icon-feedback"><path d="M8.7,6.9H6.9L6.9,9L3.7,6.9H1.3C0.5,6.9,0,6.3,0,5.5V1.2C0,0.5,0.6,0,1.3,0h7.5
    C9.4,0,10,0.5,10,1.2v4.3C10,6.3,9.5,6.9,8.7,6.9z M9,1H1v4.9h8V1L9,1z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 17.6 16" id="icon-friends2"><path d="M17.7,13.4c0,2.2-4.6,2.6-6.7,2.6s-6.6-0.4-6.6-2.6c0-1.8,2.4-4.9,4.6-4.9c-1.2-1-2-2.4-2-4
    C7,2,8.7,0,11,0c2.4,0.1,4.2,2.1,4,4.5c0,0,0,0,0,0.1c0,1.6-0.7,3-2,4C15.4,8.5,17.7,11.5,17.7,13.4z M13.6,4.5
    c0.2-1.4-0.8-2.7-2.2-2.9C10,1.4,8.7,2.4,8.5,3.8c0,0.2,0,0.5,0,0.7c0,1.7,1,3,2.5,3C12.6,7.5,13.7,6.1,13.6,4.5
    C13.6,4.6,13.6,4.6,13.6,4.5L13.6,4.5z M11,9.5c-3.4,0-4.9,2.2-5,3.8c0.3,0.3,1.8,1.2,5,1.2s4.8-0.9,5.1-1.2
    C16,11.7,14.3,9.5,11,9.5L11,9.5z M3,5C3,3.6,4,2.5,5.3,2.4c0.2,0,0.4,0,0.6,0C6.1,2,6.2,1.5,6.4,1.1C6.1,1,5.8,0.9,5.4,1
    C3.2,1,1.5,2.8,1.5,5c0,1.4,0.7,2.7,1.9,3.5c-2,0-3.3,2.5-3.3,4c0,1.3,1.6,2,3.2,2.2c-0.3-0.4-0.4-1-0.1-1.5c-0.6,0-1.2-0.3-1.7-0.7
    c0-1.9,1.6-3.4,3.5-3.4c0,0,0,0,0.1,0c0.1-0.5,0.4-0.9,0.8-1C5.2,7.9,3,6.4,3,5z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 24.8 24.8" id="icon-happy-face"><path d="M12.4,24.8C5.6,24.8,0,19.2,0,12.4C0,5.5,5.6,0,12.4,0c6.8,0,12.4,5.6,12.4,12.4
    C24.8,19.2,19.2,24.8,12.4,24.8z M12.5,1C6.2,1,1.1,6.2,1.1,12.4c0,6.3,5.1,11.4,11.4,11.3c6.3,0,11.3-5.1,11.3-11.4
    C23.9,6.1,18.8,1,12.5,1C12.5,1,12.5,1,12.5,1z M6.9,18.1c0.3-0.2,0.6-0.4,0.9-0.6c1.6,0.9,2.6,1.6,4.6,1.6c1.7-0.1,3.4-0.6,4.8-1.6
    c0.3,0.2,0.7,0.4,1,0.6c-1.9,1.1-3.3,2-5.7,2C10.1,20.1,8.8,19.2,6.9,18.1L6.9,18.1z M16.5,12.9c-0.8,0-1.5-0.7-1.5-1.5
    c0-0.8,0.7-1.5,1.5-1.5c0.8,0,1.5,0.7,1.5,1.5c0,0,0,0,0,0C18,12.3,17.3,12.9,16.5,12.9L16.5,12.9z M8.5,12.9
    c-0.8,0-1.5-0.7-1.5-1.5C7,10.6,7.7,10,8.5,10c0.8,0,1.5,0.7,1.5,1.5C10,12.3,9.3,12.9,8.5,12.9C8.5,12.9,8.5,12.9,8.5,12.9
    L8.5,12.9z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 34 31" id="icon-logo-gog"><path class="cls-1" d="M31,31H3a3,3,0,0,1-3-3V3A3,3,0,0,1,3,0H31a3,3,0,0,1,3,3V28A3,3,0,0,1,31,31ZM4,24.5A1.5,1.5,0,0,0,5.5,26H11V24H6.5a.5.5,0,0,1-.5-.5v-3a.5.5,0,0,1,.5-.5H11V18H5.5A1.5,1.5,0,0,0,4,19.5Zm8-18A1.5,1.5,0,0,0,10.5,5h-5A1.5,1.5,0,0,0,4,6.5v5A1.5,1.5,0,0,0,5.5,13H9V11H6.5a.5.5,0,0,1-.5-.5v-3A.5.5,0,0,1,6.5,7h3a.5.5,0,0,1,.5.5v6a.5.5,0,0,1-.5.5H4v2h6.5A1.5,1.5,0,0,0,12,14.5Zm0,13v5A1.5,1.5,0,0,0,13.5,26h5A1.5,1.5,0,0,0,20,24.5v-5A1.5,1.5,0,0,0,18.5,18h-5A1.5,1.5,0,0,0,12,19.5Zm9-13A1.5,1.5,0,0,0,19.5,5h-5A1.5,1.5,0,0,0,13,6.5v5A1.5,1.5,0,0,0,14.5,13h5A1.5,1.5,0,0,0,21,11.5Zm9,0A1.5,1.5,0,0,0,28.5,5h-5A1.5,1.5,0,0,0,22,6.5v5A1.5,1.5,0,0,0,23.5,13H27V11H24.5a.5.5,0,0,1-.5-.5v-3a.5.5,0,0,1,.5-.5h3a.5.5,0,0,1,.5.5v6a.5.5,0,0,1-.5.5H22v2h6.5A1.5,1.5,0,0,0,30,14.5ZM30,18H22.5A1.5,1.5,0,0,0,21,19.5V26h2V20.5a.5.5,0,0,1,.5-.5h1v6h2V20H28v6h2ZM18.5,11h-3a.5.5,0,0,1-.5-.5v-3a.5.5,0,0,1,.5-.5h3a.5.5,0,0,1,.5.5v3A.5.5,0,0,1,18.5,11Zm-4,9h3a.5.5,0,0,1,.5.5v3a.5.5,0,0,1-.5.5h-3a.5.5,0,0,1-.5-.5v-3A.5.5,0,0,1,14.5,20Z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 16 16.3" id="icon-notification"><path d="M16,14.2c-0.1,0.3-0.4,0.4-0.7,0.4H9.6v0.2c0,1.6-0.9,1.4-1.6,1.4
    c-0.8,0-1.7,0.2-1.7-1.4c0-0.1,0-0.1,0-0.2H0.7c-0.3,0-0.5-0.1-0.7-0.4c0,0,0-1,0-1c1.9-1.4,3.1-3.6,3-6c0-3.4,1.5-6.3,2.8-6.7
    C6.2,0.3,6.6,0.2,7,0.2c0.6-0.2,1.4-0.2,2,0c0.4,0,0.8,0.1,1.1,0.3C11.7,0.9,13,4.6,13,7.2c0,2.4,1.1,4.6,3,6
    C16,13.5,16,13.8,16,14.2z M11.5,7.3c0-3.7-2.2-5.7-2.5-5.7l-2,0c-0.3,0-2.5,1.9-2.5,5.7c0.1,2.1-0.6,4.2-2,5.8h11.1
    C12.3,12.1,11.5,10.1,11.5,7.3z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 45 32.4" id="icon-notifications-empty"><path d="M43,28.2h-3c0,0,2-3.4,2-6c-0.2-2.1-0.9-4.2-2-6h3c1.1,1.8,1.8,3.8,2,6
    C45,24.8,43,28.2,43,28.2z M37.5,24.7l-11.1,3c0,0.1,0.1,0.3,0.1,0.4c0.8,3.1-1,3.1-2.4,3.5c-1.5,0.4-3.1,1.2-3.9-1.8
    c0-0.1-0.1-0.3-0.1-0.4l-11,3c-0.5,0.2-1.1,0-1.5-0.5c0,0-0.6-1.9-0.5-2c3-3.7,4-8.6,2.7-13.1c-1.7-6.5-0.3-13,1.9-14.4
    c0.7-0.5,1.4-0.9,2.2-1.2c2-0.5,1.9-0.5,3.9-1.1C18.6,0,19.4,0,20.2,0.1c3.2,0.2,7.7,6.6,9,11.5c1.1,4.6,4.5,8.4,8.9,10
    c0.1,0.7,0.3,1.3,0.5,1.9C38.5,24.1,38.1,24.6,37.5,24.7z M26.4,12.7c-1.9-7.2-7.2-9.8-7.8-9.6l-3.9,1c-0.6,0.2-3.8,5.1-1.9,12.3
    c1.4,5.3,0.7,9.8-0.9,12.3l21.4-5.7C30.4,21.6,27.8,18,26.4,12.7z M2,28.2c-1.1-1.8-1.8-3.8-2-6c0-2.6,2-6,2-6h3c0,0-2,3.4-2,6
    c0.2,2.1,0.9,4.2,2,6H2z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 11 11" id="icon-owned"><path d="M5.5,6.1L3.5,4L2,5.6l3.5,3.6L11,1.9c0,0,0,0,0,0.1v7c0,1.1-0.9,2-2,2H2c-1.1,0-2-0.9-2-2V2
    c0-1.1,0.9-2,2-2h7c0.4,0,0.7,0.1,1,0.3L5.5,6.1z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 21 25" id="icon-remove-menu"><path d="M19,6H0c0-1.1,0.9-2,2-2h4V2c0-1.1,0.9-2,2-2h5c1.1,0,2,0.9,2,2v2h4c1.1,0,2,0.9,2,2H19z
     M12,2H9C7.9,2,8,4,8,4h5C13,4,13.1,2,12,2z M17,7h2v16c0,1.1-0.9,2-2,2H4c-1.1,0-2-0.9-2-2V7H17z M4,21.2c0,1,0.8,1.7,1.7,1.8h9.5
    c1,0,1.7-0.8,1.7-1.8V9H4V21.2z M7,11h1v10H7V11z M10,11h1v10h-1V11z M13,11h1v10h-1V11z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 24.8 24.8" id="icon-sad-face"><path d="M12.4,24.8C5.6,24.8,0,19.2,0,12.4C0,5.5,5.6,0,12.4,0c6.8,0,12.4,5.6,12.4,12.4
    C24.8,19.2,19.2,24.8,12.4,24.8z M12.5,1C6.2,1,1.1,6.2,1.1,12.4c0,6.3,5.1,11.4,11.4,11.3c6.3,0,11.3-5.1,11.3-11.4
    C23.9,6.1,18.8,1,12.5,1C12.5,1,12.5,1,12.5,1z M12.5,18c-1.6,0-3.2,0.5-4.5,1.4c-0.3-0.2-0.7-0.4-1-0.6c1.6-1.2,3.5-1.8,5.5-1.8
    c2.1,0,4.1,0.7,5.8,1.9c-0.3,0.2-0.6,0.4-0.9,0.6C15.8,18.5,14.2,18,12.5,18z M16.5,12.9c-0.8,0-1.5-0.7-1.5-1.5
    c0-0.8,0.7-1.5,1.5-1.5c0.8,0,1.5,0.7,1.5,1.5c0,0,0,0,0,0C18,12.3,17.3,12.9,16.5,12.9L16.5,12.9z M8.5,12.9
    c-0.8,0-1.5-0.7-1.5-1.5C7,10.6,7.7,10,8.5,10c0.8,0,1.5,0.7,1.5,1.5C10,12.3,9.3,12.9,8.5,12.9C8.5,12.9,8.5,12.9,8.5,12.9
    L8.5,12.9z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 13.8 15" id="icon-search2"><path d="M13.8,13.7L12.2,15L9,11.1C8.1,11.7,7.1,12,6,12c-3.2,0.1-5.9-2.4-6-5.6C0,6.3,0,6.1,0,6
    c0-3.3,2.7-6,6-6s6,2.7,6,6c0,1.5-0.6,3-1.6,4.1L13.8,13.7z M6,1.6c-2.3-0.1-4.3,1.6-4.5,4c0,0.1,0,0.3,0,0.4c0,2.5,1.9,4.5,4.4,4.6
    s4.5-1.9,4.6-4.4C10.5,3.7,8.6,1.6,6,1.6C6.1,1.6,6,1.6,6,1.6z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 25.1 25.1" id="icon-wishlist-menu"><path d="M17.7,18.7c-2.5,2.4-4.9,5.2-5.2,6.4c-0.3-1.2-2.5-3.9-5.2-6.3C4.6,16.3,0,14.5,0,8.9
    C0.1-1.1,9.9-2.5,12.5,4.1C14.8-2.5,25-1.2,25.1,8.9C25.1,14.4,20.4,16.1,17.7,18.7z M12.5,6.8C8.4-0.9,2.3,1.7,2,8.8
    c-0.2,4.2,3.7,5.7,6,7.7s4.2,4.4,4.5,5.3c0.2-0.9,2.5-3.8,4.6-5.6c2.3-2,6.2-3.3,5.9-7.5C22.5,1.9,17.1-0.9,12.5,6.8z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 11 11" id="icon-wishlisted2"><path d="M5.5,1.8C4.3-1.1,0-0.5,0,3.9c0,2.4,2,3.2,3.2,4.3C4.2,9,5,9.9,5.5,11
    c0.6-1.1,1.3-2,2.3-2.8C9,7.1,11,6.3,11,3.9C11-0.5,6.5-1.1,5.5,1.8z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 28 28" id="icon-hand-picked"><g stroke="inherit" stroke-width="1" fill="none" fill-rule="evenodd" stroke-linejoin="round"><g transform="translate(-886.000000, -1979.000000)" stroke-width="2" stroke="inherit"><g transform="translate(247.000000, 1763.000000)"><g transform="translate(640.000000, 217.000000)"><g><polyline stroke-linecap="round" points="18 3 26 3 26 21 0 21 0 3 8 3"/><path d="M13,21 L13,27"/><polygon points="17 26 13 26 9 26 13 26"/><path d="M13,0 L13,12" stroke-linecap="round"/></g><polyline stroke-linecap="round" points="8.7578 9 12.9998 13.243 17.2418 9"/></g></g></g></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 30 24" id="icon-heart"><g stroke="inherit" stroke-width="1" fill="none" fill-rule="evenodd" stroke-linejoin="round"><g transform="translate(-1239.000000, -1983.000000)" stroke="inherit" stroke-width="2"><g transform="translate(247.000000, 1763.000000)"><path d="M1008.87835,242.04525 C1007.78535,242.95225 1006.21535,242.95225 1005.12235,242.04525 C1001.92335,239.38825 995.647354,233.83725 994.489354,230.28025 C993.150354,226.83925 994.489354,221.62125 999.372354,221.04925 C1004.25435,220.47725 1007.00035,225.12325 1007.00035,225.12325 C1007.00035,225.12325 1009.74635,220.47725 1014.62835,221.04925 C1019.51135,221.62125 1020.85035,226.83925 1019.51135,230.28025 C1018.35435,233.83725 1012.07735,239.38825 1008.87835,242.04525 Z"/></g></g></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 29 27" id="icon-star"><g stroke="inherit" stroke-width="1" fill="none" fill-rule="evenodd" stroke-linejoin="round"><g transform="translate(-533.000000, -1981.000000)" stroke="inherit" stroke-width="2"><g transform="translate(247.000000, 1763.000000)"><path d="M300.144,219 C301.176,219.78 302.814,223.393 304.284,227.563 C308.618,227.688 312.31,228.017 313.288,228.549 C312.571,230.048 310.107,232.661 306.683,235.343 C307.751,239.368 308.216,242.354 308.267,244 C306.252,243.034 303.668,242.049 300.144,239.883 C296.619,242.049 294.036,243.034 292.021,244 C292.073,242.354 292.537,239.368 293.605,235.343 C290.181,232.661 287.717,230.048 287,228.549 C287.978,228.017 291.669,227.688 296.004,227.563 C297.475,223.393 299.112,219.78 300.144,219 Z"/></g></g></g></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 12 12" id="icon-notification-achievement"><path d="M7.667,9.667H7V8.333l0.383-0.312L7.371,7.977l0.012-0.034C7.518,7.831,7.566,7.734,7.691,7.59
	C9.547,7.351,11,4.621,11,1.979H9C9.018,1.692,9,1.297,9,1H3c0,0.297-0.019,0.692,0,0.979H1c0,2.662,1.478,5.404,3.356,5.614
	C4.48,7.736,4.609,7.866,4.742,7.977L4.723,7.943v0.078L5,8.333v1.333H4.333H3.667V11h4.666V9.667H7.667z M10,3
	C9.827,4.632,9.039,5.486,8,6c0.494-0.912,0.842-1.637,1-3H10z M2,3h1C3.16,4.377,3.498,5.084,4,6C2.933,5.509,2.177,4.662,2,3z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 12 12" id="icon-notification-camera"><path d="M9.74,3.475h-1.01c-0.135,0-0.271-0.079-0.344-0.203L7.802,1.671C7.729,1.547,7.594,1.469,7.458,1.469H4.552
	c-0.135,0-0.271,0.079-0.344,0.203L3.625,3.273C3.552,3.396,3.417,3.475,3.281,3.475H2.25C1.562,3.475,1,4.083,1,4.825v4.356
	c0,0.742,0.562,1.35,1.25,1.35h7.51c0.688,0,1.24-0.596,1.24-1.339V4.836C11,4.094,10.427,3.475,9.74,3.475z M6,8.537
	c-1.106,0-1.994-0.891-1.994-2c0-1.109,0.889-2,1.994-2c1.105,0,1.994,0.891,1.994,2C7.994,7.646,7.105,8.537,6,8.537z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 12 12" id="icon-notification-chat"><path d="M1.881,8.484C1.398,7.71,1.333,6.807,1.333,5.871c0-2.742,2.064-4.808,4.803-4.808c2.739,0,4.803,2.066,4.803,4.808
	c0,2.742-2.064,4.808-4.803,4.808c-0.935,0-1.837-0.066-2.61-0.55l-2.128,0.808c-0.032,0-0.064,0-0.097,0
	c-0.064,0-0.129-0.032-0.161-0.064c-0.065-0.064-0.097-0.161-0.065-0.258L1.881,8.484z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 12 12" id="icon-notification-checkmark"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.611,2.933l-4.754,7.189l-0.439,0l-0.427,0.005L1.389,6.403l1.562-1.249
	l2.322,2.458l3.643-5.739L10.611,2.933z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 12 12" id="icon-notification-cloud"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.984,4.653C9.99,4.602,10,4.552,10,4.5C10,3.672,9.328,3,8.5,3
	C7.907,3,7.399,3.347,7.156,3.846H6.963C6.784,2.768,5.755,1.938,4.5,1.938C3.119,1.938,2,2.939,2,4.174
	c0,0.154,0.018,0.304,0.051,0.45C1.411,5.188,1,6.004,1,6.923C1,8.622,1.846,10,3.546,10h4.909C10.154,10,11,8.622,11,6.923
	C11,6.02,10.604,5.216,9.984,4.653z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 12 12" id="icon-notification-download"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.716,6.323L6,11.04L1.284,6.323l1.414-1.414L5,7.211V0.96h2v6.251l2.302-2.302
	L10.716,6.323z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 12 12" id="icon-notification-friend"><path d="M7.325,6.328C7.986,5.813,8.411,4.913,8.411,3.89c0-1.596-1.054-2.895-2.366-2.895c-1.312,0-2.459,1.299-2.459,2.895
	c0,1.024,0.519,1.925,1.181,2.44C3.505,6.313,2.001,8.24,2.001,9.382c0,1.361,2.822,1.623,4.018,1.623s3.979-0.262,3.979-1.623
	C9.999,8.219,8.654,6.348,7.325,6.328z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 12 12" id="icon-notification-percentage"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.068,11.175L0.841,9.916l9.06-9.091l1.258,1.258L2.068,11.175z M8.937,6.906
	c-1.13,0-2.047,0.917-2.047,2.047c0,1.13,0.917,2.047,2.047,2.047c1.13,0,2.047-0.916,2.047-2.047
	C10.984,7.823,10.068,6.906,8.937,6.906z M8.984,9.75c-0.414,0-0.75-0.336-0.75-0.75c0-0.414,0.336-0.75,0.75-0.75
	S9.734,8.586,9.734,9C9.734,9.414,9.399,9.75,8.984,9.75z M3.031,1c-1.13,0-2.047,0.916-2.047,2.047c0,1.13,0.916,2.047,2.047,2.047
	c1.13,0,2.047-0.917,2.047-2.047C5.078,1.916,4.162,1,3.031,1z M2.984,3.75c-0.414,0-0.75-0.336-0.75-0.75
	c0-0.414,0.336-0.75,0.75-0.75S3.734,2.586,3.734,3C3.734,3.414,3.399,3.75,2.984,3.75z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 12 12" id="icon-notification-playing"><path d="M11,6l-8.002,4.688V1.312L11,6z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 12 12" id="icon-notification-plus"><path fill-rule="evenodd" clip-rule="evenodd" d="M11,7H7v4H5V7H1V5h4V1h2v4h4V7z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 12 12" id="icon-notification-question"><path d="M2.737,3.013l1.495,0.999c0.041-0.773,0.873-1.022,1.66-1.022c0.78,0,1.393,0.128,1.393,0.778S6.924,4.753,6.042,5.28
	c-0.944,0.554-1.32,1.263-1.231,2.337l0.014,0.397h1.812V7.651c0-0.67,0.253-1.099,1.163-1.626C8.764,5.458,9.263,4.74,9.263,3.707
	c0-1.559-1.293-2.709-3.248-2.709C3.915,0.998,2.737,2.032,2.737,3.013z M5.739,11.002c0.561,0,1.011-0.438,1.011-0.996
	c0-0.558-0.45-0.996-1.011-0.996c-0.555,0-1.005,0.438-1.005,0.996C4.734,10.564,5.184,11.002,5.739,11.002z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 12 12" id="icon-notification-warning"><path fill-rule="evenodd" clip-rule="evenodd" d="M6.858,1.026C6.77,1.022,6.095,1,6.007,1C5.909,1,5.224,1.024,5.128,1.029
	L0.93,10.168C1.119,10.47,1.336,10.737,1.575,11h8.864c0.232-0.257,0.446-0.514,0.632-0.808L6.858,1.026z M6.007,10.031
	c-0.552,0-1-0.448-1-1s0.448-1,1-1s1,0.448,1,1S6.559,10.031,6.007,10.031z M7.007,7.031h-1h-1V4.5c0-0.552,0.448-1,1-1
	c0.552,0,1,0.448,1,1V7.031z"/></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 32 32" id="icon-tick"><path d="M35.515 2.868l-5.269-2.868-15.251 23.076-10.651-9.674-4.344 3.945 16.030 14.653z"></path></symbol><symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 33 32.938" id="icon-wishlist3"><path d="M1202.49,217.8c-3.37-8.442-15.92-6.736-16,6.106-0.04,7.054,5.81,9.369,9.37,12.509,3.5,3.083,6.25,6.474,6.66,8.066,0.35-1.559,3.39-5.056,6.62-8.143,3.46-3.321,9.41-5.456,9.37-12.507C1218.43,210.952,1205.36,209.271,1202.49,217.8Z" transform="translate(-1186 -212.031)"></path></symbol></svg><div class="menu-overlay" gog-menu-overlay></div><nav gog-menu
        class="menu
            menu-prices-in-pln
            menu--{{ menu.currentOs | lowercase }}
            menu-curr-symbol-after
            menu-language-pl-pl        "
        ><div class="menu__container"><a href="/" class="menu__logo"><svg viewBox="0 0 32 32" class="menu__logo-icon"><use xlink:href="#icon-logo-gog"></svg></a><div class="menu-main hide-in-lite-mode"><div class="menu-item has-submenu menu-item--animated hide-in-lite-mode js-menu-store"
    ng-controller="menuGamesCtrl as games"
    ng-mouseenter="menu.showWithDelay($event, 'store')"
    ng-mouseleave="menu.hide($event, 'store')"
    hook-test="menuStore"
    ><a class="menu-link menu-uppercase js-menu-link"
        href="/games"        ng-touchstart="$event.preventDefault(); menu.toggle($event, 'store')"
                hook-test="menuStoreButton">Sklep<svg viewBox="0 0 32 32" class="menu-link__dropdown-icon"><use xlink:href="#icon-arrow-down2"></svg></a><span class="menu-triangle"></span><div class="menu-submenu menu-store__submenu js-menu-sloped-submenu"
        ng-mouseenter="menu.cancelTimeout('store')"
        ng-class="{ 'menu-store__submenu--category-expanded': games.isLayerExpanded }"
    ><div class="menu-section-layer menu-section-layer--{{ games.selectedCategory.name }}"
        ng-class="{ 'is-visible': games.isLayerExpanded }"
        ng-mouseover="games.holdCategory()"
    ><div class="menu-custom-category menu-product-state-holder"
    ng-show="games.selectedCategory.isSpecial && games.selectedCategory.customisation.isSingle"
    ng-if="games.selectedCategory.products[0].id"
    gog-product="{{ games.selectedCategory.products[0].id }}"
    gog-product-repository="menuStoreProducts"
><a class="menu-custom-category__link"
        ng-href="{{ product.url }}"
        gog-track-event='{eventAction: "goToLink featured game{{ games.selectedCategoryNumber }}", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
    ></a><div class="menu-custom-category__bg-container"><div class="menu-custom-category__bg" ng-style="{'background-image': 'url('+games.selectedCategory.customisation.backgroundImage+')', 'background-color': games.selectedCategory.customisation.categoryColor}"></div></div><div class="menu-custom-category__content"><img class="menu-custom-category__logo"
            ng-src="{{ games.selectedCategory.customisation.logoImage }}"
        ><p class="menu-custom-category__description"
            ng-bind="games.selectedCategory.customisation.description"
        ></p><div class="menu-custom-category__price"
            ng-class="{'menu-custom-category__price--pre-order': product.isComingSoon && product.buyable }"
            ng-hide="product.customAttributes.customPriceButtonVariant == 'join'"
        ><span class="menu-custom-category__price-regular _price"
                ng-show="product.isPricingEnabled"
                ng-bind="product.price.amount"
            ></span><a class="menu-custom-category__price-btn"
                ng-click="productCtrl.addToCart()"
                gog-track-event='{eventAction: "addToCart featured game{{ games.selectedCategoryNumber }}", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
            ><span class="menu-custom-category__price-btn-content--in-cart"><svg viewBox="0 0 32 32" class="menu-custom-category__price-btn-icon"><use xlink:href="#icon-cart2"></svg></span><span class="menu-custom-category__price-btn-content--owned">
                    Kupione
                </span><span class="menu-custom-category__price-btn-content--buy-now"
                    ng-show="!product.isComingSoon && product.buyable"
                >
                    Kup teraz
                </span><span class="menu-custom-category__price-btn-content--buy-now"
                    ng-show="product.isComingSoon && product.buyable"
                >
                    Złóż pre-order
                </span></a></div><a class="menu-custom-category__join-btn"
            ng-href="{{ product.url }}"
            ng-show="product.customAttributes.customPriceButtonVariant == 'join'"
        ><span class="menu-custom-category__join-btn-content--owned">
                Kupione
            </span><span class="menu-custom-category__join-btn-content--join-now">
                Graj za darmo
            </span></a></div></div><div class="menu-section-layer__custom-bg "
    ng-show="games.selectedCategory.isSpecial && !games.selectedCategory.customisation.isSingle"
    ng-style="{'background-image': 'url('+games.selectedCategory.customisation.backgroundImage+')', 'background-color': games.selectedCategory.customisation.categoryColor}"
><div class="menu-inside-category"><p class="menu-inside-category__title" ng-bind="games.selectedCategory.categoryTitle"></p><div class="menu-products cf"><div class="menu-inside-category__column"
                ng-class="{'menu-inside-category__column--expendable': games.selectedCategory.hideColumn == 1}"
            ><div class="menu-category-item"
                    ng-repeat="gamesProduct in games.selectedCategory.columns[0]"
                ><div             ng-if="!gamesProduct.isCollection"
            gog-product="{{ gamesProduct.gameId }}"
            gog-product-repository="menuStoreProducts"
            class="menu-product menu-product--grid menu-product-state-holder js-focusable-element"
        ng-click="productCtrl.productClicked($index + 1)"
><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-click="productCtrl.addToCart(); $event.preventDefault(); "
            ng-hide="product.customAttributes.customPriceButtonVariant == 'join'"
            gog-track-event='{eventAction: "addToCart {{ games.selectedCategory.name }} {{ $index + 1 }}-1", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
            ng-class="{
                'price-btn--in-cart' : product.inCart,
                'price-btn--free': product.price.isFree
            }"
        ><span class="menu-product__price-btn-text"
                 ng-hide="!product.isPricingEnabled"
            ><span class="product-status__in-cart"><svg viewBox="0 0 32 32" class="menu-product__cart-icon"><use xlink:href="#icon-cart2"></svg></span><span class="product-state__is-tba">
                    Wkrótce
                </span><span class="price-btn__text--owned product-state__is-owned">
                    Kupione
                </span><span class="product-state__is-free">
                    Za darmo
                </span><span class="_price product-state__price" ng-bind="product.price.amount"></span></span><span class="menu-product__price-btn-text"
                 ng-hide="product.isPricingEnabled"
            >Kup</span></div><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-show="product.customAttributes.customPriceButtonVariant == 'join'"
        ><span class="menu-product__price-btn-text menu-product__price-btn-text--join"><span class="price-btn__text--owned">
                    Kupione
                </span><span class="price-btn__text--join">
                    Za darmo
                </span></span></div><a class="menu-product__link"
        ng-href="{{ product.url }}"
                gog-track-event='{eventAction: "goToLink {{ games.selectedCategory.name }} {{ $index + 1 }}-1", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
        ><div ng-class="{
                    'menu-product__tall-picture': gamesProduct.isTall,
                    'menu-product__picture': !gamesProduct.isTall
                }"
            ><span class="menu-product__loader-title">{{ product.title }}</span><img class="menu-product__image" alt="{{ product.title }}" ng-srcset="https:{{ product.image | image:196:&#039;jpg&#039; }} 1x, https:{{ product.image | image:392:&#039;jpg&#039; }} 2x"
                    ng-hide="gamesProduct.isTall"
                ><img ng-srcset="{{ gamesProduct.coverImage }}" alt="{{ product.title }}" class="menu-product__image menu-product__image--tall"
                    ng-show="gamesProduct.isTall"
                ><svg viewBox="0 0 32 32" class="menu-product__is-wishlisted"
                     ng-show="product.isWishlisted"
                ><use xlink:href="#icon-wishlisted2"></svg></div><div class="menu-product__content"><div class="menu-product__content-in"><div class="menu-product__os js-os-support"><span ng-show="product.isGame"><i class="menu-product__os-icon menu-product__os-icon--windows"
                                ng-show="product.worksOn.Windows"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--mac"
                               ng-show="product.worksOn.Mac"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--linux"
                               ng-show="product.worksOn.Linux"
                            ></i></span></div><div class="menu-product__movie-label"
                        ng-show="product.isMovie"
                    >
                        film 
                    </div><div class="menu-product__flags"><span ng-show="product.isComingSoon"
                class="menu-product__flag menu-product__flag--soon"
            >wkrótce</span><span ng-show="product.isInDevelopment"
                class="menu-product__flag menu-product__flag--in-dev"
            >W produkcji</span></div><div class="menu-product__discount product-state__discount"><span class="menu-product__discount-text"><span ng-bind="product.price.discountPercentage"></span>%
                        </span></div></div></div></a></div></div></div><div class="menu-inside-category__column"
                ng-class="{'menu-inside-category__column--expendable': games.selectedCategory.hideColumn == 2}"
            ><div class="menu-category-item"
                    ng-repeat="gamesProduct in games.selectedCategory.columns[1]"
                ><div             ng-if="!gamesProduct.isCollection"
            gog-product="{{ gamesProduct.gameId }}"
            gog-product-repository="menuStoreProducts"
            class="menu-product menu-product--grid menu-product-state-holder js-focusable-element"
        ng-click="productCtrl.productClicked($index + 1)"
><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-click="productCtrl.addToCart(); $event.preventDefault(); "
            ng-hide="product.customAttributes.customPriceButtonVariant == 'join'"
            gog-track-event='{eventAction: "addToCart {{ games.selectedCategory.name }} {{ $index + 1 }}-1", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
            ng-class="{
                'price-btn--in-cart' : product.inCart,
                'price-btn--free': product.price.isFree
            }"
        ><span class="menu-product__price-btn-text"
                 ng-hide="!product.isPricingEnabled"
            ><span class="product-status__in-cart"><svg viewBox="0 0 32 32" class="menu-product__cart-icon"><use xlink:href="#icon-cart2"></svg></span><span class="product-state__is-tba">
                    Wkrótce
                </span><span class="price-btn__text--owned product-state__is-owned">
                    Kupione
                </span><span class="product-state__is-free">
                    Za darmo
                </span><span class="_price product-state__price" ng-bind="product.price.amount"></span></span><span class="menu-product__price-btn-text"
                 ng-hide="product.isPricingEnabled"
            >Kup</span></div><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-show="product.customAttributes.customPriceButtonVariant == 'join'"
        ><span class="menu-product__price-btn-text menu-product__price-btn-text--join"><span class="price-btn__text--owned">
                    Kupione
                </span><span class="price-btn__text--join">
                    Za darmo
                </span></span></div><a class="menu-product__link"
        ng-href="{{ product.url }}"
                gog-track-event='{eventAction: "goToLink {{ games.selectedCategory.name }} {{ $index + 1 }}-1", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
        ><div ng-class="{
                    'menu-product__tall-picture': gamesProduct.isTall,
                    'menu-product__picture': !gamesProduct.isTall
                }"
            ><span class="menu-product__loader-title">{{ product.title }}</span><img class="menu-product__image" alt="{{ product.title }}" ng-srcset="https:{{ product.image | image:196:&#039;jpg&#039; }} 1x, https:{{ product.image | image:392:&#039;jpg&#039; }} 2x"
                    ng-hide="gamesProduct.isTall"
                ><img ng-srcset="{{ gamesProduct.coverImage }}" alt="{{ product.title }}" class="menu-product__image menu-product__image--tall"
                    ng-show="gamesProduct.isTall"
                ><svg viewBox="0 0 32 32" class="menu-product__is-wishlisted"
                     ng-show="product.isWishlisted"
                ><use xlink:href="#icon-wishlisted2"></svg></div><div class="menu-product__content"><div class="menu-product__content-in"><div class="menu-product__os js-os-support"><span ng-show="product.isGame"><i class="menu-product__os-icon menu-product__os-icon--windows"
                                ng-show="product.worksOn.Windows"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--mac"
                               ng-show="product.worksOn.Mac"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--linux"
                               ng-show="product.worksOn.Linux"
                            ></i></span></div><div class="menu-product__movie-label"
                        ng-show="product.isMovie"
                    >
                        film 
                    </div><div class="menu-product__flags"><span ng-show="product.isComingSoon"
                class="menu-product__flag menu-product__flag--soon"
            >wkrótce</span><span ng-show="product.isInDevelopment"
                class="menu-product__flag menu-product__flag--in-dev"
            >W produkcji</span></div><div class="menu-product__discount product-state__discount"><span class="menu-product__discount-text"><span ng-bind="product.price.discountPercentage"></span>%
                        </span></div></div></div></a></div></div></div><div class="menu-inside-category__column"
                ng-class="{'menu-inside-category__column--expendable': games.selectedCategory.hideColumn == 3}"
            ><div class="menu-category-item"
                    ng-repeat="gamesProduct in games.selectedCategory.columns[2]"
                ><div             ng-if="!gamesProduct.isCollection"
            gog-product="{{ gamesProduct.gameId }}"
            gog-product-repository="menuStoreProducts"
            class="menu-product menu-product--grid menu-product-state-holder js-focusable-element"
        ng-click="productCtrl.productClicked($index + 1)"
><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-click="productCtrl.addToCart(); $event.preventDefault(); "
            ng-hide="product.customAttributes.customPriceButtonVariant == 'join'"
            gog-track-event='{eventAction: "addToCart {{ games.selectedCategory.name }} {{ $index + 1 }}-1", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
            ng-class="{
                'price-btn--in-cart' : product.inCart,
                'price-btn--free': product.price.isFree
            }"
        ><span class="menu-product__price-btn-text"
                 ng-hide="!product.isPricingEnabled"
            ><span class="product-status__in-cart"><svg viewBox="0 0 32 32" class="menu-product__cart-icon"><use xlink:href="#icon-cart2"></svg></span><span class="product-state__is-tba">
                    Wkrótce
                </span><span class="price-btn__text--owned product-state__is-owned">
                    Kupione
                </span><span class="product-state__is-free">
                    Za darmo
                </span><span class="_price product-state__price" ng-bind="product.price.amount"></span></span><span class="menu-product__price-btn-text"
                 ng-hide="product.isPricingEnabled"
            >Kup</span></div><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-show="product.customAttributes.customPriceButtonVariant == 'join'"
        ><span class="menu-product__price-btn-text menu-product__price-btn-text--join"><span class="price-btn__text--owned">
                    Kupione
                </span><span class="price-btn__text--join">
                    Za darmo
                </span></span></div><a class="menu-product__link"
        ng-href="{{ product.url }}"
                gog-track-event='{eventAction: "goToLink {{ games.selectedCategory.name }} {{ $index + 1 }}-1", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
        ><div ng-class="{
                    'menu-product__tall-picture': gamesProduct.isTall,
                    'menu-product__picture': !gamesProduct.isTall
                }"
            ><span class="menu-product__loader-title">{{ product.title }}</span><img class="menu-product__image" alt="{{ product.title }}" ng-srcset="https:{{ product.image | image:196:&#039;jpg&#039; }} 1x, https:{{ product.image | image:392:&#039;jpg&#039; }} 2x"
                    ng-hide="gamesProduct.isTall"
                ><img ng-srcset="{{ gamesProduct.coverImage }}" alt="{{ product.title }}" class="menu-product__image menu-product__image--tall"
                    ng-show="gamesProduct.isTall"
                ><svg viewBox="0 0 32 32" class="menu-product__is-wishlisted"
                     ng-show="product.isWishlisted"
                ><use xlink:href="#icon-wishlisted2"></svg></div><div class="menu-product__content"><div class="menu-product__content-in"><div class="menu-product__os js-os-support"><span ng-show="product.isGame"><i class="menu-product__os-icon menu-product__os-icon--windows"
                                ng-show="product.worksOn.Windows"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--mac"
                               ng-show="product.worksOn.Mac"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--linux"
                               ng-show="product.worksOn.Linux"
                            ></i></span></div><div class="menu-product__movie-label"
                        ng-show="product.isMovie"
                    >
                        film 
                    </div><div class="menu-product__flags"><span ng-show="product.isComingSoon"
                class="menu-product__flag menu-product__flag--soon"
            >wkrótce</span><span ng-show="product.isInDevelopment"
                class="menu-product__flag menu-product__flag--in-dev"
            >W produkcji</span></div><div class="menu-product__discount product-state__discount"><span class="menu-product__discount-text"><span ng-bind="product.price.discountPercentage"></span>%
                        </span></div></div></div></a></div></div></div></div><a class="menu-btn menu-btn--full menu-category-btn"
            ng-href="{{ games.selectedCategory.url }}"
            ng-hide="games.selectedCategory.name == 'all'"
            ng-bind="games.selectedCategory.categoryButton"
            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "All {{ games.selectedCategory.name }} Games "}'
        ></a></div></div><div class="menu-inside-category"
        ng-show="!games.selectedCategory.isSpecial"
        hook-test="storeSectionMenu"
    ><p class="menu-inside-category__title" ng-bind="games.selectedCategory.categoryTitle"></p><div class="menu-products cf"><div class="menu-inside-category__column"
                ng-class="{'menu-inside-category__column--expendable': games.selectedCategory.hideColumn == 1}"
            ><div class="menu-category-item"
                    ng-repeat="gamesProduct in games.selectedCategory.columns[0]"
                ><div             ng-if="!gamesProduct.isCollection"
            gog-product="{{ gamesProduct.gameId }}"
            gog-product-repository="menuStoreProducts"
            class="menu-product menu-product--grid menu-product-state-holder js-focusable-element"
        ng-click="productCtrl.productClicked($index + 1)"
><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-click="productCtrl.addToCart(); $event.preventDefault(); "
            ng-hide="product.customAttributes.customPriceButtonVariant == 'join'"
            gog-track-event='{eventAction: "addToCart {{ games.selectedCategory.name }} {{ $index + 1 }}-1", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
            ng-class="{
                'price-btn--in-cart' : product.inCart,
                'price-btn--free': product.price.isFree
            }"
        ><span class="menu-product__price-btn-text"
                 ng-hide="!product.isPricingEnabled"
            ><span class="product-status__in-cart"><svg viewBox="0 0 32 32" class="menu-product__cart-icon"><use xlink:href="#icon-cart2"></svg></span><span class="product-state__is-tba">
                    Wkrótce
                </span><span class="price-btn__text--owned product-state__is-owned">
                    Kupione
                </span><span class="product-state__is-free">
                    Za darmo
                </span><span class="_price product-state__price" ng-bind="product.price.amount"></span></span><span class="menu-product__price-btn-text"
                 ng-hide="product.isPricingEnabled"
            >Kup</span></div><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-show="product.customAttributes.customPriceButtonVariant == 'join'"
        ><span class="menu-product__price-btn-text menu-product__price-btn-text--join"><span class="price-btn__text--owned">
                    Kupione
                </span><span class="price-btn__text--join">
                    Za darmo
                </span></span></div><a class="menu-product__link"
        ng-href="{{ product.url }}"
                gog-track-event='{eventAction: "goToLink {{ games.selectedCategory.name }} {{ $index + 1 }}-1", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
        ><div ng-class="{
                    'menu-product__tall-picture': gamesProduct.isTall,
                    'menu-product__picture': !gamesProduct.isTall
                }"
            ><span class="menu-product__loader-title">{{ product.title }}</span><img class="menu-product__image" alt="{{ product.title }}" ng-srcset="https:{{ product.image | image:196:&#039;jpg&#039; }} 1x, https:{{ product.image | image:392:&#039;jpg&#039; }} 2x"
                    ng-hide="gamesProduct.isTall"
                ><img ng-srcset="{{ gamesProduct.coverImage }}" alt="{{ product.title }}" class="menu-product__image menu-product__image--tall"
                    ng-show="gamesProduct.isTall"
                ><svg viewBox="0 0 32 32" class="menu-product__is-wishlisted"
                     ng-show="product.isWishlisted"
                ><use xlink:href="#icon-wishlisted2"></svg></div><div class="menu-product__content"><div class="menu-product__content-in"><div class="menu-product__os js-os-support"><span ng-show="product.isGame"><i class="menu-product__os-icon menu-product__os-icon--windows"
                                ng-show="product.worksOn.Windows"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--mac"
                               ng-show="product.worksOn.Mac"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--linux"
                               ng-show="product.worksOn.Linux"
                            ></i></span></div><div class="menu-product__movie-label"
                        ng-show="product.isMovie"
                    >
                        film 
                    </div><div class="menu-product__flags"><span ng-show="product.isComingSoon"
                class="menu-product__flag menu-product__flag--soon"
            >wkrótce</span><span ng-show="product.isInDevelopment"
                class="menu-product__flag menu-product__flag--in-dev"
            >W produkcji</span></div><div class="menu-product__discount product-state__discount"><span class="menu-product__discount-text"><span ng-bind="product.price.discountPercentage"></span>%
                        </span></div></div></div></a></div><div class="menu-collection"
    ng-if="gamesProduct.isCollection"
><a class="menu-collection__link"
        ng-href="{{ gamesProduct.url }}"
        gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "{{ gamesProduct.collectionName }} {{ category.name }}" }'
    ><div class="menu-collection__picture"
                ng-class="{ 'is-super-tall': gamesProduct.isSuperTall,
                            'is-tall': gamesProduct.isTall }"
            ><span class="menu-collection__loader-title" ng-bind="gamesProduct.collectionName"></span><img ng-srcset="{{ gamesProduct.coverImage }}" class="menu-collection__image"
                    ng-show="gamesProduct.isTall"
                ><img ng-srcset="{{ gamesProduct.coverImage }}" class="menu-collection__image"
                    ng-show="gamesProduct.isSuperTall"
                ></div><div class="menu-collection__name" ng-bind="gamesProduct.collectionName"></div></a></div></div><a href="/games" class="menu-category-item-wishlist-placeholder"
                    ng-show="games.selectedCategory.columns[0].length < 2"
                ><svg viewBox="0 0 32 32" class="menu-category-item-wishlist-placeholder__icon"><use xlink:href="#icon-wishlist3"></svg><span class="menu-category-item-wishlist-placeholder__text">Dodaj więcej gier do listy życzeń</span></a><a href="/games" class="menu-category-item-wishlist-placeholder"
                    ng-show="games.selectedCategory.columns[0].length == 0"
                ><svg viewBox="0 0 32 32" class="menu-category-item-wishlist-placeholder__icon"><use xlink:href="#icon-wishlist3"></svg><span class="menu-category-item-wishlist-placeholder__text">Dodaj więcej gier do listy życzeń</span></a></div><div class="menu-inside-category__column"
                ng-class="{'menu-inside-category__column--expendable': games.selectedCategory.hideColumn == 2}"
            ><div class="menu-category-item"
                    ng-repeat="gamesProduct in games.selectedCategory.columns[1]"
                ><div             ng-if="!gamesProduct.isCollection"
            gog-product="{{ gamesProduct.gameId }}"
            gog-product-repository="menuStoreProducts"
            class="menu-product menu-product--grid menu-product-state-holder js-focusable-element"
        ng-click="productCtrl.productClicked($index + 1)"
><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-click="productCtrl.addToCart(); $event.preventDefault(); "
            ng-hide="product.customAttributes.customPriceButtonVariant == 'join'"
            gog-track-event='{eventAction: "addToCart {{ games.selectedCategory.name }} {{ $index + 1 }}-2", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
            ng-class="{
                'price-btn--in-cart' : product.inCart,
                'price-btn--free': product.price.isFree
            }"
        ><span class="menu-product__price-btn-text"
                 ng-hide="!product.isPricingEnabled"
            ><span class="product-status__in-cart"><svg viewBox="0 0 32 32" class="menu-product__cart-icon"><use xlink:href="#icon-cart2"></svg></span><span class="product-state__is-tba">
                    Wkrótce
                </span><span class="price-btn__text--owned product-state__is-owned">
                    Kupione
                </span><span class="product-state__is-free">
                    Za darmo
                </span><span class="_price product-state__price" ng-bind="product.price.amount"></span></span><span class="menu-product__price-btn-text"
                 ng-hide="product.isPricingEnabled"
            >Kup</span></div><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-show="product.customAttributes.customPriceButtonVariant == 'join'"
        ><span class="menu-product__price-btn-text menu-product__price-btn-text--join"><span class="price-btn__text--owned">
                    Kupione
                </span><span class="price-btn__text--join">
                    Za darmo
                </span></span></div><a class="menu-product__link"
        ng-href="{{ product.url }}"
                gog-track-event='{eventAction: "goToLink {{ games.selectedCategory.name }} {{ $index + 1 }}-2", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
        ><div ng-class="{
                    'menu-product__tall-picture': gamesProduct.isTall,
                    'menu-product__picture': !gamesProduct.isTall
                }"
            ><span class="menu-product__loader-title">{{ product.title }}</span><img class="menu-product__image" alt="{{ product.title }}" ng-srcset="https:{{ product.image | image:196:&#039;jpg&#039; }} 1x, https:{{ product.image | image:392:&#039;jpg&#039; }} 2x"
                    ng-hide="gamesProduct.isTall"
                ><img ng-srcset="{{ gamesProduct.coverImage }}" alt="{{ product.title }}" class="menu-product__image menu-product__image--tall"
                    ng-show="gamesProduct.isTall"
                ><svg viewBox="0 0 32 32" class="menu-product__is-wishlisted"
                     ng-show="product.isWishlisted"
                ><use xlink:href="#icon-wishlisted2"></svg></div><div class="menu-product__content"><div class="menu-product__content-in"><div class="menu-product__os js-os-support"><span ng-show="product.isGame"><i class="menu-product__os-icon menu-product__os-icon--windows"
                                ng-show="product.worksOn.Windows"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--mac"
                               ng-show="product.worksOn.Mac"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--linux"
                               ng-show="product.worksOn.Linux"
                            ></i></span></div><div class="menu-product__movie-label"
                        ng-show="product.isMovie"
                    >
                        film 
                    </div><div class="menu-product__flags"><span ng-show="product.isComingSoon"
                class="menu-product__flag menu-product__flag--soon"
            >wkrótce</span><span ng-show="product.isInDevelopment"
                class="menu-product__flag menu-product__flag--in-dev"
            >W produkcji</span></div><div class="menu-product__discount product-state__discount"><span class="menu-product__discount-text"><span ng-bind="product.price.discountPercentage"></span>%
                        </span></div></div></div></a></div><div class="menu-collection"
    ng-if="gamesProduct.isCollection"
><a class="menu-collection__link"
        ng-href="{{ gamesProduct.url }}"
        gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "{{ gamesProduct.collectionName }} {{ category.name }}" }'
    ><div class="menu-collection__picture"
                ng-class="{ 'is-super-tall': gamesProduct.isSuperTall,
                            'is-tall': gamesProduct.isTall }"
            ><span class="menu-collection__loader-title" ng-bind="gamesProduct.collectionName"></span><img ng-srcset="{{ gamesProduct.coverImage }}" class="menu-collection__image"
                    ng-show="gamesProduct.isTall"
                ><img ng-srcset="{{ gamesProduct.coverImage }}" class="menu-collection__image"
                    ng-show="gamesProduct.isSuperTall"
                ></div><div class="menu-collection__name" ng-bind="gamesProduct.collectionName"></div></a></div></div><a href="/games" class="menu-category-item-wishlist-placeholder"
                    ng-show="games.selectedCategory.columns[1].length < 2"
                ><svg viewBox="0 0 32 32" class="menu-category-item-wishlist-placeholder__icon"><use xlink:href="#icon-wishlist3"></svg><span class="menu-category-item-wishlist-placeholder__text">Dodaj więcej gier do listy życzeń</span></a><a href="/games" class="menu-category-item-wishlist-placeholder"
                    ng-show="games.selectedCategory.columns[1].length == 0"
                ><svg viewBox="0 0 32 32" class="menu-category-item-wishlist-placeholder__icon"><use xlink:href="#icon-wishlist3"></svg><span class="menu-category-item-wishlist-placeholder__text">Dodaj więcej gier do listy życzeń</span></a></div><div class="menu-inside-category__column"
                ng-class="{'menu-inside-category__column--expendable': games.selectedCategory.hideColumn == 3}"
            ><div class="menu-category-item"
                    ng-repeat="gamesProduct in games.selectedCategory.columns[2]"
                ><div             ng-if="!gamesProduct.isCollection"
            gog-product="{{ gamesProduct.gameId }}"
            gog-product-repository="menuStoreProducts"
            class="menu-product menu-product--grid menu-product-state-holder js-focusable-element"
        ng-click="productCtrl.productClicked($index + 1)"
><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-click="productCtrl.addToCart(); $event.preventDefault(); "
            ng-hide="product.customAttributes.customPriceButtonVariant == 'join'"
            gog-track-event='{eventAction: "addToCart {{ games.selectedCategory.name }} {{ $index + 1 }}-3", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
            ng-class="{
                'price-btn--in-cart' : product.inCart,
                'price-btn--free': product.price.isFree
            }"
        ><span class="menu-product__price-btn-text"
                 ng-hide="!product.isPricingEnabled"
            ><span class="product-status__in-cart"><svg viewBox="0 0 32 32" class="menu-product__cart-icon"><use xlink:href="#icon-cart2"></svg></span><span class="product-state__is-tba">
                    Wkrótce
                </span><span class="price-btn__text--owned product-state__is-owned">
                    Kupione
                </span><span class="product-state__is-free">
                    Za darmo
                </span><span class="_price product-state__price" ng-bind="product.price.amount"></span></span><span class="menu-product__price-btn-text"
                 ng-hide="product.isPricingEnabled"
            >Kup</span></div><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-show="product.customAttributes.customPriceButtonVariant == 'join'"
        ><span class="menu-product__price-btn-text menu-product__price-btn-text--join"><span class="price-btn__text--owned">
                    Kupione
                </span><span class="price-btn__text--join">
                    Za darmo
                </span></span></div><a class="menu-product__link"
        ng-href="{{ product.url }}"
                gog-track-event='{eventAction: "goToLink {{ games.selectedCategory.name }} {{ $index + 1 }}-3", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
        ><div ng-class="{
                    'menu-product__tall-picture': gamesProduct.isTall,
                    'menu-product__picture': !gamesProduct.isTall
                }"
            ><span class="menu-product__loader-title">{{ product.title }}</span><img class="menu-product__image" alt="{{ product.title }}" ng-srcset="https:{{ product.image | image:196:&#039;jpg&#039; }} 1x, https:{{ product.image | image:392:&#039;jpg&#039; }} 2x"
                    ng-hide="gamesProduct.isTall"
                ><img ng-srcset="{{ gamesProduct.coverImage }}" alt="{{ product.title }}" class="menu-product__image menu-product__image--tall"
                    ng-show="gamesProduct.isTall"
                ><svg viewBox="0 0 32 32" class="menu-product__is-wishlisted"
                     ng-show="product.isWishlisted"
                ><use xlink:href="#icon-wishlisted2"></svg></div><div class="menu-product__content"><div class="menu-product__content-in"><div class="menu-product__os js-os-support"><span ng-show="product.isGame"><i class="menu-product__os-icon menu-product__os-icon--windows"
                                ng-show="product.worksOn.Windows"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--mac"
                               ng-show="product.worksOn.Mac"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--linux"
                               ng-show="product.worksOn.Linux"
                            ></i></span></div><div class="menu-product__movie-label"
                        ng-show="product.isMovie"
                    >
                        film 
                    </div><div class="menu-product__flags"><span ng-show="product.isComingSoon"
                class="menu-product__flag menu-product__flag--soon"
            >wkrótce</span><span ng-show="product.isInDevelopment"
                class="menu-product__flag menu-product__flag--in-dev"
            >W produkcji</span></div><div class="menu-product__discount product-state__discount"><span class="menu-product__discount-text"><span ng-bind="product.price.discountPercentage"></span>%
                        </span></div></div></div></a></div><div class="menu-collection"
    ng-if="gamesProduct.isCollection"
><a class="menu-collection__link"
        ng-href="{{ gamesProduct.url }}"
        gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "{{ gamesProduct.collectionName }} {{ category.name }}" }'
    ><div class="menu-collection__picture"
                ng-class="{ 'is-super-tall': gamesProduct.isSuperTall,
                            'is-tall': gamesProduct.isTall }"
            ><span class="menu-collection__loader-title" ng-bind="gamesProduct.collectionName"></span><img ng-srcset="{{ gamesProduct.coverImage }}" class="menu-collection__image"
                    ng-show="gamesProduct.isTall"
                ><img ng-srcset="{{ gamesProduct.coverImage }}" class="menu-collection__image"
                    ng-show="gamesProduct.isSuperTall"
                ></div><div class="menu-collection__name" ng-bind="gamesProduct.collectionName"></div></a></div></div><a href="/games" class="menu-category-item-wishlist-placeholder"
                    ng-show="games.selectedCategory.columns[2].length < 2"
                ><svg viewBox="0 0 32 32" class="menu-category-item-wishlist-placeholder__icon"><use xlink:href="#icon-wishlist3"></svg><span class="menu-category-item-wishlist-placeholder__text">Dodaj więcej gier do listy życzeń</span></a><a href="/games" class="menu-category-item-wishlist-placeholder"
                    ng-show="games.selectedCategory.columns[2].length == 0"
                ><svg viewBox="0 0 32 32" class="menu-category-item-wishlist-placeholder__icon"><use xlink:href="#icon-wishlist3"></svg><span class="menu-category-item-wishlist-placeholder__text">Dodaj więcej gier do listy życzeń</span></a></div></div><a class="menu-btn menu-btn--full menu-category-btn"
            ng-href="{{ games.selectedCategory.url }}"
            ng-hide="games.selectedCategory.name == 'all'"
            ng-bind="games.selectedCategory.categoryButton"
            gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'All {{ games.selectedCategory.name }} Games '}"
        ></a></div></div><div class="menu-submenu-item menu-submenu-item--custom"
            ng-mouseover="games.selectCategory(customCategory.name)"
            ng-class="{'is-active': games.selectedCategory.name == customCategory.name}"
            ng-repeat="customCategory in games.customCategories track by customCategory.name"
        ><a  class="menu-submenu-link menu-custom-category-link menu-custom-category-link js-menu-category-link"
                ng-style="{'color': customCategory.customisation.categoryColor }"
                ng-href="{{ customCategory.url }}"ng-touchstart="$event.preventDefault(); games.selectCategory(customCategory.name)"
                gog-track-event='{eventAction: "goToLink featured game{{ games.selectedCategoryNumber }}", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
            > {{ customCategory.categoryTitle }}
                <svg viewBox="0 0 32 32" class="menu-submenu-icon menu-submenu-icon--custom"
                    ng-style="{'fill': customCategory.customisation.categoryColor}"
                ><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon menu-submenu-icon--custom"
                    ng-style="{'fill': customCategory.customisation.categoryColor}"
                ><use xlink:href="#icon-arrow-right4"></svg></a></div><div class="menu-submenu-separator"
            ng-show="games.customCategoriesCount > 0"
        ></div><div class="menu-submenu-item "
                        ng-mouseover="games.selectCategory('new-releases')"
                        ng-class="{'is-active': games.selectedCategory.name == 'new-releases'}"
                        hook-test="storeMenunew-releases"
                        ng-show="games.hasCategory('new-releases')"
                    ><a class="menu-submenu-link  menu-submenu-link--featured js-menu-category-link"
                            href="/games?sort=date&amp;page=1"
                            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "new-releases STORE"}'
                            ng-touchstart="$event.preventDefault(); games.selectCategory('new-releases')"
                            hook-test="storeMenunew-releasesButton"
                                                    >Premiery
                            <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a></div><div class="menu-submenu-item "
                        ng-mouseover="games.selectCategory('bestsellers')"
                        ng-class="{'is-active': games.selectedCategory.name == 'bestsellers'}"
                        hook-test="storeMenubestsellers"
                        ng-show="games.hasCategory('bestsellers')"
                    ><a class="menu-submenu-link  menu-submenu-link--featured js-menu-category-link"
                            href="/games?sort=popularity&amp;page=1"
                            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "bestsellers STORE"}'
                            ng-touchstart="$event.preventDefault(); games.selectCategory('bestsellers')"
                            hook-test="storeMenubestsellersButton"
                                                    >Bestsellery
                            <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a></div><div class="menu-submenu-item "
                        ng-mouseover="games.selectCategory('on-sale-now')"
                        ng-class="{'is-active': games.selectedCategory.name == 'on-sale-now'}"
                        hook-test="storeMenuon-sale-now"
                        ng-show="games.hasCategory('on-sale-now')"
                    ><a class="menu-submenu-link  menu-submenu-link--featured js-menu-category-link"
                            href="/games?price=discounted&amp;sort=popularity&amp;page=1"
                            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "on-sale-now STORE"}'
                            ng-touchstart="$event.preventDefault(); games.selectCategory('on-sale-now')"
                            hook-test="storeMenuon-sale-nowButton"
                                                    >Teraz w promocji
                            <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a></div><div class="menu-submenu-separator"></div><div class="menu-submenu-item "
                        ng-mouseover="games.selectCategory('action')"
                        ng-class="{'is-active': games.selectedCategory.name == 'action'}"
                        hook-test="storeMenuaction"
                        ng-show="games.hasCategory('action')"
                    ><a class="menu-submenu-link   js-menu-category-link"
                            href="/games/action?sort=popularity&amp;page=1"
                            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "action STORE"}'
                            ng-touchstart="$event.preventDefault(); games.selectCategory('action')"
                            hook-test="storeMenuactionButton"
                                                    >Akcji
                            <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a></div><div class="menu-submenu-item "
                        ng-mouseover="games.selectCategory('adventure')"
                        ng-class="{'is-active': games.selectedCategory.name == 'adventure'}"
                        hook-test="storeMenuadventure"
                        ng-show="games.hasCategory('adventure')"
                    ><a class="menu-submenu-link   js-menu-category-link"
                            href="/games/adventure?sort=popularity&amp;page=1"
                            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "adventure STORE"}'
                            ng-touchstart="$event.preventDefault(); games.selectCategory('adventure')"
                            hook-test="storeMenuadventureButton"
                                                    >Przygodowe
                            <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a></div><div class="menu-submenu-item "
                        ng-mouseover="games.selectCategory('indie')"
                        ng-class="{'is-active': games.selectedCategory.name == 'indie'}"
                        hook-test="storeMenuindie"
                        ng-show="games.hasCategory('indie')"
                    ><a class="menu-submenu-link   js-menu-category-link"
                            href="/games/indie?sort=popularity&amp;page=1"
                            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "indie STORE"}'
                            ng-touchstart="$event.preventDefault(); games.selectCategory('indie')"
                            hook-test="storeMenuindieButton"
                                                    >Niezależne
                            <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a></div><div class="menu-submenu-item "
                        ng-mouseover="games.selectCategory('role-playing')"
                        ng-class="{'is-active': games.selectedCategory.name == 'role-playing'}"
                        hook-test="storeMenurole-playing"
                        ng-show="games.hasCategory('role-playing')"
                    ><a class="menu-submenu-link   js-menu-category-link"
                            href="/games/role-playing?sort=popularity&amp;page=1"
                            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "role-playing STORE"}'
                            ng-touchstart="$event.preventDefault(); games.selectCategory('role-playing')"
                            hook-test="storeMenurole-playingButton"
                                                    >RPG
                            <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a></div><div class="menu-submenu-item "
                        ng-mouseover="games.selectCategory('shooter')"
                        ng-class="{'is-active': games.selectedCategory.name == 'shooter'}"
                        hook-test="storeMenushooter"
                        ng-show="games.hasCategory('shooter')"
                    ><a class="menu-submenu-link   js-menu-category-link"
                            href="/games/shooter?sort=popularity&amp;page=1"
                            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "shooter STORE"}'
                            ng-touchstart="$event.preventDefault(); games.selectCategory('shooter')"
                            hook-test="storeMenushooterButton"
                                                    >Strzelanki
                            <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a></div><div class="menu-submenu-item "
                        ng-mouseover="games.selectCategory('simulation')"
                        ng-class="{'is-active': games.selectedCategory.name == 'simulation'}"
                        hook-test="storeMenusimulation"
                        ng-show="games.hasCategory('simulation')"
                    ><a class="menu-submenu-link   js-menu-category-link"
                            href="/games/simulation?sort=popularity&amp;page=1"
                            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "simulation STORE"}'
                            ng-touchstart="$event.preventDefault(); games.selectCategory('simulation')"
                            hook-test="storeMenusimulationButton"
                                                    >Symulatory
                            <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a></div><div class="menu-submenu-item "
                        ng-mouseover="games.selectCategory('sports')"
                        ng-class="{'is-active': games.selectedCategory.name == 'sports'}"
                        hook-test="storeMenusports"
                        ng-show="games.hasCategory('sports')"
                    ><a class="menu-submenu-link   js-menu-category-link"
                            href="/games?sort=popularity&amp;search=sports | racing&amp;page=1"
                            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "sports STORE"}'
                            ng-touchstart="$event.preventDefault(); games.selectCategory('sports')"
                            hook-test="storeMenusportsButton"
                                                    >Sportowe i wyścigowe
                            <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a></div><div class="menu-submenu-item "
                        ng-mouseover="games.selectCategory('strategy')"
                        ng-class="{'is-active': games.selectedCategory.name == 'strategy'}"
                        hook-test="storeMenustrategy"
                        ng-show="games.hasCategory('strategy')"
                    ><a class="menu-submenu-link   js-menu-category-link"
                            href="/games/strategy?sort=popularity&amp;page=1"
                            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "strategy STORE"}'
                            ng-touchstart="$event.preventDefault(); games.selectCategory('strategy')"
                            hook-test="storeMenustrategyButton"
                                                    >Strategiczne
                            <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a></div><div class="menu-submenu-item "
                        ng-mouseover="games.selectCategory('movies')"
                        ng-class="{'is-active': games.selectedCategory.name == 'movies'}"
                        hook-test="storeMenumovies"
                        ng-show="games.hasCategory('movies')"
                    ><a class="menu-submenu-link   js-menu-category-link"
                            href="/movies?sort=popularity&amp;page=1"
                            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "movies STORE"}'
                            ng-touchstart="$event.preventDefault(); games.selectCategory('movies')"
                            hook-test="storeMenumoviesButton"
                                                    >Filmy dla graczy
                            <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a></div><div class="menu-submenu-separator"></div><div class="menu-submenu-item "
                        ng-mouseover="games.selectCategory('all')"
                        ng-class="{'is-active': games.selectedCategory.name == 'all'}"
                        hook-test="storeMenuall"
                        ng-show="games.hasCategory('all')"
                    ><a class="menu-submenu-link   js-menu-category-link"
                            href="/games?sort=popularity&amp;page=1"
                            gog-track-event='{eventAction: "goToLink", eventCategory: "topBar", eventLabel: "all STORE"}'
                            ng-touchstart="$event.preventDefault(); games.selectCategory('all')"
                            hook-test="storeMenuallButton"
                                                    >Przeglądaj wszystkie gry
                            <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a></div></div></div><div class="menu-item menu-item--animated has-submenu hide-in-lite-mode hide-in-normal-mode menu-item--grouped js-menu-grouped"
    ng-mouseenter="menu.showWithDelay($event, 'grouped')"
    ng-mouseleave="menu.hide($event, 'grouped')"
    hook-test="menuMore"
><a class="menu-link menu-uppercase"
        ng-touchstart="$event.preventDefault(); menu.toggle($event, 'grouped')"
    >
        Więcej
        <svg viewBox="0 0 32 32" class="menu-link__dropdown-icon"><use xlink:href="#icon-arrow-down2"></svg></a><span class="menu-triangle"></span><div class="menu-submenu js-menu"><div class="menu-submenu-item  menu-submenu-item--hover"><a href="/about_gog" class="menu-submenu-link"
                    gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'GOG.com ABOUT'}"
                >GOG.com</a></div><div class="menu-submenu-item  menu-submenu-item--hover"><a href="/galaxy" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'GOG Galaxy App ABOUT'}"
            >GOG Galaxy</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="/work" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'We are hiring ABOUT'}"
            >Pracuj z nami</a></div><div class="menu-submenu-separator"></div><div class="menu-submenu-item  menu-submenu-item--hover"><a href="https://support.gog.com/hc/pl/categories/201400969" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Game Technical Issues SUPPORT'}"
            >Problemy techniczne z grami</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="https://support.gog.com/hc/pl/categories/201552965" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Orders and payments SUPPORT'}"
            >Zamówienia i płatności</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="https://support.gog.com/hc/pl/categories/201552985" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Account and Website SUPPORT'}"
            >Konto użytkownika i strona</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="https://support.gog.com/hc/pl/categories/201553005" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Downloads SUPPORT'}"
            >Pobieranie plików</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="https://support.gog.com/hc/pl/categories/201553025" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'GOG Galaxy SUPPORT'}"
            >GOG Galaxy</a></div><div class="menu-submenu-separator"></div><div class="menu-submenu-item  menu-submenu-item--hover"><a href="/forum" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Forums COMMUNITY'}"
            >Forums</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="/wishlist" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Community Wishlist COMMUNITY'}"
            >Lista życzeń społeczności</a></div><div class="menu-submenu-separator"></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="https://www.facebook.com/gogcom" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Facebook COMMUNITY'}"
            >Facebook</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="https://twitter.com/GOGcom" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Twitter COMMUNITY'}"
            >Twitter</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="https://www.twitch.tv/gogcom" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Twitch COMMUNITY'}"
            >Twitch</a></div></div></div><div class="menu-item menu-item--animated has-submenu hide-in-lite-mode hide-in-grouped-mode js-menu-about"
    ng-mouseenter="menu.showWithDelay($event, 'about')"
    ng-mouseleave="menu.hide($event, 'about')"
    hook-test="menuAbout"
><a href="/about_gog" class="menu-link menu-uppercase"
                ng-touchstart="$event.preventDefault(); menu.toggle($event, 'about')"
    >
        O nas
        <svg viewBox="0 0 32 32" class="menu-link__dropdown-icon"><use xlink:href="#icon-arrow-down2"></svg></a><span class="menu-triangle"></span><div class="menu-submenu js-menu"><div class="menu-submenu-item  menu-submenu-item--hover"><a href="/about_gog" class="menu-submenu-link"
                    gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'GOG.com ABOUT'}"
                >GOG.com</a></div><div class="menu-submenu-item  menu-submenu-item--hover"><a href="/galaxy" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'GOG Galaxy App ABOUT'}"
            >GOG Galaxy</a></div><div class="menu-submenu-separator"></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="/work" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'We are hiring ABOUT'}"
            >Pracuj z nami</a></div></div></div><div class="menu-item menu-item--animated has-submenu hide-in-lite-mode hide-in-grouped-mode js-menu-community"
    ng-mouseenter="menu.showWithDelay($event, 'community')"
    ng-mouseleave="menu.hide($event, 'community')"
    hook-test="menuCommunity"
        menu-pending-notifications
    ><a class="menu-link menu-uppercase"
        href="/forum"
                ng-touchstart="$event.preventDefault(); menu.toggle($event, 'community')"
        hook-test="menuCommunityButton"        ng-class="{'menu-link--pending-notifications': menuPendingNotifications.hasPendingNotificationsOfType('new_forum_reply') > 0}"
            >Społeczność<svg viewBox="0 0 32 32" class="menu-link__dropdown-icon"><use xlink:href="#icon-arrow-down2"></svg></a><span class="menu-triangle"></span><div class="menu-submenu js-menu"><div class="menu-submenu-item  menu-submenu-item--hover"><a class="menu-submenu-link"
                href="/forum"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'All forums COMMUNITY'}"
            >Wszystkie fora</a></div><div class="menu-submenu-item  menu-submenu-item--hover"><a class="menu-submenu-link"
                href="/forum/general_pl"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'General discussion forums COMMUNITY'}"
            >Forum ogólne</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a class="menu-submenu-link" hook-test="menuAccountForumReplies"
                    href="/forum/myrecentposts"
                    ng-class="{'menu-submenu-link--pending-notifications': menuPendingNotifications.hasPendingNotificationsOfType('new_forum_reply') > 0}"
                    gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Forum replies COMMUNITY'}"
                >Odpowiedzi na forum</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a class="menu-submenu-link"
                href="/wishlist"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Community Wishlist COMMUNITY'}"
            >Lista życzeń społeczności</a></div><div class="menu-submenu-separator"></div><div class="menu-submenu-item menu-submenu-item--hover"><a class="menu-submenu-link"
                href="https://www.facebook.com/gogcom"
                target="_blank"
                                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Facebook COMMUNITY'}"
            >Facebook</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a class="menu-submenu-link"
                href="https://twitter.com/GOGcom"
                target="_blank"
                                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Twitter COMMUNITY'}"
            >Twitter</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a class="menu-submenu-link"
                href="https://www.twitch.tv/gogcom"
                target="_blank"
                                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Twitch COMMUNITY'}"
            >Twitch</a></div></div></div><div class="menu-item menu-item--animated has-submenu hide-in-lite-mode hide-in-grouped-mode js-menu-support"
    ng-mouseenter="menu.showWithDelay($event, 'support')"
    ng-mouseleave="menu.hide($event, 'support')"
    hook-test="menuSupport"
><a href="https://support.gog.com/hc/pl" class="menu-link menu-uppercase"
                ng-touchstart="$event.preventDefault(); menu.toggle($event, 'support')"
    >
        Pomoc
        <svg viewBox="0 0 32 32" class="menu-link__dropdown-icon"><use xlink:href="#icon-arrow-down2"></svg></a><span class="menu-triangle"></span><div class="menu-submenu js-menu"><div class="menu-submenu-item  menu-submenu-item--hover"><a href="https://support.gog.com/hc/pl/categories/201400969" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Game Technical Issues SUPPORT'}"
            >Problemy techniczne z grami</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="https://support.gog.com/hc/pl/categories/201552965" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Orders and payments SUPPORT'}"
            >Zamówienia i płatności</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="https://support.gog.com/hc/pl/categories/201552985" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Account and Website SUPPORT'}"
            >Konto użytkownika i strona</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="https://support.gog.com/hc/pl/categories/201553005" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Downloads SUPPORT'}"
            >Pobieranie plików</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="https://support.gog.com/hc/pl/categories/201553025" class="menu-submenu-link"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'GOG Galaxy SUPPORT'}"
            >GOG Galaxy</a></div></div></div><div class="menu-item menu-item--animated has-submenu menu-anonymous js-menu-anonymous"
    ng-cloak
    ng-controller="menuAnonymousCtrl as anonymous"
    ng-show="anonymous.isResponseFetched && !anonymous.isUserLoggedIn"
    ng-mouseenter="menu.show($event, 'anonymous')"
    ng-mouseleave="menu.hide($event, 'anonymous')"
    hook-test="menuAnonymous"
><a class="menu-link menu-link--anonymous menu-uppercase hide-on-touch-device"
        ng-click="anonymous.openLogin()"
        hook-test="menuAnonymousButton"
    ><span
            gog-track-event="{eventCategory: 'topBar', eventAction:'login', eventLabel:'Login' }"
        >Zaloguj się</span><svg viewBox="0 0 32 32" class="menu-link__dropdown-icon"><use xlink:href="#icon-arrow-down2"></svg><span class="menu-triangle menu-triangle--others menu-triangle--anonymous"></span></a><a class="menu-link menu-link--anonymous menu-uppercase hide-on-non-touch-device"
        hook-test="menuLoginMobile"
        ng-touchstart="$event.preventDefault(); menu.toggle($event, 'anonymous')"
    ><span
            gog-track-event="{eventCategory: 'topBar', eventAction:'login', eventLabel:'Login' }"
        >Zaloguj się</span><svg viewBox="0 0 32 32" class="menu-link__dropdown-icon"><use xlink:href="#icon-arrow-down2"></svg><span class="menu-triangle menu-triangle--others menu-triangle--anonymous"></span></a><div class="menu-submenu menu-anonymous__submenu"
        ng-click="menu.stopPropagation($event)"
        ng-mouseenter="menu.cancelTimeout('anonymous')"
    ><div class="menu-header menu-anonymous-header"><a class="menu-btn menu-btn--gray menu-anonymous-header__btn menu-anonymous-header__btn--create-account menu-uppercase"
                ng-click="anonymous.openRegistration()"
                hook-test="menuSignUp"
                gog-track-event="{eventCategory: 'topBar', eventAction:'register', eventLabel:'Register' }"
            >
                Utwórz konto
            </a><span class="menu-anonymous-header__separator"></span><a class="menu-btn menu-anonymous-header__btn menu-anonymous-header__btn--sign-in menu-uppercase"
                ng-click="anonymous.openLogin()"
                hook-test="menuLogin"
                gog-track-event="{eventCategory: 'topBar', eventAction:'login', eventLabel:'Login' }"
            >
                Zaloguj się
            </a></div><figure class="menu-anonymous__shelf"></figure><p class="menu-anonymous__about"><b>
                GOG.com to platforma cyfrowej dystrybucji - sklep internetowy z wyselekcjonowaną ofertą gier, opcjonalna aplikacja dająca Ci swobodę wyboru i tętniąca życiem społeczność graczy.
            </b>
            Wszystko to zrodzone z naszej miłości do gier, troski o klienta i przekonania, że zakupione gry na zawsze już należą do Ciebie.
        </p><p class="menu-anonymous__features-header"><span class="menu-anonymous__features-header-in">
                Dlaczego warto wybrać GOG.com?
            </span></p><div class="menu-features-slider"
    gog-menu-features-slider
    ng-mouseenter="slider.stop()"
    ng-mouseleave="slider.play()"
><span class="menu-features-slider__nav menu-features-slider__nav--left js-no-prevent-default"
        ng-click="slider.triggerPrevSlide()"
    ><svg viewBox="0 0 32 32" class="menu-features-slider__nav-icon"><use xlink:href="#icon-fat-arrow-left"></svg></span><span class="menu-features-slider__nav menu-features-slider__nav--right js-no-prevent-default"
        ng-click="slider.triggerNextSlide()"
    ><svg viewBox="0 0 32 32" class="menu-features-slider__nav-icon"><use xlink:href="#icon-fat-arrow-right"></svg></span><div class="menu-features-slider__slide js-slide is-active"><div class="menu-features-slider__slide-text"><svg viewBox="0 0 32 32" class="menu-features-slider__slide-icon menu-features-slider__slide-icon--slide1" viewBox="0 0 32 32"><use xlink:href="#icon-star"></svg><b class="menu-features-slider__slide-highlight menu-features-slider__slide-highlight--slide1">Wybrane spośród najlepszych gier.</b> Szeroki wybór wspaniałych gier, od najnowszych przebojów po ponadczasowe klasyki, obok których nie można przejść obojętnie.</div></div><div class="menu-features-slider__slide js-slide"><div class="menu-features-slider__slide-text"><svg viewBox="0 0 32 32" class="menu-features-slider__slide-icon menu-features-slider__slide-icon--slide2" viewBox="0 0 32 32"><use xlink:href="#icon-heart"></svg><b class="menu-features-slider__slide-highlight menu-features-slider__slide-highlight--slide2">Dbałość o klienta.</b> Zapewniamy przyjazną użytkownikowi pomoc techniczną oraz dodatkowe korzyści dla klientów.</div></div><div class="menu-features-slider__slide js-slide"><div class="menu-features-slider__slide-text"><svg viewBox="0 0 32 32" class="menu-features-slider__slide-icon menu-features-slider__slide-icon--slide3" viewBox="0 0 32 32"><use xlink:href="#icon-hand-picked"></svg><b class="menu-features-slider__slide-highlight menu-features-slider__slide-highlight--slide3">Miejsce przyjazne graczom.</b> Chcemy zmienić sposób w jaki kupujesz i grasz w gry, poprzez danie Ci swobody wyboru i zapewnienie bezproblemowego działania.</div></div><div class="menu-features-slider__timer is-on js-timer"><span class="menu-features-slider__timer-section js-timer-section"></span><span class="menu-features-slider__timer-section js-timer-section"></span><span class="menu-features-slider__timer-section js-timer-section"></span></div></div></div></div><div class="menu-item menu-item--animated menu-account has-submenu js-menu-account"
    ng-cloak
    ng-controller="menuAccountCtrl as account"
    ng-show="account.isUserLoggedIn"
    ng-mouseenter="menu.showWithDelay($event, 'account')"
    ng-mouseleave="menu.hide($event, 'account')"
    hook-test="menuAccount"
        menu-pending-notifications
    ><a class="menu-link" hook-test="menuAccountButton"
                ng-href="{{ account.defaultAccountPage }}"
                        ng-touchstart="$event.preventDefault(); menu.toggle($event, 'account')"
                ng-class="{'menu-link--pending-notifications': menuPendingNotifications.hasPendingNotificationsOfType('unseen_activities') > 0}"
                data-hj-suppress
    ><img ng-srcset="{{ account.userAvatars.menu_user_av_small }} 1x, {{ account.userAvatars.menu_user_av_small2 }} 2x" class="menu-link__image"
                ng-if="account.userAvatars" data-hj-suppress src=""
            ><span id="menuUsername" class="menu-username" ng-bind="account.username" data-hj-suppress=""></span><svg viewBox="0 0 32 32" class="menu-link__dropdown-icon"><use xlink:href="#icon-arrow-down2"></svg><span class="menu-triangle menu-triangle--others"></span></a><div class="menu-submenu menu-account__submenu"
        ng-mouseenter="menu.cancelTimeout('account')"
    ><div class="menu-header menu-account__user"><div class="menu-account__user-in" data-hj-suppress><img ng-srcset="{{ account.userAvatars.menu_user_av_big }} 1x, {{ account.userAvatars.menu_user_av_big2 }} 2x" class="menu-account__user-avatar"
                        ng-if="account.userAvatars" data-hj-suppress src=""
                    ><span class="menu-header__label">Twoje konto</span><span class="menu-account__user-name" ng-bind="account.username" data-hj-suppress=""></span></div></div><div class="menu-submenu-item menu-submenu-item--hover"
                                ng-show="account.isUserProfileEnabled"
                            ><a href="/feed" class="menu-submenu-link" hook-test="menuAccountFeed"
                    gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Feed ACCOUNT'}"
                                        ng-class="{'menu-submenu-link--pending-notifications': menuPendingNotifications.hasPendingNotificationsOfType('unseen_activities') > 0}"
                                    >Przegląd aktywności
                </a></div><div class="menu-submenu-item menu-submenu-item--hover"
                                ng-show="account.isUserProfileEnabled"
                            ><a href="/u" class="menu-submenu-link" hook-test="menuAccountProfile"
                    gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Profile ACCOUNT'}"
                >Twój profil
                </a></div><div class="menu-submenu-separator"
                                ng-show="account.isUserProfileEnabled"
                            ></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="/account" class="menu-submenu-link" hook-test="menuAccountGames"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Games ACCOUNT'}"
            >Gry
                <span class="menu-submenu-item__label" ng-show="account.userGamesCount > 0" ng-bind="account.userGamesCount">0</span></a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="/account/movies" class="menu-submenu-link" hook-test="menuAccountMovies"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Movies ACCOUNT'}"
            >Filmy
                <span class="menu-submenu-item__label" ng-show="account.userMoviesCount > 0" ng-bind="account.userMoviesCount">0</span></a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="/account/wishlist" class="menu-submenu-link" hook-test="menuAccountWishlist"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Wishlist ACCOUNT'}"
            >Lista życzeń
                <span class="menu-submenu-item__label" ng-show="account.userWishlistedItemsCount > 0" ng-bind="account.userWishlistedItemsCount">0</span></a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="/redeem" class="menu-submenu-link" hook-test="menuAccountRedeemCode"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Redeem ACCOUNT'}"
            >Zrealizuj kod</a></div><div class="menu-submenu-separator"></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="/account/friends" class="menu-submenu-link" hook-test="menuAccountFrieds"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Friends ACCOUNT'}"
            >Znajomi</a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="/account/chat" class="menu-submenu-link" hook-test="menuAccountChat"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Chat ACCOUNT'}"
            >Czat</a></div><div class="menu-submenu-separator"></div><div class="menu-submenu-item menu-submenu-item--hover menu-submenu-item--with-wallet"><a href="/wallet" class="menu-submenu-link" hook-test="menuAccountWallet"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Wallet ACCOUNT'}"
            >Twój portfel
                <span class="menu-submenu-item__label _price" ng-show="account.userWalletBalance > 0" ng-bind="account.userWalletBalance"></span></a></div><div class="menu-submenu-item menu-submenu-item--hover"><a href="/account/settings/orders" class="menu-submenu-link" hook-test="menuAccountOrdersAndSettings"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Orders and settings ACCOUNT'}"
            >Prywatność i ustawienia</a></div><div class="menu-submenu-item menu-submenu-item--static menu-submenu-item--hover"
            gog-menu-lang-and-currency
            ng-class="{ 'is-active': langAndCurrency.isVisible }"
            ng-mouseenter="langAndCurrency.show()"
            ng-mouseleave="langAndCurrency.hide()"
        ><a href="/account/settings/personal" class="menu-submenu-link"  hook-test="menuAccountLangAndCurrency"
                gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Language and currency ACCOUNT'}"
                ng-touchstart="$event.preventDefault(); langAndCurrency.show()"
            >Język i waluta

                <svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg><svg viewBox="0 0 32 32" class="menu-submenu-icon"><use xlink:href="#icon-arrow-right4"></svg></a><div class="menu-language-and-currency"
                ng-class="{ 'is-visible': langAndCurrency.isVisible }"
                ng-mouseenter="langAndCurrency.cancelHidding()"
            ><div class="menu-language"><p class="menu-language-and-currency__header">Język:</p><ul class="menu-language-and-currency__list"><li class="menu-language-and-currency__list-item"
                                ng-class="{'is-active': langAndCurrency.currentLanguageCode == 'en-US'}"
                                ng-click="langAndCurrency.changeLanguage('en-US')"
                            ><svg viewBox="0 0 32 32" class="menu-language-and-currency__tick"><use xlink:href="#icon-tick"></svg>
                                English
                            </li><li class="menu-language-and-currency__list-item"
                                ng-class="{'is-active': langAndCurrency.currentLanguageCode == 'de-DE'}"
                                ng-click="langAndCurrency.changeLanguage('de-DE')"
                            ><svg viewBox="0 0 32 32" class="menu-language-and-currency__tick"><use xlink:href="#icon-tick"></svg>
                                Deutsch
                            </li><li class="menu-language-and-currency__list-item"
                                ng-class="{'is-active': langAndCurrency.currentLanguageCode == 'fr-FR'}"
                                ng-click="langAndCurrency.changeLanguage('fr-FR')"
                            ><svg viewBox="0 0 32 32" class="menu-language-and-currency__tick"><use xlink:href="#icon-tick"></svg>
                                Français
                            </li><li class="menu-language-and-currency__list-item"
                                ng-class="{'is-active': langAndCurrency.currentLanguageCode == 'pl-PL'}"
                                ng-click="langAndCurrency.changeLanguage('pl-PL')"
                            ><svg viewBox="0 0 32 32" class="menu-language-and-currency__tick"><use xlink:href="#icon-tick"></svg>
                                Polski
                            </li><li class="menu-language-and-currency__list-item"
                                ng-class="{'is-active': langAndCurrency.currentLanguageCode == 'ru-RU'}"
                                ng-click="langAndCurrency.changeLanguage('ru-RU')"
                            ><svg viewBox="0 0 32 32" class="menu-language-and-currency__tick"><use xlink:href="#icon-tick"></svg>
                                Pусский
                            </li><li class="menu-language-and-currency__list-item"
                                ng-class="{'is-active': langAndCurrency.currentLanguageCode == 'zh-Hans'}"
                                ng-click="langAndCurrency.changeLanguage('zh-Hans')"
                            ><svg viewBox="0 0 32 32" class="menu-language-and-currency__tick"><use xlink:href="#icon-tick"></svg>
                                中文(简体)
                            </li></ul></div><p class="menu-language-and-currency__header">Waluta:</p><ul class="menu-language-and-currency__list"><li class="menu-language-and-currency__list-item"
                            ng-class="{'is-active': langAndCurrency.currentCurrencyCode == 'PLN'}"
                            ng-click="langAndCurrency.changeCurrency('PLN')"
                        ><svg viewBox="0 0 32 32" class="menu-language-and-currency__tick"><use xlink:href="#icon-tick"></svg>
                            PLN
                        </li><li class="menu-language-and-currency__list-item"
                            ng-class="{'is-active': langAndCurrency.currentCurrencyCode == 'EUR'}"
                            ng-click="langAndCurrency.changeCurrency('EUR')"
                        ><svg viewBox="0 0 32 32" class="menu-language-and-currency__tick"><use xlink:href="#icon-tick"></svg>
                            EUR
                        </li><li class="menu-language-and-currency__list-item"
                            ng-class="{'is-active': langAndCurrency.currentCurrencyCode == 'USD'}"
                            ng-click="langAndCurrency.changeCurrency('USD')"
                        ><svg viewBox="0 0 32 32" class="menu-language-and-currency__tick"><use xlink:href="#icon-tick"></svg>
                            USD
                        </li></ul><div class="menu-language-and-currency__footer"
                    ng-class="{'is-visible': langAndCurrency.showApplyButton}"
                ><a class="menu-language-and-currency__apply" ng-click="langAndCurrency.applyChanges()" hook-test="menuAccountLangAndCurrencyApply">Zastosuj zmiany</a></div></div></div><div class="menu-submenu-separator"></div><div class="menu-submenu-item menu-submenu-item--hover" hook-test="menuAccountSignOut"
            gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Sign out ACCOUNT'}"
        ><a ng-click="account.logout()" class="menu-submenu-link">Wyloguj się</a></div></div></div></div><div class="menu-tray"><div class="menu-item menu-item--invisible-on-loading menu-notifications has-submenu js-menu-notifications"
    ng-cloak
    ng-controller="menuNotificationsCtrl as notifications"
    ng-show="notifications.isVisible"
    hook-test="menuNotifications"
><a class="menu-link menu-link--icon"
        ng-click="menu.toggle($event, 'notifications', true)"
        ng-mouseleave="menu.hide($event, 'notifications', 600)"
        ng-mouseenter="menu.cancelTimeout('notifications')"
        ng-class="{ 'is-notifying': notifications.newNotificationAnimation }"
        hook-test="menuNotificationsButton"
    ><svg viewBox="0 0 15 16" class="menu-icon-svg menu-icon-svg--notifications"
            ng-class="{ 'got-notification': notifications.newNotificationAnimation }"
        ><use xlink:href="#icon-notification"></svg><span class="menu-item__count menu-item__count--notifications"
            ng-bind="notifications.notificationsCountLabel"
            ng-class="{ 'is-highlighted': notifications.haveNewNotifications }"
        ></span><span class="menu-triangle menu-triangle--centered  menu-triangle--others"></span></a><div class="menu-submenu menu-notifications__submenu"
        ng-mouseleave="menu.hideOnMouseleave($event, 'notifications', 600)"
        ng-mouseenter="menu.cancelTimeout('notifications')"
    ><div class="menu-header menu-header-notifications"
            ng-show="notifications.list.length > 0"
            ng-class="{
                'has-unread-notifications': notifications.notificationsCount > 0
            }"
        ><div class="menu-header__label">Twoje powiadomienia</div><div class="menu-header__unread menu-header-notifications--has-unread-notifications">
                {{ notifications.notificationsCountLabel }} oczekujące
            </div><div class="menu-header__unread menu-header-notifications--no-unread-notifications">
                There’s nothing to read yet
            </div><a  class="menu-btn menu-btn--gray menu-header__btn menu-header-notifications__btn--mark-all-as-read menu-uppercase"
                ng-click="notifications.deleteAllNotifications(); menu.cancelTimeout('notifications')"
                hook-test="clearAllNotifications"
            >Wyczyść wszystkie</a></div><div class="menu-notifications-empty"
            ng-show="notifications.showEmptyNotificationsMessage"
        ><div class="menu-notifications-empty__header menu-uppercase"><svg viewBox="0 0 32 32" class="menu-notifications-empty__header-icon"><use xlink:href="#icon-notifications-empty"></svg>

                Twoje powiadomienia
            </div><hr class="menu-notifications-empty__line"><div class="menu-notifications-empty__description">
                Zobacz nowe wiadomości, zaproszenia do grona znajomych, najważniejsze ogłoszenia i promocje, które mogą Cię zainteresować.
            </div></div><div class="menu-notifications__list _gog-menu-scrollbar"
                                    gog-menu-scrollbar
                    gog-menu-scrollbar-refresh="{{ notifications.list.length + menu.isExpanded(&#039;notifications&#039;) }}"
                                ng-hide="notifications.showEmptyNotificationsMessage"
            ><div class="js-gog-scrollbar-wrapper _gog-menu-scrollbar__wrapper"><div class="js-gog-scrollbar-content _gog-menu-scrollbar__content menu-notifications__content"><div class="menu-notifications__list-in"><a class="menu-notification"
                            ng-repeat="notification in notifications.list track by notification.id"
                            ng-click="notifications.executeActionForNotification(notification.id, $event); menu.hide($event, 'notifications', 0)"
                            ng-class="{ 'is-consumed': notification.consumed,
                                        'has-background': notification.hasBackground,
                                        'is-special': notification.isSpecial,
                                        'is-new-chat-message': notification.type == 'new_chat_message',
                                        'is-new-invite': notification.type == 'new_invite',
                                        'is-new-game-invite': notification.type == 'new_game_invite',
                                        'is-new-forum-reply': notification.type == 'new_forum_reply',
                                        'is-wishlisted-products-discounted': notification.type == 'wishlisted_products_discounted',
                                        'is-new-friend': notification.type == 'new_friend',
                                        'is-product-release': notification.type == 'product_release'
                            }"
                                                        ng-href="{{ notifications.parseLink(notification.link) }}"
                                                        ng-switch="::notification.imageType"
                        ><img class="menu-notification__special-bg" ng-srcset="{{ ::notification.background }} 1x" ng-if="::notification.hasBackground"><img
                                ng-src="{{ ::notification.image }}"
                                class="menu-notification__image menu-notification__image--gameIcon"
                                ng-switch-when="gameIcon"
                            ><img
                                ng-src="{{ ::notification.image }}"
                                class="menu-notification__image menu-notification__image--gogLogo"
                                ng-switch-when="gogLogo"
                            ><img
                                ng-srcset="{{ ::notification.image | image:&#039;menu_notification_av&#039;:&#039;png&#039; }} 1x, {{ ::notification.image | image:&#039;menu_notification_av2&#039;:&#039;png&#039; }} 2x"
                                class="menu-notification__image menu-notification__image--avatar"
                                ng-switch-default                             ><span class="menu-notification__icon"><svg viewBox="0 0 32 32" class="menu-notification__icon-svg"><use xlink:href="" ng-attr-xlink:href="{{ ::notification.icon }}"></svg></span><b class="menu-notification__title"><span class="menu-notification__title-text menu-notification__title-text--from-notifcation" ng-bind="::notification.title"></span><span class="menu-notification__title-text menu-notification__title-text--new-forum-reply">
                                    Forum GOG.com
                                </span><span class="menu-notification__title-text menu-notification__title-text--wishlisted-products-discounted">
                                    Lista życzeń GOG.com
                                </span><span class="menu-notification__date"
                                            gog-relative-time="{{ ::notification.creationTimestamp }}"

                                ></span></b><span class="menu-notification__description"><b class="menu-notification__label menu-notification__label--new-chat-message"><ng-pluralize count="notification.counter" when="{
                                        'one' : 'Nowa wiadomość: ',
                                        'few' : '{{ notification.counter }} Nowe wiadomości ',
                                        'many' : '{{ notification.counter }} Nowych wiadomości ',
                                        'other': '{{ notification.counter }} Nowych wiadomości '
                                    }"></ng-pluralize></b><b class="menu-notification__label menu-notification__label--new-forum-reply"><ng-pluralize count="notification.counter" when="{
                                        'one' : 'Nowa odpowiedź w: ',
                                        'few' : '{{ notification.counter }} nowe odpowiedzi w: ',
                                        'many' : '{{ notification.counter }} nowych odpowiedzi w: ',
                                        'other': '{{ notification.counter }} nowe odpowiedzi w: '
                                    }"></ng-pluralize></b><b class="menu-notification__label menu-notification__label--new-invite">Otrzymano zaproszenie do znajomości</b><b class="menu-notification__label menu-notification__label--new-game-invite">Zaproszenie do gry od: </b><b class="menu-notification__label menu-notification__label--product-release">Już dostępna w sprzedaży </b><b class="menu-notification__label menu-notification__label--wishlisted-products-discounted"><ng-pluralize count="notification.productsDiscountedCount" when="{
                                        'one' : ' produkt w wyprzedaży',
                                        'few' : '{{ notification.productsDiscountedCount }} produkty w wyprzedaży',
                                        'many' : '{{ notification.productsDiscountedCount }} produktów w wyprzedaży',
                                        'other': '{{ notification.productsDiscountedCount }} produktu w wyprzedaży'
                                    }"></ng-pluralize></b><b class="menu-notification__label menu-notification__label--new-friend">Zaproszenie do znajomych zaakceptowane</b><span ng-bind="::notification.description"></span></span></a></div><div class="js-gog-scrollbar-bar _gog-menu-scrollbar__bar is-disabled"></div></div></div></div></div></div><div class="menu-item menu-friends has-submenu js-menu-friends"
    ng-cloak
    ng-controller="menuFriendsCtrl as friends"
    ng-show="friends.isVisible"
><a class="menu-link menu-link--icon"
        ng-click="menu.toggle($event, 'friends', true)"
        hook-test="menuFriends"
    ><svg viewBox="0 0 17 16" class="menu-icon-svg menu-icon-svg--friends"><use xlink:href="#icon-friends2"></svg><span class="menu-item__count menu-item__count--friends"
            ng-bind="friends.online"
        ></span><span class="menu-triangle menu-triangle--centered  menu-triangle--others"></span></a><div class="menu-submenu menu-friends__submenu"><div class="menu-header"
            ng-show="friends.total"
        ><div class="menu-header__label">Twoi znajomi</div><div class="menu-header__online"
                ng-show="friends.total"
            ><span ng-bind="friends.online"></span>
                aktualnie online
            </div><div class="menu-header__online"
                ng-hide="friends.total"
            >
                Friends list is currently empty
            </div><a href="/account/friends" class="menu-btn menu-header__btn menu-friends__btn menu-uppercase"
                ng-show="friends.total"
            >Zarządzaj znajomymi</a></div><div class="menu-friends-empty"
            ng-hide="friends.total"
        ><div class="menu-friends-empty__header menu-uppercase"><svg viewBox="0 0 32 32" class="menu-friends-empty__header-icon"><use xlink:href="#icon-friends2"></svg>

                Skontaktuj się ze znajomymi
            </div><hr class="menu-friends-empty__line"><div class="menu-friends-empty__description" ng-hide="friends.isLoadingFriendlist">
                Graj, czatuj i dziel się wrażeniami ze swoimi znajomymi na GOG.com     
            </div><div class="menu-friends-empty__spinner is-spinning" ng-show="friends.isLoadingFriendlist"></div><a href="/account/friends" class="menu-btn menu-friends-empty__btn menu-uppercase"  ng-hide="friends.isLoadingFriendlist">
                Zaproś znajomych
            </a></div><div class="menu-friends__list _gog-menu-scrollbar"
                                    gog-menu-scrollbar
                    gog-menu-scrollbar-refresh="{{ menu.isExpanded(&#039;friends&#039;) + friends.friendsList.length }}"
                                ng-show="friends.total"
            ><div class="js-gog-scrollbar-wrapper _gog-menu-scrollbar__wrapper"><div class="js-gog-scrollbar-content _gog-menu-scrollbar__content menu-friends__content"><div class="menu-friends__list-in"><a ng-href="/u/{{ friend.username }}/chat" class="menu-friend"
                            ng-repeat="friend in friends.friendsList track by $index"
                            ng-class="{ 'is-first': $first,
                                        'is-offline': !friend.isOnline,
                                        'is-online': friend.isOnline }"
                        ><img ng-srcset="{{ friend.avatar | image:&#039;menu_notification_av&#039;:&#039;png&#039; }} 1x, {{ friend.avatar | image:&#039;menu_notification_av2&#039;:&#039;png&#039; }} 2x" class="menu-friend__avatar"><b class="menu-friend__name"><span class="menu-friend__status-icon"></span><span ng-bind="friend.username"></span></b><span class="menu-friend__status"><span ng-bind="friend.status"
                                    ng-show="friend.haveRichStatus"
                                ></span><span
                                    ng-show="!friend.haveRichStatus && friend.isOnline"
                                >Online</span><span
                                    ng-show="!friend.haveRichStatus && !friend.isOnline"
                                >Offline</span></span></a></div><div class="js-gog-scrollbar-bar _gog-menu-scrollbar__bar is-disabled"></div></div></div><span class="menu__list-shadow"></span></div></div></div><div class="menu-item menu-cart has-submenu js-menu-cart"
    ng-controller="menuCartCtrl as cart"
    hook-test="menuCart"
><a class="menu-link menu-link--icon menu-link--cart"
        ng-click="menu.toggle($event, 'cart', true)"
        ng-mouseleave="menu.hide($event, 'cart', 600)"
        ng-mouseenter="menu.cancelTimeout('cart')"
        ng-class="{ 'is-notifying': cart.itemAddedAnimation }"
        hook-test="menuCartButton"
    ><svg viewBox="0 0 32 32" class="menu-icon-svg"><use xlink:href="#icon-cart2"></svg><span class="menu-item__count menu-item__count--cart"
            ng-show="cart.cartCount <= 99"
            ng-bind="cart.cartCount"
            ng-class="{ 'is-highlighted': cart.itemAdded }"
            hook-test="cartCounter"
        >0</span><span class="menu-item__count menu-item__count--cart"
            ng-cloak
            ng-show="cart.cartCount > 99"
        >99+</span><span class="menu-triangle menu-triangle--centered"
            ng-class="{'menu-triangle--others': !cart.isCartEmpty}"
        ></span></a><div class="menu-submenu menu-cart__submenu"
        ng-mouseleave="menu.hideOnMouseleave($event, 'cart', 600)"
        ng-mouseenter="menu.cancelTimeout('cart')"
    ><div class="menu-header menu-header-cart"
            ng-hide="cart.isCartEmpty"
        ><a class="menu-cart__btn menu-btn menu-btn--green"
                ng-click="cart.goToCheckout()"
                ng-class="{ 'is-spinning': cart.isSpinnerVisible }"
                ng-show="!cart.isCartEmpty"
                hook-test="cartCheckoutNow"
            >
                Idź do kasy
            </a><div class="menu-cart-items"
                ng-hide="cart.isSpinnerVisible"
            ><span class="menu-header__label hide-in-lite-mode">Twój koszyk</span><span class="menu-header__label hide-in-normal-mode hide-in-grouped-mode"
                    ng-show="cart.isCartEmpty"
                >Twój koszyk</span><span class="menu-header__items"
                    ng-show="cart.isCartEmpty"
                >
                    is empty right now.
                </span><span class="menu-header__label hide-in-normal-mode hide-in-grouped-mode"
                    ng-show="!cart.isCartEmpty"
                ><span ng-bind="cart.cartCount"></span>&nbsp;<ng-pluralize count="cart.cartCount" when="{
                        'one' : 'Produkt w koszyku',
                        'few' : 'Produkty w koszyku',
                        'many' : 'Produktów w koszyku',
                        'other': 'Produkty w koszyku'
                     }"></ng-pluralize></span><span class="menu-header__items hide-in-lite-mode"
                    ng-show="!cart.isCartEmpty"
                ><span ng-bind="cart.cartCount"></span>&nbsp;<ng-pluralize count="cart.cartCount" when="{
                        'one' : 'Produkt dodany',
                        'few' : 'Produkty dodane',
                        'many' : 'Produktów dodano',
                        'other': 'Produktów dodano'
                     }"></ng-pluralize></span></div><div class="menu-cart__total-price _price"
                ng-bind="cart.cartTotalPrice.amount"
                ng-hide="cart.isSpinnerVisible || cart.cartTotalPrice.isZero || cart.isCartEmpty"
                hook-test="cartTotalPrice"
            ></div></div><div class="menu-cart-empty"
            ng-show="cart.isCartEmpty"
        ><div class="menu-cart-empty__header menu-uppercase"><svg viewBox="0 0 32 32" class="menu-cart-empty__header-icon"><use xlink:href="#icon-cart2"></svg>

                Twój koszyk jest pusty
            </div><hr class="menu-cart-empty__line"><div class="menu-cart-empty__description">
                Odkryj niezwykłe gry i oferty.
            </div><a class="menu-btn menu-cart-empty__btn menu-uppercase"
                href="/games"
            >
                Przeglądaj bestsellery
            </a><a class="menu-btn menu-cart-empty__btn menu-cart-empty__btn--wishlist menu-uppercase"
                ng-show="cart.isWishlistButtonVisible"
                href="/account/wishlist"
            >
                Twoja lista życzeń
            </a></div><div class="menu-cart__products-list"><div class=" _gog-menu-scrollbar"
                                            gog-menu-scrollbar
                        gog-menu-scrollbar-refresh="{{ menu.isExpanded(&#039;cart&#039;) + cart.products.length }}"
                                    ><div class="js-gog-scrollbar-wrapper _gog-menu-scrollbar__wrapper"><div class="js-gog-scrollbar-content _gog-menu-scrollbar__content menu-cart__content"><div             class="menu-product menu-cart-item menu-product-state-holder js-focusable-element"
            ng-repeat="productId in cart.products"
            ng-class="{
                'is-first': $first,
                'is-removed': productCtrl.toBeRemoved
            }"
            gog-product="{{ productId }}"
            gog-product-repository="menuProducts"
            gog-menu-cart-item-swipe
            gog-menu-cart-item-swipe-disable-wishlisting="{{ product.isWishlistable == false }}"
        ng-click="productCtrl.productClicked($index + 1)"
><div class="menu-cart-item__price"><span class="price-text ng-hide"
                 ng-show="product.price.isFree"
            >Za darmo</span><span class="_price"
                ng-show="!product.price.isFree"
                ng-bind="product.price.amount"
            ></span></div><a class="menu-product__link"
        ng-href="{{ product.url }}"
            ><span class="menu-cart-item__wishlist js-action-left"
            ng-show="!product.isWishlisted && product.isWishlistable != false"
            ng-click="productCtrl.removeFromCart(); productCtrl.addToWishlist(); $event.preventDefault(); menu.cancelTimeout('cart')"
            hook-test="cartWishlist"
        ><svg viewBox="0 0 32 32" class="menu-cart-item__wishlist-icon"><use xlink:href="#icon-wishlist-menu"></svg>
            Do listy życzeń
        </span><span class="menu-cart-item__wishlist menu-cart-item__wishlist--disabled"
            ng-show="product.isWishlisted"
        >Na liście życzeń</span><img class="menu-product__image menu-cart-item__image"
            ng-srcset="https:{{ product.image | image:100:&#039;jpg&#039; }} , https:{{ product.image | image:200:&#039;jpg&#039; }} 2x"
        ><div class="menu-product__content"><div class="menu-product__content-in"><div class="menu-product__title menu-cart-item__title"
            ng-attr-title="{{ product.title }}"
            ng-bind="product.title"
        ></div><div class="menu-cart-item__options"><span ng-click="productCtrl.removeFromCart(); $event.preventDefault(); "
                class="menu-cart-option"
                hook-test="cartRemove"
            >Usuń</span><span ng-show="!product.isOwned && !product.isWishlisted && product.isWishlistable != false"
                  ng-click="productCtrl.removeFromCart(); productCtrl.addToWishlist(); $event.preventDefault(); "
                  class="menu-cart-option menu-cart-option--add-to-wishlist"
            >Przenieś do listy życzeń</span><span ng-show="!product.isOwned && product.isWishlisted"
                  class="menu-cart-option menu-cart-option--wishlisted"
            ><svg viewBox="0 0 32 32" class="menu-cart-option__icon menu-cart-option__icon--wishlisted"><use xlink:href="#icon-wishlisted2"></svg>Na liście życzeń</span><span ng-show="product.isOwned"
                  class="menu-cart-option menu-cart-option--owned"
            ><svg viewBox="0 0 32 32" class="menu-cart-option__icon menu-cart-option__icon--owned"><use xlink:href="#icon-owned"></svg>Kupione</span></div><div class="menu-product__discount menu-cart-item__discount product-state__discount"><span class="menu-product__discount-text"><span ng-bind="product.price.discountPercentage"></span>%
            </span></div></div></div><a class="menu-cart-item__remove js-action-right"
            ng-click="productCtrl.removeFromCart(); $event.preventDefault();"
        >
            Usuń
            <svg viewBox="0 0 32 32" class="menu-cart-item__remove-icon"><use xlink:href="#icon-remove-menu"></svg></a></a></div><div class="js-gog-scrollbar-bar _gog-menu-scrollbar__bar is-disabled"></div></div></div><span class="menu__list-shadow"></span></div></div></div></div><div class="menu-item js-menu-search"
    ng-controller="menuSearchCtrl as search"
><a class="menu-link menu-link--last menu-link--search menu-link--icon"
        ng-click="menu.toggle($event, 'search', true)"
        hook-test="menuSearch"
    ><svg viewBox="0 0 14.69 16" class="menu-icon-svg menu-icon-svg--search"><use xlink:href="#icon-search2"></svg></a><div class="menu-submenu menu-search"
        gog-menu-search
    ><div class="menu-search-toolbar"><svg viewBox="0 0 32 32" class="menu-search-icon"><use xlink:href="#icon-search2"></svg><div class="menu-search-input"><input type="text" class="menu-search-input__field js-menu-search-input"
                    ng-model="search.searchTerm"
                    ng-change="search.searchTermChange()"
                    ng-model-options="{ debounce: {'default': 300} }"
                    hook-test="menuSearchInput"
                ><a class="menu-search-input__clear menu-search-loader menu-uppercase"
                    ng-class="{ 'is-loading': search.isLoading }"
                    ng-click="search.clear()"
                    ng-show="search.searchTerm.length > 0"
                >wyczyść
                    <span class="menu-search-loader__ball"></span><span class="menu-search-loader__ball"></span><span class="menu-search-loader__ball"></span><span class="menu-search-loader__ball"></span></a></div><a class="menu-search-toolbar__results-count menu-uppercase"
                ng-class="{ 'is-active': search.selectedCategory == 'games' }"
                ng-click="search.showGames()"
                ng-show="search.totalGames"
                hook-test="menuSearchGames"
            ><span ng-bind="search.totalGames"></span> Gry
                <span class="menu-triangle menu-triangle--centered"></span></a><a class="menu-search-toolbar__results-count menu-uppercase"
                ng-class="{ 'is-active': search.selectedCategory == 'movies' }"
                ng-click="search.showMovies()"
                ng-show="search.totalMovies"
                hook-test="menuSearchMovies"
            ><span ng-bind="search.totalMovies"></span> Filmy
                <span class="menu-triangle menu-triangle--centered"></span></a><a class="menu-search-toolbar__close"
                ng-click="menu.hide($event, 'search')"
            ><svg viewBox="0 0 32 32" class="menu-icon-svg"><use xlink:href="#icon-close4"></svg></a></div><div class="menu-search__no-results"
            ng-show="search.selectedCategoryProducts.length == 0 && search.searchCount > 0 && !search.isLoading"
        ><div class="menu-search-empty"><div class="menu-search-empty__header menu-uppercase"><svg viewBox="0 0 32 32" class="menu-search-empty__header-icon"><use xlink:href="#icon-search2"></svg>

                    Nie znaleziono wyników
                </div><hr class="menu-search-empty__line"><div class="menu-search-empty__description">
                    Spróbuj dostosować kryteria wyszukiwania. Możesz sortować po tytułach gier, wydawcach oraz deweloperach.
                </div><a href="/games" class="menu-btn menu-search-empty__btn menu-uppercase"
                    ng-show="search.selectedCategory == 'games'"
                >
                    Przeglądaj wszystkie gry
                </a><a href="/movies" class="menu-btn menu-search-empty__btn menu-uppercase"
                    ng-show="search.selectedCategory == 'movies'"
                >
                    Przeglądaj filmy
                </a></div></div><div class="menu-search__results"
            ng-show="search.selectedCategoryProducts.length"
        ><div class="menu-search__results-list _gog-menu-scrollbar"
                                                                gog-menu-scrollbar="search"
                        gog-menu-scrollbar-refresh="{{ menu.isExpanded(&#039;search&#039;) + search.selectedCategoryProducts.length }}"
                                    ><div class="js-gog-scrollbar-wrapper _gog-menu-scrollbar__wrapper"><div class="js-gog-scrollbar-content _gog-menu-scrollbar__content menu-search__content js-menu-search-content"><div class="menu-search__results-rows list--rows"><div         
        class="menu-product menu-product-state-holder menu-search__result js-focusable-element"
        ng-repeat="result in search.selectedCategoryProducts track by result.id"
        gog-product="{{ result.id }}"
        gog-product-repository="searchProducts"
        gog-star-rating="{{ result.id }}"
        ng-class="{ 'is-first': $first,
                    'is-last': $last,
                    'is-animated': search.searchCount == 1}"
        
        ng-click="productCtrl.productClicked($index + 1)"
><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-hide="product.customAttributes.customPriceButtonVariant == 'join'"
            ng-click="productCtrl.addToCart(); $event.preventDefault();"
            gog-track-event='{eventAction: "addToCart {{ games.selectedCategory.name }} {{ $index + 1 }}-1", eventCategory: "topBar", eventLabel: "{{ product.title }}"}'
            ng-class="{
                'price-btn--in-cart' : product.inCart,
                'price-btn--free': product.price.isFree
            }"
        ><span class="menu-product__price-btn-text"><span class="product-status__in-cart"><svg viewBox="0 0 32 32" class="menu-product__cart-icon"><use xlink:href="#icon-cart2"></svg></span><span class="product-state__is-tba">
                    Wkrótce
                </span><span class="price-btn__text--owned product-state__is-owned">
                    Kupione
                </span><span class="product-state__is-free">
                    Za darmo
                </span><span class="_price product-state__price" ng-bind="product.price.amount"></span></span></div><div class="product-state__price-btn menu-product__price-btn menu-product__price-btn--active"
            ng-show="product.customAttributes.customPriceButtonVariant == 'join'"
        ><span class="menu-product__price-btn-text menu-product__price-btn-text--join"><span class="price-btn__text--owned">
                    Kupione
                </span><span class="price-btn__text--join">
                    Za darmo
                </span></span></div><a class="menu-product__link"
        ng-href="{{ product.url }}"
            ><img class="menu-product__image"
                ng-srcset="{{ product.image | image:100:&#039;jpg&#039; }} 1x, {{ product.image | image:200:&#039;jpg&#039; }} 2x"
            ><div class="menu-product__content"><div class="menu-product__content-in"><div class="menu-product__title"><span ng-bind-html="product.title | highlight:search.searchTerm"></span><div class="menu-product__flags"><span ng-show="product.isComingSoon"
                                class="menu-product__flag menu-product__flag--soon"
                            >wkrótce</span><span ng-show="product.isInDevelopment"
                                class="menu-product__flag menu-product__flag--in-dev"
                            >W produkcji</span></div></div><div class="menu-product__details"
                        ng-show="result.releaseDate"
                        ng-bind-html="((result.releaseDate * 1000) | date:'yyyy')+', '+result.developer+', '+result.publisher | highlight:search.searchTerm"
                    ></div><div class="menu-product__details"
                        ng-show="!result.releaseDate"
                        ng-bind-html="result.developer+', '+result.publisher | highlight:search.searchTerm"
                    ></div><div class="menu-product__rating js-star-rating star-rating"></div><div class="menu-product__os js-os-support"><span ng-show="product.isGame"><i class="menu-product__os-icon menu-product__os-icon--windows"
                                ng-show="product.worksOn.Windows"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--mac"
                               ng-show="product.worksOn.Mac"
                            ></i><i class="menu-product__os-icon menu-product__os-icon--linux"
                               ng-show="product.worksOn.Linux"
                            ></i></span></div><div class="menu-product__movie-label"
                        ng-show="product.isMovie"
                    >
                        film 
                    </div><div class="menu-product__discount product-state__discount"><span class="menu-product__discount-text"><span ng-bind="product.price.discountPercentage"></span>%
                        </span></div></div></div></a></div><a ng-href="/games?search={{ search.searchTerm }}" class="menu-btn menu-btn--full menu-search__results-more"
                                    ng-show="search.selectedCategory == 'games' && search.totalGames > 20"
                                >PRZEGLĄDAJ <span ng-bind="search.totalGames"></span> GIER
                                </a><a ng-href="/movies?search={{ search.searchTerm }}" class="menu-btn menu-btn--full menu-search__results-more"
                                    ng-show="search.selectedCategory == 'movies' && search.totalMovies > 20"
                                >PRZEGLĄDAJ <span ng-bind="search.totalMovies"></span> FILMÓW</a></div></div><div class="js-gog-scrollbar-bar _gog-menu-scrollbar__bar is-disabled"></div></div></div></div></div></div><div class="menu-item menu-lite js-menu-lite"
    ><a class="menu-lite-link hide-in-normal-mode hide-in-grouped-mode menu-uppercase"
        ng-click="menu.toggle($event, 'lite', true)"
    ><span class="menu-hamburger"><span class="menu-hamburger__line"></span><span class="menu-hamburger__line"></span><span class="menu-hamburger__line"></span></span>

        Menu
    </a><div class="menu-submenu menu-lite__submenu"
        gog-menu-accordion
    ><div class="menu-submenu-item"><a href="/games" class="menu-submenu-link menu-submenu-link--lite"
                            >Sklep</a><span class="menu-submenu-item__expand-trigger"
                ng-click="accordion.toggle('store')"
            ><svg viewBox="0 0 32 32" class="menu-submenu-item__expand-icon"
                    ng-class="{'is-expanded': accordion.expandedSections.store}"
                ><use xlink:href="#icon-arrow-down2"></svg></span><div class="menu-accordion"
                ng-class="{'is-expanded': accordion.expandedSections.store }"
            ><div class="menu-submenu-item menu-submenu-item--small"><a class="menu-submenu-item-link"  href="/games?sort=date&amp;page=1">Premiery</a></div><div class="menu-submenu-item menu-submenu-item--small"><a class="menu-submenu-item-link" href="/games?sort=popularity&amp;page=1">Bestsellery</a></div><div class="menu-submenu-item menu-submenu-item--small"><a class="menu-submenu-item-link" href="/games?price=discounted&amp;sort=popularity&amp;page=1">Teraz w promocji</a></div></div></div><div class="menu-submenu-item"><a href="/about_gog" class="menu-submenu-link menu-submenu-link--lite">O nas</a><span class="menu-submenu-item__expand-trigger"
                ng-click="accordion.toggle('about')"
            ><svg viewBox="0 0 32 32" class="menu-submenu-item__expand-icon"
                    ng-class="{'is-expanded': accordion.expandedSections.about}"
                ><use xlink:href="#icon-arrow-down2"></svg></span><div class="menu-accordion"
                ng-class="{'is-expanded': accordion.expandedSections.about }"
            ><div class="menu-submenu-item menu-submenu-item--small"><a href="/about_gog"
                        class="menu-submenu-item-link" 
                        gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'GOG.com ABOUT'}"
                    >GOG.com</a></div><div class="menu-submenu-item menu-submenu-item--small"><a href="/galaxy"
                        class="menu-submenu-item-link" 
                        gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'GOG Galaxy App ABOUT'}"
                    >GOG Galaxy</a></div><div class="menu-submenu-item menu-submenu-item--small"><a href="/work"
                        class="menu-submenu-item-link" 
                        gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'We are hiring ABOUT'}"
                    >Pracuj z nami</a></div></div></div><div class="menu-submenu-item"><a href="/forum" class="menu-submenu-link menu-submenu-link--lite"
                                ng-class="{
                    'menu-submenu-link--pending-notifications': !accordion.expandedSections.community && menuPendingNotifications.hasPendingNotificationsOfType('new_forum_reply') > 0
                }"
                            >Społeczność</a><span class="menu-submenu-item__expand-trigger"
                ng-click="accordion.toggle('community')"
            ><svg viewBox="0 0 32 32" class="menu-submenu-item__expand-icon"
                    ng-class="{'is-expanded': accordion.expandedSections.community}"
                ><use xlink:href="#icon-arrow-down2"></svg></span><div class="menu-accordion"
                ng-class="{'is-expanded': accordion.expandedSections.community }"
            ><div class="menu-submenu-item menu-submenu-item--small"><a href="/forum"
                        class="menu-submenu-item-link" 
                        gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'All forums COMMUNITY'}"
                    >Wszystkie fora</a></div><div class="menu-submenu-item menu-submenu-item--small"><a href="/forum/general_pl"
                        class="menu-submenu-item-link" 
                        gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'General discussion forums COMMUNITY'}"
                    >Forum ogólne</a></div><div class="menu-submenu-item menu-submenu-item--small"><a href="/forum/myrecentposts"
                            class="menu-submenu-item-link" 
                            gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Forum replies COMMUNITY'}"
                            ng-class="{'menu-submenu-item--pending-notifications': menuPendingNotifications.hasPendingNotificationsOfType('new_forum_reply') > 0}"
                        >Odpowiedzi na forum</a></div></div></div><div class="menu-submenu-item"><a href="https://support.gog.com/hc/pl" class="menu-submenu-link menu-submenu-link--lite">Pomoc</a><span class="menu-submenu-item__expand-trigger"
                ng-click="accordion.toggle('support')"
            ><svg viewBox="0 0 32 32" class="menu-submenu-item__expand-icon"
                    ng-class="{'is-expanded': accordion.expandedSections.support}"
                ><use xlink:href="#icon-arrow-down2"></svg></span><div class="menu-accordion"
                ng-class="{'is-expanded': accordion.expandedSections.support }"
            ><div class="menu-submenu-item menu-submenu-item--small"><a href="https://support.gog.com/hc/pl/categories/201400969"
                        class="menu-submenu-item-link" 
                        gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Game Technical Issues SUPPORT'}"
                    >Problemy techniczne z grami</a></div><div class="menu-submenu-item menu-submenu-item--small"><a href="https://support.gog.com/hc/pl/categories/201552965"
                        class="menu-submenu-item-link" 
                        gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Orders and payments SUPPORT'}"
                    >Zamówienia i płatności</a></div><div class="menu-submenu-item menu-submenu-item--small"><a href="https://support.gog.com/hc/pl/categories/201552985"
                        class="menu-submenu-item-link" 
                        gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Account and Website SUPPORT'}"
                    >Konto użytkownika i strona</a></div><div class="menu-submenu-item menu-submenu-item--small"><a href="https://support.gog.com/hc/pl/categories/201553005"
                        class="menu-submenu-item-link" 
                        gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'Downloads SUPPORT'}"
                    >Pobieranie plików</a></div><div class="menu-submenu-item menu-submenu-item--small"><a href="https://support.gog.com/hc/pl/categories/201553025"
                        class="menu-submenu-item-link" 
                        gog-track-event="{eventAction: 'goToLink', eventCategory: 'topBar', eventLabel: 'GOG Galaxy SUPPORT'}"
                    >GOG Galaxy</a></div></div></div><div class="menu-lite-account"
                        ng-controller="menuAccountCtrl as account"
            ng-show="account.isUserLoggedIn"
            gog-menu-swipe
        ><div class="menu-header menu-account__user"
                ng-click="menuSwipe.toggle()"
            ><div class="menu-account__user-in" data-hj-suppress><img ng-srcset="{{ account.userAvatar | image:&#039;av_menu_big&#039;:&#039;jpg&#039; }} 1x, {{ account.userAvatar | image:&#039;av_menu_big2&#039;:&#039;jpg&#039; }} 1x" class="menu-account__user-avatar"
                        ng-if="account.userAvatar" data-hj-suppress src=""
                    ><span class="menu-account__pending-notifications"
                            ng-show="menuPendingNotifications.hasPendingNotificationsOfType('unseen_activities') > 0"
                        ></span><span class="menu-account__user-name" ng-bind="account.username" data-hj-suppress=""></span></div></div><div class="menu-account__list _gog-menu-scrollbar"
                gog-menu-scrollbar
            ><div class="js-gog-scrollbar-wrapper _gog-menu-scrollbar__wrapper"><div class="js-gog-scrollbar-content _gog-menu-scrollbar__content menu-account__content"
                        ng-touchstart="$event.stopPropagation();"
                    ><a href="/feed" class="menu-account-link js-no-prevent-default"
                                ng-class="{'menu-account-link--pending-notifications': menuPendingNotifications.hasPendingNotificationsOfType('unseen_activities') > 0}"
                                                                ng-if="account.isUserProfileEnabled"
                                                            >Przegląd aktywności</a><a href="/u" class="menu-account-link js-no-prevent-default"
                                                              ng-if="account.isUserProfileEnabled"
                                                           >Twój profil</a><div class="menu-submenu-separator menu-submenu-separator--transparent"
                                                                ng-if="account.isUserProfileEnabled"
                                                            ></div><a href="/account" class="menu-account-link js-no-prevent-default">Gry
                            <span class="menu-submenu-item__label" ng-show="account.userGamesCount > 0" ng-bind="account.userGamesCount">0</span></a><a href="/account/movies" class="menu-account-link js-no-prevent-default">Filmy
                            <span class="menu-submenu-item__label" ng-show="account.userMoviesCount > 0" ng-bind="account.userMoviesCount">0</span></a><a href="/account/wishlist" class="menu-account-link js-no-prevent-default">Lista życzeń
                            <span class="menu-submenu-item__label" ng-show="account.userWishlistedItemsCount > 0" ng-bind="account.userWishlistedItemsCount">0</span></a><a href="/redeem" class="menu-account-link js-no-prevent-default">Zrealizuj kod</a><div class="menu-submenu-separator menu-submenu-separator--transparent"></div><a href="/account/friends" class="menu-account-link js-no-prevent-default">Znajomi</a><a href="/account/chat" class="menu-account-link js-no-prevent-default">Czat</a><div class="menu-submenu-separator menu-submenu-separator--transparent"></div><a href="/wallet" class="menu-account-link js-no-prevent-default">Twój portfel
                            <span class="menu-submenu-item__label _price" ng-show="account.userWalletBalance > 0" ng-bind="account.userWalletBalance"></span></a><a href="/account/settings/orders" class="menu-account-link js-no-prevent-default">Prywatność i ustawienia</a><a href="/account/settings/personal" class="menu-account-link js-no-prevent-default">Język i waluta</a><div class="menu-submenu-separator menu-submenu-separator--transparent"></div><a ng-click="account.logout()" class="menu-account-link js-no-prevent-default">Wyloguj się</a><div class="js-gog-scrollbar-bar _gog-menu-scrollbar__bar is-disabled"></div></div></div></div></div><div class="menu-lite-anonymous"
            ng-controller="menuAnonymousCtrl as anonymous"
            ng-show="anonymous.isResponseFetched && !anonymous.isUserLoggedIn"
            gog-menu-swipe
        ><a class="menu-link menu-link--anonymous" ng-click="menuSwipe.toggle()"><span>Zaloguj się</span></a><div class="menu-header menu-anonymous-header"><a href="#" class="menu-btn js-no-prevent-default menu-btn--gray menu-anonymous-header__btn menu-anonymous-header__btn--create-account menu-uppercase"
                    ng-click="anonymous.openRegistration()"
                >
                    Utwórz konto
                </a><span class="menu-anonymous-header__separator"></span><a href="#" class="menu-btn js-no-prevent-default menu-anonymous-header__btn menu-anonymous-header__btn--sign-in menu-uppercase"
                    ng-click="anonymous.openLogin()"
                >
                    Zaloguj się
                </a></div><figure class="menu-anonymous__shelf"></figure><p class="menu-anonymous__about"><b>
                    GOG.com to platforma cyfrowej dystrybucji - sklep internetowy z wyselekcjonowaną ofertą gier, opcjonalna aplikacja dająca Ci swobodę wyboru i tętniąca życiem społeczność graczy.
                </b>
                Wszystko to zrodzone z naszej miłości do gier, troski o klienta i przekonania, że zakupione gry na zawsze już należą do Ciebie.
            </p><p class="menu-anonymous__features-header"><span class="menu-anonymous__features-header-in">Dlaczego warto wybrać GOG.com?</span></p><div class="menu-features-slider"
    gog-menu-features-slider
    ng-mouseenter="slider.stop()"
    ng-mouseleave="slider.play()"
><span class="menu-features-slider__nav menu-features-slider__nav--left js-no-prevent-default"
        ng-click="slider.triggerPrevSlide()"
    ><svg viewBox="0 0 32 32" class="menu-features-slider__nav-icon"><use xlink:href="#icon-fat-arrow-left"></svg></span><span class="menu-features-slider__nav menu-features-slider__nav--right js-no-prevent-default"
        ng-click="slider.triggerNextSlide()"
    ><svg viewBox="0 0 32 32" class="menu-features-slider__nav-icon"><use xlink:href="#icon-fat-arrow-right"></svg></span><div class="menu-features-slider__slide js-slide is-active"><div class="menu-features-slider__slide-text"><svg viewBox="0 0 32 32" class="menu-features-slider__slide-icon menu-features-slider__slide-icon--slide1" viewBox="0 0 32 32"><use xlink:href="#icon-star"></svg><b class="menu-features-slider__slide-highlight menu-features-slider__slide-highlight--slide1">Wybrane spośród najlepszych gier.</b> Szeroki wybór wspaniałych gier, od najnowszych przebojów po ponadczasowe klasyki, obok których nie można przejść obojętnie.</div></div><div class="menu-features-slider__slide js-slide"><div class="menu-features-slider__slide-text"><svg viewBox="0 0 32 32" class="menu-features-slider__slide-icon menu-features-slider__slide-icon--slide2" viewBox="0 0 32 32"><use xlink:href="#icon-heart"></svg><b class="menu-features-slider__slide-highlight menu-features-slider__slide-highlight--slide2">Dbałość o klienta.</b> Zapewniamy przyjazną użytkownikowi pomoc techniczną oraz dodatkowe korzyści dla klientów.</div></div><div class="menu-features-slider__slide js-slide"><div class="menu-features-slider__slide-text"><svg viewBox="0 0 32 32" class="menu-features-slider__slide-icon menu-features-slider__slide-icon--slide3" viewBox="0 0 32 32"><use xlink:href="#icon-hand-picked"></svg><b class="menu-features-slider__slide-highlight menu-features-slider__slide-highlight--slide3">Miejsce przyjazne graczom.</b> Chcemy zmienić sposób w jaki kupujesz i grasz w gry, poprzez danie Ci swobody wyboru i zapewnienie bezproblemowego działania.</div></div><div class="menu-features-slider__timer is-on js-timer"><span class="menu-features-slider__timer-section js-timer-section"></span><span class="menu-features-slider__timer-section js-timer-section"></span><span class="menu-features-slider__timer-section js-timer-section"></span></div></div></div></div></div></div></div><div class="menu-fonts-preloader"><span style="font-weight:300;">.</span><span style="font-weight:400;">.</span><span style="font-weight:500;">.</span><span style="font-weight:600;">.</span><span style="font-weight:700;">.</span><span style="font-weight:800;">.</span></div></nav><!--menugogcomisupandrunningwithoutaproblem--><div class="wrapper cf"><div class="content cf"><div class="nav-spacer menu-spacer"></div><div class="glx-universe has-about-nav"
         ng-controller="galaxyLandingPageCtrl as landingPage"
    ><div class="glx-wrapper"><div class="container about-header  _dropdown" gog-dropdown><div class="about-header__menu about-header__menu--big-screen"><a href="/about_gog"
            class="about-header__btn"
                            hook-test="aboutMenuGog"
                    ><span class="about-header__text">O GOG.com</span><i class="ic ic--small icon-dropdown-down about-header__icon"></i></a><i class="dot"></i><span class="about-header__btn is-active _dropdown__toggle"
                            hook-test="aboutMenuGalaxy"
                    ><span class="about-header__text">O GOG Galaxy</span><i class="ic ic--small icon-dropdown-down about-header__icon"></i></span><i class="dot"></i><a href="/work"
            class="about-header__btn"
                            hook-test="aboutMenuWork"
                    ><span class="about-header__text">Dołącz do nas</span><i class="ic ic--small icon-dropdown-down about-header__icon"></i></a></div><div class="about-header__menu--mobile"><a href="/about_gog"
            class="about-header__btn"
                            hook-test="aboutMenuGog"
                    >O GOG.com</a><a href="/galaxy"
            class="about-header__btn"
                            hook-test="aboutMenuGalaxy"
                    >O GOG Galaxy</a><a href="/work"
            class="about-header__btn"
                            hook-test="aboutMenuWork"
                    >Dołącz do nas</a></div></div><section galaxy-overlay="'ourVisionOverlay'" class="glx-overlay is-hidden"><div class="glx-overlay__glass glx-overlay__glass--dark" galaxy-overlay-closer>&nbsp;</div><div class="glx-overlay__box glx-overlay__box--big
        glx-overlay__box--video glx-overlay__box--naked"><iframe galaxy-overlay-video src="//www.youtube.com/embed/nyYW9AOWh-8?rel=0&amp;enablejsapi=1" frameborder="0" allowfullscreen=""></iframe></div></section><section galaxy-overlay="'changelogOverlay'" class="glx-overlay is-hidden"><div
        class="glx-overlay__glass glx-overlay__glass--naked"
        galaxy-overlay-closer
    ></div><div galaxy-overlay-box class="glx-overlay__box glx-overlay__box--big glx-whats-new glx-about-update glx-about-update--1-2"><div class="glx-line-header glx-whats-new__header"><div class="glx-line-header__title glx-whats-new__title">
                AKTUALIZACJA 1.2
            </div></div><div class="glx-whats-new__content"><figure class="glx-about-update__version-circle glx-about-update__version-circle--1-2"></figure><div class="glx-about-update__subtitle">
    Co nowego w wersji 1.2
</div><ul class="glx-features-list glx-about-update__features-list"><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-cloud-arrow"></svg><h2 class="glx-features-list__label"><span >
                    Uniwersalne zapisy w chmurze
                                    </span></h2><p class="glx-features-list__text">
                Już nigdy nie stracisz swoich postępów w grach! Od teraz zarówno nowe gry, jak i klasyki, obsługują możliwość synchronizowania zapisów stanu gry w chmurze (tylko w obsługiwanych grach).
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-square-double-arrow-o"></svg><h2 class="glx-features-list__label"><span >
                    Overlay w grze
                                    </span></h2><p class="glx-features-list__text">
                Czatuj ze znajomymi, sprawdzaj powiadomienia lub osiągnięcia, wystarczy wcisnąć Shift+Tab w obsługujących tę funkcję grach.
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-switches"></svg><h2 class="glx-features-list__label"><span >
                    Wybieranie funkcjonalności
                                    </span></h2><p class="glx-features-list__text">
                Modyfikuj klienta według własnego uznania, wybierając interesujące Cię funkcjonalności, i dostosuj go do swoich potrzeb.
            </p></li></ul><div class="glx-about-update__subtitle">
    POZOSTAŁE USPRAWNIENIA I POPRAWKI
</div><div class="glx-about-update__other-improvements"><div class="glx-about-update__other-improvements-column"><h3 class="glx-about-update__other-improvement-title">
                    Ograniczenie prędkości pobierania
                </h3><p class="glx-about-update__other-improvement-text">
                    GOG Galaxy pobiera dane z możliwie najszybszą prędkością, ale możesz to ograniczyć. W dodatku możesz ustalić harmonogram kiedy to ograniczenie ma działać.
                </p><h3 class="glx-about-update__other-improvement-title">
                    Nowy czat
                </h3><p class="glx-about-update__other-improvement-text">
                    Zaprojektowany od nowa czat pozwala Ci na kontakt ze znajomymi w czasie gry lub podczas korzystania z klienta.
                </p><h3 class="glx-about-update__other-improvement-title">
                    Koniec bety
                </h3><p class="glx-about-update__other-improvement-text">
                    GOG Galaxy wychodzi z bety – tylko nowe funkcjonalności testowe będą ograniczone do wersji beta.
                </p></div><div class="glx-about-update__other-improvements-column"><h3 class="glx-about-update__other-improvement-title">
                    Zrzuty ekranu
                </h3><p class="glx-about-update__other-improvement-text">
                    Naciśnij F12 w grach obsługujących wewnętrzny overlay, aby uchwycić tę epicką chwilę.
                </p><h3 class="glx-about-update__other-improvement-title">
                    Nowy tryb hibernacji
                </h3><p class="glx-about-update__other-improvement-text">
                    Nie dość, że GOG Galaxy jest zdecydowanie szybsze, to automatyczna hibernacja znacząco zmniejsza zużycie procesora, gdy klient jest nieużywany lub gdy grasz w gry, dzięki czemu oszczędzamy Twoje cenne zasoby.
                </p><h3 class="glx-about-update__other-improvement-title">
                    Nowe okno ustawień
                </h3><p class="glx-about-update__other-improvement-text">
                    Modyfikuj funkcjonalności klienta z nowego okna ustawień.
                </p></div><div class="glx-about-update__other-improvements-column"><h3 class="glx-about-update__other-improvement-title">
                    Licznik FPS
                </h3><p class="glx-about-update__other-improvement-text">
                    Overlay zawiera licznik klatek na sekundę (FPS), dzięki czemu będziesz wiedzieć, jak dobrze spisuje się dana gra na Twoim komputerze.
                </p><h3 class="glx-about-update__other-improvement-title">
                    Rzadkość osiągnięć
                </h3><p class="glx-about-update__other-improvement-text">
                    Gdy odblokujesz osiągnięcie, zobaczysz czy jest ono często spotykane czy wyjątkowe w społeczności GOG.
                </p><h3 class="glx-about-update__other-improvement-title">
                    Powiadomienia
                </h3><p class="glx-about-update__other-improvement-text">
                    Otrzymuj nowe wiadomości, zaproszenia do gier lub do listy znajomych również w trakcie gry lub gdy GOG Galaxy pozostaje w tle.
                </p></div></div></div><div galaxy-overlay-closer class="glx-whats-new__close">&times;</div></div></section><section
    class="glx-section glx-section--background"
    ng-controller="galaxyBackgroundsCtrl as parallax"
    ng-cloak
><div
        class="glx-background glx-background--stars"
        data-200-top="transform: translate3d(-50%, -500px, 0);"
        data--4200-top="transform: translate3d(-50%, 600px, 0);"
    ></div><div
        class="glx-background glx-background--clouds"
        galaxy-background-glue="'glx-faq'"
        data-anchor-target="#glx-faq"
        data-300-bottom-top="transform: translate3d(-50%, 150px, 0);"
        data--560-bottom-top="transform: translate3d(-50%, -200px, 0);"
    ></div><div
        class="glx-background glx-background--planets"
        galaxy-background-glue="'glx-faq'"
        data-anchor-target="#glx-faq"
        data-1750-bottom-top="transform: translate3d(-50%, -450px, 0);"
        data--560-bottom-top="transform: translate3d(-50%, 450px, 0);"
    ></div></section><section class="glx-section glx-section--intro" id="glx-intro"><div class="glx-section__inner"><header class="glx-big-header glx-text--centered "><h1>
        GOG GALAXY
                    <svg class="glx-icon glx-big-header__label-icon"><use xlink:href="#icon-registered-symbol"></svg></h1><p class="glx-big-header__intro">GOG Galaxy, opcjonalna aplikacja stworzona by w łatwy i wygodny sposób kupować, grać i aktualizować swoje gry, a także grać ze znajomymi przez Internet niezależnie od platformy na której posiada się dany tytuł. GOG Galaxy zostało stworzone zgodnie z naszym przekonaniem, że gry przez Ciebie kupowane należą do Ciebie.</p></header><div class="glx-text--centered" id="glx-downloads"><a
                    ng-show="landingPage.downloads.os == 'Mac'"
                    class="glx-button glx-button--big glx-button--wide glx-button--blue ng-hide"
                    gog-track-event="{eventCategory:'galaxyPage', 'eventAction': 'clickOnGalaxyDownload', eventLabel:'Download Galaxy Client'}"
                    ng-click="landingPage.sendTrackEvent()"
                    href="https://content-system.gog.com/open_link/download?path=/open/galaxy/client/galaxy_client_1.2.54.27.pkg"
                >
                                                            Pobierz GOG Galaxy
                </a><a
                    ng-show="landingPage.downloads.os != 'Mac'"
                    class="glx-button glx-button--big glx-button--wide glx-button--blue"
                    gog-track-event="{eventCategory:'galaxyPage', 'eventAction': 'clickOnGalaxyDownload', eventLabel:'Download Galaxy Client'}"
                    ng-click="landingPage.sendTrackEvent()"
                    href="https://content-system.gog.com/open_link/download?path=/open/galaxy/client/setup_galaxy_1.2.54.23.exe"
                >
                                                            Pobierz GOG Galaxy
                </a><button
                    class="glx-button glx-button--big"
                    ng-click="landingPage.showOurVisionOverlay()"
                >
                    ODKRYJ NASZĄ WIZJĘ
                </button><div><small><span class="ng-hide" ng-show="landingPage.downloads.os == 'Mac'">
                            Klient GOG Galaxy wymaga systemu Mac OS X 10.11 lub nowszego. Dostępny również dla systemu <a class="glx-text--underlined" href="https://content-system.gog.com/open_link/download?path=/open/galaxy/client/setup_galaxy_1.2.54.23.exe">Windows</a>.
                        </span><span ng-show="landingPage.downloads.os == 'Windows'">
                            Klient GOG Galaxy wymaga systemu Windows 7 lub nowszego. Dostępny również dla systemu <a class="glx-text--underlined" href="https://content-system.gog.com/open_link/download?path=/open/galaxy/client/galaxy_client_1.2.54.27.pkg">Mac OS X</a>.
                        </span></small></div></div></div></section><section
    class="glx-section glx-section--hero"
    id="glx-hero"
><div class="glx-section__inner"><div class="glx-images"><picture
            class="glx-image glx-image--screen-hero-chat"
                            data-1000-top="transform: translate3d(-50%, 0px, 0);"
                data--1000-top="transform: translate3d(-50%, 200px, 0);"
                    ><source
                media="(max-width: 890px)"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/hero/screen-hero-chat-1x-mob.png, bundles/gogplugingalaxylandingpage/img/new/sections/hero/screen-hero-chat-2x-mob.png 2x"
            ><source
                media="screen"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/hero/screen-hero-chat-1x.png, https://images.gog.com/49c76db1e3c6d33af57bbc1a36574e85ad22e898ac35e806dca6afca117bddf6.png 2x"
            ><img src="bundles/gogplugingalaxylandingpage/img/new/sections/hero/screen-hero-chat-1x.png" alt="screen-hero-chat"></picture><picture
            class="glx-image glx-image--screen-hero-main"
                            data-1000-top="transform: translate3d(-50%, -50px, 0);"
                data--1000-top="transform: translate3d(-50%, 100px, 0);"
                    ><source
                media="(max-width: 890px)"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/hero/screen-hero-main-1x-mob.png, bundles/gogplugingalaxylandingpage/img/new/sections/hero/screen-hero-main-2x-mob.png 2x"
            ><source
                media="screen"
                srcset="https://images.gog.com/6a5e4208b65796f1794eaa9893329119c28a4bf32accf5ec43e0dba3b8004a6d.png, https://images.gog.com/8fd2e060afa33c4635c9b3cd1aaea85ee42f34ea20cc82bf7717d3ba21dbf451.png 2x"
            ><img src="https://images.gog.com/6a5e4208b65796f1794eaa9893329119c28a4bf32accf5ec43e0dba3b8004a6d.png" alt="screen-hero-main"></picture><picture
            class="glx-image glx-image--screen-hero-friends"
                            data-1000-top="transform: translate3d(-50%, 0px, 0);"
                data--1000-top="transform: translate3d(-50%, 300px, 0);"
                    ><source
                media="(max-width: 890px)"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/hero/screen-hero-friends-1x-mob.png, bundles/gogplugingalaxylandingpage/img/new/sections/hero/screen-hero-friends-2x-mob.png 2x"
            ><source
                media="screen"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/hero/screen-hero-friends-1x.png, https://images.gog.com/cd3b480adae237162cda9112208c6c5337b6eb30c3ee93591a4ea162e89b7763.png 2x"
            ><img src="bundles/gogplugingalaxylandingpage/img/new/sections/hero/screen-hero-friends-1x.png" alt="screen-hero-friends"></picture></div><div
            class="glx-text-rotator"
            ng-controller="galaxyRotatorCtrl as rotator"
        ><blockquote js-rotator-item class="glx-text-rotator__item is-active"><q class="glx-text-rotator__quote">GOG Galaxy to inteligentna, przyjazna graczom alternatywa dla platformy Steam.</q><cite class="glx-text-rotator__title">Forbes</cite></blockquote><blockquote js-rotator-item class="glx-text-rotator__item"><q class="glx-text-rotator__quote">GOG Galaxy to opcjonalne udogodnienie, nie wymóg.</q><cite class="glx-text-rotator__title">PC World</cite></blockquote><blockquote js-rotator-item class="glx-text-rotator__item"><q class="glx-text-rotator__quote">GOG Galaxy to niezbędny oddech od przeładowanego od funkcjonalności klienta Steam</q><cite class="glx-text-rotator__title">PC GAMER</cite></blockquote><blockquote js-rotator-item class="glx-text-rotator__item"><q class="glx-text-rotator__quote">GOG Galaxy to mile widziana alternatywa</q><cite class="glx-text-rotator__title">The Verge</cite></blockquote></div></div></section><section
    class="glx-section glx-section--update-1-2"
    id="glx-update-1-2"
><div class="glx-section__inner"><header class="glx-big-header glx-text--centered glx-big-header--iconed"><div class="glx-big-header__icon"></div><h1>
        Co nowego w aktualizacji 1.2
            </h1><p class="glx-big-header__intro">Uniwersalne zapisy stanu gry w chmurze, overlay w grach, ograniczenia prędkości pobierania, zrzuty ekranu, powiadomienia i nie tylko…</p></header><div class="glx-text--centered"><button
                class="glx-button glx-button--big"
                ng-click="landingPage.showChangelogOverlay()"
            >
                Dowiedz się więcej o aktualizacji 1.2
            </button></div></div></section><section
    class="glx-section glx-section--library"
    id="glx-library"
><div class="glx-section__inner"><div class="glx-images"><picture
            class="glx-image glx-image--screen-client-library"
                            data-1000-top="transform: translate3d(-50%, -100px, 0);"
                data--1000-top="transform: translate3d(-50%, 100px, 0);"
                    ><source
                media="(max-width: 890px)"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/library/screen-client-library-1x-mob.png, https://images.gog.com/e05166f466944c0ef81d43d9e1a5d9f0e4304abdeaba7f5953af14023ce266a3.png 2x"
            ><source
                media="screen"
                srcset="https://images.gog.com/cfee4e1f06fc584d2a14ab9eab03581c30fa00909e5f05b2c4d1201af2dbdd3a.png, https://images.gog.com/b2e68460e705027dbac48a3c417438058843259a3ede27de06efd95ff4c36900.png 2x"
            ><img src="https://images.gog.com/cfee4e1f06fc584d2a14ab9eab03581c30fa00909e5f05b2c4d1201af2dbdd3a.png" alt="screen-client-library"></picture></div><header class="glx-big-header glx-text--centered glx-big-header--iconed"><div class="glx-big-header__icon"></div><h1>
        Funkcjonalności biblioteki
            </h1><p class="glx-big-header__intro">Instalowanie, aktualizowanie i synchronizowanie zapisów dla Twojej wygody.</p></header><ul class="glx-features-list "><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-monitor-arrow-down"></svg><h2 class="glx-features-list__label"><span >
                    Instalacja i automatyczna aktualizacja
                                    </span></h2><p class="glx-features-list__text">
                Instaluj gry jednym kliknięciem, a GOG Galaxy zadba o ich aktualizacje. Opcjonalne ograniczenie prędkości pobierania i ustalanie harmonogramu daje Ci dodatkową kontrolę.
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-cloud-arrow"></svg><h2 class="glx-features-list__label"><span class="glx-feature-badgeWrapper">
                    Zapisy gier w chmurze
                                            <span class="glx-feature-badge">nowość</span></span></h2><p class="glx-features-list__text">
                Już nigdy nie stracisz swoich postępów w grach! Twoje stany gry będą automatycznie przenoszone do chmury i zsynchronizowane z innymi Twoimi komputerami (tylko w obsługiwanych grach).
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-circle-thunder-o"></svg><h2 class="glx-features-list__label"><span >
                    Tryb offline
                                    </span></h2><p class="glx-features-list__text">
                To Ty wybierasz, gdzie i jak grasz. GOG Galaxy, jak i gry zainstalowane za jego pośrednictwem, działają bez połączenia z internetem.
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-clock-undo"></svg><h2 class="glx-features-list__label"><span >
                    Przywracanie aktualizacji
                                    </span></h2><p class="glx-features-list__text">
                Czasami aktualizacje gier coś psują, dlatego mamy opcję ich cofania, która pozwala jednym kliknięciem przywrócić grę do poprzedniej wersji.
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-square-check-o"></svg><h2 class="glx-features-list__label"><span >
                    Opcjonalne automatyczne aktualizacje
                                    </span></h2><p class="glx-features-list__text">
                Nie chcesz, aby zmuszano Cię do przeprowadzania aktualizacji? W GOG Galaxy możesz wyłączyć ich automatyczne instalacje i otrzymywać powiadomienia, gdy nowe wersje Twoich gier będą dostępne.
            </p></li></ul></div></section><section
    class="glx-section glx-section--in-game"
    id="glx-in-game"
><div class="glx-section__inner"><div class="glx-images"><picture
            class="glx-image glx-image--screen-game-overlay"
                            data-1000-top="transform: translate3d(-50%, -100px, 0);"
                data--1000-top="transform: translate3d(-50%, 100px, 0);"
                    ><source
                media="(max-width: 890px)"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/in-game/screen-game-overlay-1x-mob.png, https://images.gog.com/fad17409b4446fe44baa7dac8775f89a1b2a4a7f37e0d845d8ecfae61f24352c.png 2x"
            ><source
                media="screen"
                srcset="https://images.gog.com/cc8c1eb73e0029c586be105a1cc4ec03204bd53e5784070e861a81ebc7d0972e.png, https://images.gog.com/881740a58ac19e3d4597ffaecdc7833e89267bda5114ce9d63c00acf9e235ec7.png 2x"
            ><img src="https://images.gog.com/cc8c1eb73e0029c586be105a1cc4ec03204bd53e5784070e861a81ebc7d0972e.png" alt="screen-game-overlay"></picture></div><header class="glx-big-header glx-text--centered glx-big-header--iconed"><div class="glx-big-header__icon"></div><h1>
        Funkcjonalności gier
            </h1><p class="glx-big-header__intro">Wzbogacamy gry o dodatkowe funkcjonalności online i offline.</p></header><ul class="glx-features-list "><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-cup"></svg><h2 class="glx-features-list__label"><span >
                    Osiągnięcia i czas gry
                                    </span></h2><p class="glx-features-list__text">
                Odblokuj osiągnięcia przygotowane przez twórców i sprawdź ile czasu spędziłeś z daną grą. Pochwal się swoimi osiągnięciami ze znajomymi lub rób to dla własnej przyjemności.
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-square-double-arrow-o"></svg><h2 class="glx-features-list__label"><span class="glx-feature-badgeWrapper">
                    Overlay w grze
                                            <span class="glx-feature-badge">nowość</span></span></h2><p class="glx-features-list__text">
                Sprawdź powiadomienia, czatuj ze znajomymi lub zerknij ile FPSów wyciąga Twoja maszyna, wystarczy wcisnąć Shift+Tab (tylko w obsługiwanych grach).
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-camera"></svg><h2 class="glx-features-list__label"><span class="glx-feature-badgeWrapper">
                    Zrzuty ekranu
                                            <span class="glx-feature-badge">nowość</span></span></h2><p class="glx-features-list__text">
                We wszystkich grach obsługujących overlay możesz zrobić zrzut ekranu, aby uwiecznić tę wyjątkową chwilę - po prostu naciśnij F12, gdy nadejdzie odpowiedni czas.
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-dandelion"></svg><h2 class="glx-features-list__label"><span >
                    Multiplayer i dobieranie graczy
                                    </span></h2><p class="glx-features-list__text">
                Tryb multiplayer w GOG Galaxy oferuje dobieranie graczy i grę online. Bez względu czy grasz w nowe tytuły, czy w klasyki, pora spotkać innych graczy i się z nimi zaprzyjaźnić... albo poznać nowych przeciwników.
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-orbit"></svg><h2 class="glx-features-list__label"><span >
                    Gra pomiędzy platformami
                                    </span></h2><p class="glx-features-list__text">
                Gry z tą funkcjonalnością pozwalają na zabawę online pomiędzy użytkownikami GOGa i Steama. Graj ze znajomymi w trybach online, bez względu na to, gdzie kupujecie swoje gry.
            </p></li></ul></div></section><section
    class="glx-section glx-section--community"
    id="glx-community"
><div class="glx-section__inner"><div class="glx-images"><picture
            class="glx-image glx-image--screen-friends-list"
                            data-1000-top="transform: translate3d(-50%, -50px, 0);"
                data--1000-top="transform: translate3d(-50%, 150px, 0);"
                    ><source
                media="(max-width: 890px)"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/community/screen-friends-list-1x-mob.png, bundles/gogplugingalaxylandingpage/img/new/sections/community/screen-friends-list-2x-mob.png 2x"
            ><source
                media="screen"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/community/screen-friends-list-1x.png, https://images.gog.com/96c06e0b2204cdbd7611bfd15f451b1b0208309cf125feb1b31ae97c6caadfac.png 2x"
            ><img src="bundles/gogplugingalaxylandingpage/img/new/sections/community/screen-friends-list-1x.png" alt="screen-friends-list"></picture><picture
            class="glx-image glx-image--screen-chat-conversation"
                            data-1000-top="transform: translate3d(-50%, 0px, 0);"
                data--1000-top="transform: translate3d(-50%, 100px, 0);"
                    ><source
                media="(max-width: 890px)"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/community/screen-chat-conversation-1x-mob.png, bundles/gogplugingalaxylandingpage/img/new/sections/community/screen-chat-conversation-2x-mob.png 2x"
            ><source
                media="screen"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/community/screen-chat-conversation-1x.png, https://images.gog.com/d2586a1e656a6376c82c3673998c21130d1354461c1dd6e81d1f0567cbb609c9.png 2x"
            ><img src="bundles/gogplugingalaxylandingpage/img/new/sections/community/screen-chat-conversation-1x.png" alt="screen-chat-conversation"></picture></div><header class="glx-big-header glx-text--centered glx-big-header--iconed"><div class="glx-big-header__icon"></div><h1>
        Funkcjonalności społecznościowe
            </h1><p class="glx-big-header__intro">Więcej sposobów na zawieranie przyjaźni i pozostawanie w kontakcie.</p></header><ul class="glx-features-list "><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-users"></svg><h2 class="glx-features-list__label"><span >
                    Lista znajomych
                                    </span></h2><p class="glx-features-list__text">
                Dodaj do listy znajomych lubiane przez siebie osoby. Sprawdź co robią, czy są online, w co grają, rozpocznij nową rozmowę na czacie lub zaproś ich do gry.
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-chat"></svg><h2 class="glx-features-list__label"><span class="glx-feature-badgeWrapper">
                    Czat online
                                            <span class="glx-feature-badge">nowość</span></span></h2><p class="glx-features-list__text">
                Bez względu na to, czy Twoi znajomi w coś grają, używają GOG Galaxy czy przeglądają stronę GOG, zawsze możesz z nimi porozmawiać. Pozostań z nimi w kontakcie!
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-circle-plus-o"></svg><h2 class="glx-features-list__label"><span >
                    Zapraszanie i dołączanie do gry
                                    </span></h2><p class="glx-features-list__text">
                Lubisz grać w dobrym towarzystwie? Zapraszaj znajomych, będąc w grze, lub dołączaj do ich gier z poziomu klienta GOG Galaxy (tylko w obsługiwanych grach).
            </p></li></ul></div></section><section
    class="glx-section glx-section--more"
    id="glx-more"
><div class="glx-section__inner"><div class="glx-images"><picture
            class="glx-image glx-image--screen-grid-bottom"
                            data-1000-top="transform: translate3d(-50%, 50px, 0);"
                data--1000-top="transform: translate3d(-50%, -50px, 0);"
                    ><source
                media="(max-width: 890px)"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/more/screen-grid-bottom-1x-mob.png, bundles/gogplugingalaxylandingpage/img/new/sections/more/screen-grid-bottom-2x-mob.png 2x"
            ><source
                media="screen"
                srcset="https://images.gog.com/1c5f44429d65feade192a63046fea57f11ebfb9dc87d2660ec892cd2889a2856.png, https://images.gog.com/2fd6b4d06c445274f5380433dfa2d70070817c0a80af9f09d916d0bf42d5e5ff.png 2x"
            ><img src="https://images.gog.com/1c5f44429d65feade192a63046fea57f11ebfb9dc87d2660ec892cd2889a2856.png" alt="screen-grid-bottom"></picture><picture
            class="glx-image glx-image--screen-grid-middle"
                            data-1000-top="transform: translate3d(-50%, 0px, 0);"
                data--1000-top="transform: translate3d(-50%, 150px, 0);"
                    ><source
                media="(max-width: 890px)"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/more/screen-grid-middle-1x-mob.png, bundles/gogplugingalaxylandingpage/img/new/sections/more/screen-grid-middle-2x-mob.png 2x"
            ><source
                media="screen"
                srcset="https://images.gog.com/224e7d23f48351beddbe97e0f11ff5a0df7c88f5403df0d8ad0fdc41383380bc.png, https://images.gog.com/00dbf8b2b07400240f833f7d80c7dda60ef337517d297969416fc46d7f2d2cba.png 2x"
            ><img src="https://images.gog.com/224e7d23f48351beddbe97e0f11ff5a0df7c88f5403df0d8ad0fdc41383380bc.png" alt="screen-grid-middle"></picture><picture
            class="glx-image glx-image--screen-grid-front"
                            data-1000-top="transform: translate3d(-50%, -50px, 0);"
                data--1000-top="transform: translate3d(-50%, 300px, 0);"
                    ><source
                media="(max-width: 890px)"
                srcset="bundles/gogplugingalaxylandingpage/img/new/sections/more/screen-grid-front-1x-mob.png, bundles/gogplugingalaxylandingpage/img/new/sections/more/screen-grid-front-2x-mob.png 2x"
            ><source
                media="screen"
                srcset="https://images.gog.com/6cb6fb9346fe6f8cd0f0e1b9acbef5b159d61efd7d635e7ba80ed856d93f1a2e.png, https://images.gog.com/ee2fdd34c3fdef081f9475ba0bf8d42e7e05b52e467759bd49a0ca36bd55e505.png 2x"
            ><img src="https://images.gog.com/6cb6fb9346fe6f8cd0f0e1b9acbef5b159d61efd7d635e7ba80ed856d93f1a2e.png" alt="screen-grid-front"></picture></div><header class="glx-big-header glx-text--centered glx-big-header--iconed"><div class="glx-big-header__icon"></div><h1>
        Więcej
            </h1><p class="glx-big-header__intro">Czasem nawet małe szczegóły robią największą różnicę.</p></header><ul class="glx-features-list "><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-switches"></svg><h2 class="glx-features-list__label"><span class="glx-feature-badgeWrapper">
                    Wybierz swoje funkcjonalności
                                            <span class="glx-feature-badge">nowość</span></span></h2><p class="glx-features-list__text">
                GOG Galaxy daje wolność wyboru. Nie lubisz osiągnięć? Powiadomienia Cię rozpraszają? Dostosuj klienta do swoich potrzeb i preferencji.
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-shield-check-o"></svg><h2 class="glx-features-list__label"><span >
                    Prywatność
                                    </span></h2><p class="glx-features-list__text">
                Bardzo szanujemy naszych użytkowników, dlatego GOG Galaxy szanuje Twoją prywatność. Nie śledzimy Twoich danych osobowych... nawet ich nie szukamy.
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-square-notification-o"></svg><h2 class="glx-features-list__label"><span class="glx-feature-badgeWrapper">
                    Powiadomienia
                                            <span class="glx-feature-badge">nowość</span></span></h2><p class="glx-features-list__text">
                Bez względu na to, czy GOG Galaxy pracuje w tle, czy grasz w jakąś grę, nie przegapisz nowych wiadomości, zaproszeń do gier wieloosobowych czy próśb o dodanie do znajomych.
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-chip-smile"></svg><h2 class="glx-features-list__label"><span >
                    Stała optymalizacja
                                    </span></h2><p class="glx-features-list__text">
                Uważamy, że aplikacja klienta powinna być lekka jak piórko i dlatego przy każdej kolejnej wersji robimy wszystko, co w naszej mocy, aby zmniejszyć zużycie procesora.
            </p></li><li class="glx-features-list__element"><svg class="glx-icon"><use xlink:href="#icon-crossroads-sign"></svg><h2 class="glx-features-list__label"><span >
                    Zawsze opcjonalne
                                    </span></h2><p class="glx-features-list__text">
                Niezależnie od wszystkich funkcjonalności, klient GOG Galaxy nigdy nie będzie obowiązkowy. I to nas ogromnie motywuje - chcemy stworzyć coś tak dobrego, żeby gracze sami chcieli z tego korzystać.
            </p></li></ul></div></section><section
    class="glx-section glx-section--faq"
    id="glx-faq"
><div class="glx-section__inner"><header class="glx-big-header glx-text--centered glx-big-header--iconed"><div class="glx-big-header__icon"></div><h1>
        Częste pytania
            </h1></header><section class="glx-faq-list"><ul class="glx-list"><li class="glx-faq-list__item" galaxy-accordion><h3 class="glx-faq-list__question" galaxy-accordion-trigger>
                            1. Dlaczego warto korzystać z GOG Galaxy? 
                        </h3><p class="glx-faq-list__answer">GOG Galaxy ma na celu nie tylko usprawnienie korzystania z GOG.com, ale także dostarczenie zupełnie nowych właściwości i możliwości. Dzięki GOG Galaxy możemy wspierać nowe gry wymagające funkcjonalności sieciowych, ale co równie istotne możemy zapewnić jeszcze lepsze doświadczenie istniejącym użytkownikom i wspieranie naszej społeczności przy płynnym przechodzeniu ze strony do samej gry. Wprowadzamy funkcje umożliwiające i ułatwiające pozostanie w kontakcie z resztą społeczności zarówno w przeglądarce, jak i w kliencie oraz podczas gry. Przede wszystkim jednak chcemy zmienić sposób korzystania z klienta gier. Większość funkcji w GOG Galaxy jest opcjonalna i można ją wyłączyć, ale wprowadzamy też rozwiązania, których wcześniej nie spotkałeś - jak na przykład przywracanie poprzednich wersji gier.</p></li><li class="glx-faq-list__item" galaxy-accordion><h3 class="glx-faq-list__question" galaxy-accordion-trigger>
                            2. Czy mogę korzystać z GOG Galaxy do instalacji i aktualizacji wszystkich gier na GOG.com?
                        </h3><p class="glx-faq-list__answer">Tak. Kluczową cechą GOG Galaxy jest możliwość pobrania i aktualizacji wszystkich gier. Obecnie niektóre gry nie wspierają jeszcze klienta, a ich lista dostępna jest na <a href="http://www.gog.com/support">stronach pomocy technicznej</a>. Naszym celem jest jak najszybsze zapewnienie takiego wsparcia każdej z naszych gier.</p></li><li class="glx-faq-list__item" galaxy-accordion><h3 class="glx-faq-list__question" galaxy-accordion-trigger>
                            3. Po czym poznać, jakie funkcje Galaxy oferuje dana gra?
                        </h3><p class="glx-faq-list__answer">Główne funkcje (takie jak instalacja, aktualizacja, śledzenie czasu gry) będą dostępne we wszystkich tytułach. Funkcje wewnątrz gry i społecznościowe mogą nie być dostępne we wszystkich produktach, więc dane na temat funkcji danej gry będą dokładnie opisane na jej stronie.</p></li><li class="glx-faq-list__item" galaxy-accordion><h3 class="glx-faq-list__question" galaxy-accordion-trigger>
                            4. Czy gry i patche będą jednocześnie udostępnione do pobrania poprzez stronę i GOG Galaxy?
                        </h3><p class="glx-faq-list__answer">Nasze gry będziemy publikować równocześnie poprzez GOG Galaxy i na naszej stronie, jednakże aktualizacje mogą odbywać się szybciej za pośrednictwem klienta – to jeden z głównych powodów, dla których powstał. Automatyzacja procesu aktualizacji w GOG Galaxy umożliwi nam szybkie wprowadzenie patchy, podczas gdy równocześnie będziemy pracować nad stworzeniem i przetestowaniem samodzielnych uaktualnień. Krótko mówiąc: jak najszybciej opublikujemy aktualizacje poprzez oba kanały, ale nie będziemy opóźniać jednego z nich w oczekiwaniu na gotowość drugiego. </p></li><li class="glx-faq-list__item" galaxy-accordion><h3 class="glx-faq-list__question" galaxy-accordion-trigger>
                            5. Gdzie mogę zgłosić błędy lub komentarze?
                        </h3><p class="glx-faq-list__answer">Istnieje kilka sposobów, z których można skorzystać:<br />
Raporty o błędach: Strona http://mantis.gog.com, poprzez którą możemy bezpośrednio otrzymywać zgłoszenia o błędach i je usuwać, pozostanie aktywna.<br />
Prośby o funkcje: Stworzyliśmy nową listę życzeń, na której będzie można zgłaszać prośby o nowe funkcje GOG Galaxy i na nie głosować.<br />
Opinie ogólne: Zachęcamy do dyskutowania o GOG Galaxy na forach, które będziemy przeglądać w poszukiwaniu komentarzy i nowych pomysłów.</p></li><li class="glx-faq-list__item" galaxy-accordion><h3 class="glx-faq-list__question" galaxy-accordion-trigger>
                            6. Czy mogę kupować gry i korzystać z forum poprzez GOG Galaxy? Czy mogę przestać używać przeglądarki i korzystać tylko z GOG Galaxy?
                        </h3><p class="glx-faq-list__answer">GOG Galaxy zawiera wszystkie obecne funkcje strony internetowej, w tym kupowanie gier i uczestnictwo w forach. Jeśli chcesz, GOG Galaxy może zupełnie zastąpić stronę.</p></li><li class="glx-faq-list__item" galaxy-accordion><h3 class="glx-faq-list__question" galaxy-accordion-trigger>
                            7. Czy GOG Galaxy przechowuje moje dane osobowe?
                        </h3><p class="glx-faq-list__answer">Szanujemy Twoją prywatność, GOG Galaxy również.<br />
Klient nie wysyła więcej informacji, niż jest to konieczne do jego działania. Przykładowo nigdy nie przeszukujemy większej części dysku twardego, niż nam na to pozwalasz, a kiedy śledzimy czas gry, nigdy nie sprawdzamy nawet nazw procesów systemowych, nie mówiąc o innych informacjach. Zapisujemy jedynie czas gry. O ile nam pozwolisz.<br />
Niektóre istotne dane dotyczące systemu zbieramy na potrzeby raportów o błędach. Mogą tam być na przykład informacje dotyczące ścieżki instalacji. Raporty o błędach są domyślnie włączone, ale możesz je wyłączyć. Jeśli chcesz upewnić się, że nie otrzymujemy absolutnie żadnych informacji, klient może działać również w trybie offline. Dokładniejsze informacje znajdują się w naszej <a href="http://www.gog.com/support/policies">polityce prywatności</a>. </p></li></ul><ul class="glx-list"><li class="glx-faq-list__item" galaxy-accordion><h3 class="glx-faq-list__question" galaxy-accordion-trigger>
                            8. Czy GOG downloader nadal będzie obsługiwany? Czy będziecie wciąż go rozwijać?
                        </h3><p class="glx-faq-list__answer">Nie wyłączymy aplikacji GOG downloader w dniu premiery, ale nie będziemy już nad nim aktywnie pracować. Być może wraz z rozwojem naszej infrastruktury ulegnie zmianom, ale nie planujemy celowo go wyłączać.</p></li><li class="glx-faq-list__item" galaxy-accordion><h3 class="glx-faq-list__question" galaxy-accordion-trigger>
                            9. Czy pojawi się wersja GOG Galaxy na Linux?
                        </h3><p class="glx-faq-list__answer">Planujemy wersję naszego klienta na Linux, ale nie znamy jeszcze szacowanej daty premiery. Czekajcie na więcej szczegółów w przyszłości! </p></li><li class="glx-faq-list__item" galaxy-accordion><h3 class="glx-faq-list__question" galaxy-accordion-trigger>
                            10. Czy można edytować, modyfikować i ulepszać GOG Galaxy?
                        </h3><p class="glx-faq-list__answer">Jeśli lubisz majsterkować, możesz śmiało stworzyć swoje funkcje lub nawet klienta kompatybilnego z GOG Galaxy, o ile wiesz jak. Jeśli chcesz poprawić GOG Galaxy, nie będziemy Cię przed tym powstrzymywać, choć możemy przypadkowo coś Ci zepsuć, ponieważ sami nieustannie rozwijamy nasze narzędzia i infrastrukturę.</p></li><li class="glx-faq-list__item" galaxy-accordion><h3 class="glx-faq-list__question" galaxy-accordion-trigger>
                            11. Mam już na komputerze dużo zainstalowanych gier. Czy GOG Galaxy je wykryje, czy będzie potrzebna reinstalacja całej biblioteki?
                        </h3><p class="glx-faq-list__answer">Możesz dodać zainstalowane gry do klienta. Gry zainstalowane przy pomocy naszych nowszych instalatorów (dostępnych na stronie już od kilku miesięcy) zostaną wykryte automatycznie, a te starsze będą wymagać ręcznego dodania gry.</p></li><li class="glx-faq-list__item" galaxy-accordion><h3 class="glx-faq-list__question" galaxy-accordion-trigger>
                            12. W jaki sposób mogę korzystać z gry międzyplatformowej?
                        </h3><p class="glx-faq-list__answer">Gra między różnymi platformami nie wymaga konfiguracji. Użytkownicy Steam nie muszą tworzyć konta GOG.com ani instalować GOG Galaxy, a użytkownicy GOG.com nie potrzebują konta Steam. Wystarczy się zalogować, uruchomić grę i rozpocząć zabawę online!</p></li><li class="glx-faq-list__item" galaxy-accordion><h3 class="glx-faq-list__question" galaxy-accordion-trigger>
                            13. Czy GOG Galaxy jest naprawdę opcjonalne?
                        </h3><p class="glx-faq-list__answer">GOG Galaxy jest w pełni dobrowolną opcją, ponieważ nie potrzebujesz jej do gry na GOG.com. Możesz po prostu pobrać grę bezpośrednio z przeglądarki, ręcznie ją zainstalować i uruchomić w trybie offline, tak jak to wyglądało na GOG.com do tej pory. Jeśli dla wygody zdecydujesz się korzystać z GOG Galaxy, nadal możesz w każdej chwili przejść do trybu offline. Wszystkie funkcje GOG Galaxy mogą również zostać wyłączone. Nie przepadasz za zdobywaniem osiągnięć i automatycznymi aktualizacjami? Żaden problem, to tylko dodatki.</p></li></ul></section></div></section><section class="glx-section glx-section--footer"><div class="container gxl-footer-border-top"><div class="glx-section__inner"><p>
                    Stworzone z pasją w Warszawie, stolicy Polski. Podziel się z nami swoimi <a href="https://www.gog.com/wishlist/galaxy"><strong>uwagami</strong></a> lub zgłoś <a href="http://mantis.gog.com/"><strong>błędy</strong></a> i pomóż nam jeszcze bardziej ulepszyć GOG Galaxy.
                </p></div></div></section></div><div class="about-menu-bottom-wrapper cf"><div class="container about-header about-header--dark-bg about-header--include-footer-spacer about-header--flipped _dropdown" gog-dropdown><div class="about-header__menu about-header__menu--big-screen"><a href="/about_gog"
            class="about-header__btn"
                            hook-test="aboutMenuGog"
                    ><span class="about-header__text">O GOG.com</span><i class="ic ic--small icon-dropdown-down about-header__icon"></i></a><i class="dot"></i><span class="about-header__btn is-active _dropdown__toggle"
                            hook-test="aboutMenuGalaxy"
                    ><span class="about-header__text">O GOG Galaxy</span><i class="ic ic--small icon-dropdown-down about-header__icon"></i></span><i class="dot"></i><a href="/work"
            class="about-header__btn"
                            hook-test="aboutMenuWork"
                    ><span class="about-header__text">Dołącz do nas</span><i class="ic ic--small icon-dropdown-down about-header__icon"></i></a></div><div class="about-header__menu--mobile"><a href="/about_gog"
            class="about-header__btn"
                            hook-test="aboutMenuGog"
                    >O GOG.com</a><a href="/galaxy"
            class="about-header__btn"
                            hook-test="aboutMenuGalaxy"
                    >O GOG Galaxy</a><a href="/work"
            class="about-header__btn"
                            hook-test="aboutMenuWork"
                    >Dołącz do nas</a></div></div></div></div><div class="footer-spacer"></div></div><!--content--><link rel="stylesheet" href="https://menu-static.gog.com/assets/css/footer_v2.a4472f296578bec5ea3ff456c6ea9a651fcd0dfc.css">

<footer class="footer-microservice main-footer"><div class="footer-microservice__top footer-microservice-content"><ul class="footer-microservice-mainlinks"><li class="footer-microservice-mainlinks__item"><a class="footer-microservice-mainlinks__link" href="/redeem">
            Zrealizuj kod
        </a></li><li class="footer-microservice-mainlinks__item"><a class="footer-microservice-mainlinks__link" href="/reclaim">
            Odzyskaj swoją grę
        </a></li><li class="footer-microservice-mainlinks__item"><a class="footer-microservice-mainlinks__link"   href="/connect">
            GOG Connect
        </a></li><li class="footer-microservice-mainlinks__item"><a class="footer-microservice-mainlinks__link" href="//support.gog.com/hc">
            Skontaktuj się z nami
        </a></li><li class="footer-microservice-mainlinks__item"><a class="footer-microservice-mainlinks__link" href="/work">
            Kariera
        </a></li><li class="footer-microservice-mainlinks__item"><a class="footer-microservice-mainlinks__link" href="/indie">
            Zgłoś swoją grę
        </a></li></ul><div class="footer-microservice-socials"><a target="_blank" href="https://facebook.com/gogcom" class="footer-microservice-socials__item"><i class="footer-ic footer-icon-facebook footer-fb"></i></a><a target="_blank" href="https://twitter.com/gogcom" class="footer-microservice-socials__item"><i class="footer-ic footer-icon-twitter footer-twitter"></i></a><a target="_blank" href="http://www.twitch.tv/gogcom" class="footer-microservice-socials__item"><i class="footer-ic footer-icon-twitch footer-twitch"></i></a></div></div><div class="footer-microservice__middle"><div class="footer-microservice-content"><a class="footer-microservice__logo" href="/"></a><div class="footer-microservice__middle-section"><div class="footer-microservice-language" footer-language ng-cloak><span class="footer-microservice-language__label">Język:</span><div class="footer-microservice-language__item--dropdown-wrapper"><span class="footer-microservice__sizer">
            {{ language.displayLanguage }}
            <svg class="footer-microservice-language__dropdown-icon" viewBox="0 0 32 32"><use xlink:href="#icon-arrow-down2"></svg></span><select 
            class="footer-microservice-language__item--dropdown" 
            ng-model="language.currentLanguageCode" 
            ng-change="language.changeLanguage(language.currentLanguageCode)"><option value="en-US">English</option><option value="de-DE">Deutsch</option><option value="fr-FR">Français</option><option value="pl-PL">Polski</option><option value="ru-RU">Pусский</option><option value="zh-Hans">中文(简体)</option></select></div><span class="footer-microservice-language__item--selected">{{ language.currentLanguage }}</span><span class="footer-microservice-language__item--default"
        ng-if="language.currentLanguageCode !== language.defaultLanguageCode"
        ng-click="language.changeLanguage(language.defaultLanguageCode)">
        {{ language.defaultLanguage }}
    </span><div class="footer-microservice-language__item--more-wrapper"><span class="footer-microservice__sizer">
            {{ language.displayLanguageMore }}
            <svg class="footer-microservice-language__dropdown-icon" viewBox="0 0 32 32"><use xlink:href="#icon-arrow-down2"></svg></span><select 
            class="footer-microservice-language__item--more" 
            ng-model="language.currentLanguageCodeMore" 
            ng-change="language.changeLanguage(language.currentLanguageCodeMore)"><option value="">więcej języków</option><option value="en-US">English</option><option value="de-DE">Deutsch</option><option value="fr-FR">Français</option><option value="ru-RU">Pусский</option><option value="zh-Hans">中文(简体)</option></select></div><ul class="footer-microservice-language__list"><li class="footer-microservice-language__item"
            ng-class="{'is-selected': language.currentLanguage === 'English' }"
            ng-click="language.changeLanguage('en-US')">English</li><li class="footer-microservice-language__item"
            ng-class="{'is-selected': language.currentLanguage === 'Deutsch' }"
            ng-click="language.changeLanguage('de-DE')">Deutsch</li><li class="footer-microservice-language__item"
            ng-class="{'is-selected': language.currentLanguage === 'Français' }"
            ng-click="language.changeLanguage('fr-FR')">Français</li><li class="footer-microservice-language__item"
            ng-class="{'is-selected': language.currentLanguage === 'Polski' }"
            ng-click="language.changeLanguage('pl-PL')">Polski</li><li class="footer-microservice-language__item"
            ng-class="{'is-selected': language.currentLanguage === 'Pусский' }"
            ng-click="language.changeLanguage('ru-RU')">Pусский</li><li class="footer-microservice-language__item"
            ng-class="{'is-selected': language.currentLanguage === '中文(简体)' }"
            ng-click="language.changeLanguage('zh-Hans')">中文(简体)</li></ul></div><div class="footer-microservice-currency" footer-currency ng-cloak><span class="footer-microservice-currency__item--label">Waluta:</span><div class="footer-microservice-currency__item--dropdown-wrapper"><select class="footer-microservice-currency__item--dropdown" ng-model="currency.currentCurrency" ng-change="currency.changeCurrency(currency.currentCurrency)"><option value="PLN">PLN</option><option value="EUR">EUR</option><option value="USD">USD</option></select><svg class="footer-microservice-currency__dropdown-icon" viewBox="0 0 32 32"><use xlink:href="#icon-arrow-down2"></svg></div><span class="footer-microservice-currency__item--selected">PLN</span><ul class="footer-microservice-currency__list"><li class="footer-microservice-currency__item
                 selected" 
                ng-click="currency.changeCurrency('PLN')">
                PLN
            </li><li class="footer-microservice-currency__item
                " 
                ng-click="currency.changeCurrency('EUR')">
                EUR
            </li><li class="footer-microservice-currency__item
                " 
                ng-click="currency.changeCurrency('USD')">
                USD
            </li></ul></div></div><div class="footer-microservice__middle-section"><div footer-download class="footer-microservice-download{{ download.cssClass }}"
    gog-track-event="{'event': 'gogGalaxyDownload'}"
><a class="footer-microservice-download__button footer-microservice-download__button--mac" href="https://content-system.gog.com/open_link/download?path=/open/galaxy/client/galaxy_client_1.2.54.27.pkg">
        Pobierz GOG Galaxy
        <span>dla Maca</span></a><a class="footer-microservice-download__button footer-microservice-download__button--windows" href="https://content-system.gog.com/open_link/download?path=/open/galaxy/client/setup_galaxy_1.2.54.23.exe">
        Pobierz GOG Galaxy
        <span>dla Windows</span></a><a class="footer-microservice-download__button footer-microservice-download__button--other" href="/galaxy">
        Poznaj GOG Galaxy
    </a></div><div class="footer-microservice-socials"><a target="_blank" href="https://facebook.com/gogcom" class="footer-microservice-socials__item"><i class="footer-ic footer-icon-facebook footer-fb"></i></a><a target="_blank" href="https://twitter.com/gogcom" class="footer-microservice-socials__item"><i class="footer-ic footer-icon-twitter footer-twitter"></i></a><a target="_blank" href="http://www.twitch.tv/gogcom" class="footer-microservice-socials__item"><i class="footer-ic footer-icon-twitch footer-twitch"></i></a></div></div></div></div><div class="footer-microservice-secondary footer-microservice-content"><ul class="footer-microservice-secondary__list"><li><a class="footer-microservice-secondary__link"
                href="/support/policies/">
                Kwestie prawne
            </a></li><li><a class="footer-microservice-secondary__link"
                href="https://support.gog.com/hc/articles/115003539989-Company-Reorganisation">
                Reorganizacja firmy
            </a></li><li><a class="footer-microservice-secondary__link"
                href="https://support.gog.com/hc/articles/212632109-Privacy-Policy">
                Polityka prywatności
            </a></li><li><a class="footer-microservice-secondary__link"
                href="/thanks">
                Podziękowania
            </a></li></ul><div class="footer-microservice-secondary__copyrights">
        GOG Sp. z o.o. 2019.
        Część grupy <a class="footer-microservice-secondary__logo" href="https://www.cdprojekt.com/">CD PROJEKT</a>.
    </div></div></footer>
<script>
    window.footerMicroservice = {
        currentLanguageCode: 'pl-PL',
        currentLanguageMore: 'więcej języków',
        defaultLanguage: 'polski',
        defaultLanguageCode: 'pl-PL',
        availableLanguages: [{"code":"en-US","name":"English"},{"code":"de-DE","name":"Deutsch"},{"code":"fr-FR","name":"Fran\u00e7ais"},{"code":"pl-PL","name":"Polski"},{"code":"ru-RU","name":"P\u0443\u0441\u0441\u043a\u0438\u0439"},{"code":"zh-Hans","name":"\u4e2d\u6587(\u7b80\u4f53)"}],
        currentCurrencyCode: 'PLN',
    }
</script></div><!-- wrapper  --></div><!-- universe --><script type="text/javascript">
        var gogData = {"anonymous_personalization":true,"currentCurrency":{"code":"PLN","symbol":"z\u0142"},"availableCurrencies":[{"code":"PLN","symbol":"z\u0142"},{"code":"EUR","symbol":"\u20ac"},{"code":"USD","symbol":"$"}],"currentLanguage":"pl-PL","availableLanguages":[{"code":"en-US","name":"English"},{"code":"de-DE","name":"Deutsch"},{"code":"fr-FR","name":"fran\u00e7ais"},{"code":"pl-PL","name":"polski"},{"code":"ru-RU","name":"\u0440\u0443\u0441\u0441\u043a\u0438\u0439"},{"code":"zh-Hans","name":"\u4e2d\u6587(\u7b80\u4f53)"}],"dateFormats":{"tiny":"d MMM"},"now":1554990112,"nowAtom":"2019-04-11T16:41:52+03:00","currentCountry":"PL","personalizationEndpointCacheTtl":0};
        var translationData = {"diff.now":"przed chwil\u0105","diff.ago.minute":"minut\u0119 temu|%count% minuty temu|%count% minut temu|%count% minuty temu","diff.ago.hour":"godzin\u0119 temu|%count% godziny temu|%count% godzin temu|%count% godziny temu","diff.ago.day":"wczoraj|%count% dni temu|%count% dni temu|%count% dnia temu","diff.ago.week":"tydzie\u0144 temu|%count% tygodnie temu|%count% tygodni temu|%count% tygodnia temu","months":{"1":"stycze\u0144","2":"luty","3":"marzec","4":"kwiecie\u0144","5":"maj","6":"czerwiec","7":"lipiec","8":"sierpie\u0144","9":"wrzesie\u0144","10":"pa\u017adziernik","11":"listopad","12":"grudzie\u0144"}};
        
        

                gogData.features = {"newCart":true,"welcomeOfferPromo":true,"new_navigation":true,"new_footer":true,"notifications_consuming":true,"frontpage_welcome_offer_price_personalization":false,"newWorkPage":true,"projectOrion":true,"notify_me_btn":true,"gtm":1,"gtm_blacklist":false,"performance_gathering":true,"lazyloading":true};
                gogData.env = "prod_atm";
                gogData.mode = "native";
        
    </script><script>
    window.gogData.pageType = 'Galaxy';
    window.dataLayer = [{
        'langDrop': 'pl-PL',
        'currDrop': 'PLN',
        'pageType': 'Galaxy',
        'pageCategory': 'NA',
        'pageSection': 'Other'
    }];
</script><script>
                var _rollbarConfig = {
                    accessToken: "e2281805b5684fe7a42c99cec7a54764",
                    captureUncaught: true,
                    payload: {
                        environment: gogData.env,
                        mode: gogData.mode
                    },
                    async:false
                };

                            </script><script src="//www4-static.gog.com/js/jsGlobal-30aa59b.js" crossorigin="anonymous"></script><script src="//www4-static.gog.com/js/js_global_pl-pl-adb941b.js" crossorigin="anonymous"></script><script src="//www4-static.gog.com/js/loginTracking-1c81cda.js" crossorigin="anonymous"></script><script type="text/javascript">
        if (typeof GalaxyAccounts != 'undefined') {
            var galaxyAccounts = new GalaxyAccounts('https://auth.gog.com/auth?client_id=46755278331571209&redirect_uri=https%3A%2F%2Fwww.gog.com%2Fon_login_success&response_type=code&layout=default&brand=gog&gog_lc=PL_PLN_pl-PL','https://login.gog.com');
        }
    </script><script src="//www4-static.gog.com/js/galaxy-landing-page-new-c8205ce.js" crossorigin="anonymous"></script>

<script>

    window.gogMicroservices = {
        'menu': {
            'currentLanguageCode': 'pl-PL',
            'currentCurrencyCode': 'PLN',
            'country': 'PL',
            'availableCurrencies': ["PLN","EUR","USD"],
            'availableLanguages': [{"code":"en-US","name":"English"},{"code":"de-DE","name":"Deutsch"},{"code":"fr-FR","name":"Fran\u00e7ais"},{"code":"pl-PL","name":"Polski"},{"code":"ru-RU","name":"P\u0443\u0441\u0441\u043a\u0438\u0439"},{"code":"zh-Hans","name":"\u4e2d\u6587(\u7b80\u4f53)"}],
            'hostname': 'https://menu-static.gog.com',
            'now': '1554990006',
            'env': 'prod',
            'features': {
                'notifications': true,
                                'feedNotifications': true,
                                'gog_scrollbar': true,
                'list_of_friends_enabled': true,
                'notifications_v3': true,
                'disabled_profile_handling': true
            }
        }
    }

    
</script>

<script src="https://menu-static.gog.com/assets/js/bundle_min.a4472f296578bec5ea3ff456c6ea9a651fcd0dfc.js"></script><script src="//www4-static.gog.com/js/localeCheck-64b2de5.js" crossorigin="anonymous"></script><script type="text/javascript" src="/konami/dist/bundle.js"></script>    <script src="https://menu-static.gog.com/assets/js/footer/v2/bundle_min.a4472f296578bec5ea3ff456c6ea9a651fcd0dfc.js"></script>
<script type="text/javascript"></script><!--gogcomisupandrunningwithoutaproblem--><!--latestgogcomversion--><!--latestgogcomversionchanged--></body></html>