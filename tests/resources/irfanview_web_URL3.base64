
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Download IrfanView</title>
    <link rel="shortcut icon" type="image/png" href="images/favicon.png">    
    <link rel="stylesheet" type="text/css" href="style.css">
    
    <!--[if IE]>
	<link rel="stylesheet" type="text/css" href="all-ie-only.css" />
    <![endif]-->
    <!--[if lte IE 7]>
	<link rel="stylesheet" type="text/css" href="ie7-and-down.css" />
    <![endif]-->
    <!--[if IE 6]>
        <link rel="stylesheet" type="text/css" href="ie6.css" />
    <![endif]-->
</head>

<body>

    <header>
        <div id="fixed-menu">
            <input type="checkbox" id="nav-trigger" class="nav-trigger" />
            <label for="nav-trigger">Menu</label>
            <div id="top-navigation">
                <div class="container">
                    <h1 class="logo">
                    <a href="index.htm"><img src="images/logo.png" alt="IrfanView"></a>
                </h1>
                    <ul>
                        <li>
                            <a href="index.htm" class="home-icon">Home</a>
                        </li>
                        <li>
                            <a href="mailto:irfanview@gmx.net" class="email-icon">Send Us an Email</a>
                        </li>
                        <li>
                            <a href="" class="mirror-icon">Other Mirrors</a>
                            <select onchange="window.open(this.value,'_blank')">
                                <option value="">Select Mirror</option>
                                <option value="http://www.irfanview.com/">Germany 1</option>
                                <option value="http://www.irfanview.net/">Germany 2</option>
                                <option value="http://www.irfanview.info/">Germany 3</option>
                                <option value="http://www.mediaside.net/irfanview/">Italy</option>
                                <option value="http://irfanview.mediaside.co.uk/">UK</option>
                                <option value="http://irfanviewpt.mediaside.net/">Portugal</option>
                                <option value="http://www.irfanview.asia/">China</option>
                                <option value="http://www.mediaside.eu/irfan-es/">Spain</option>
                                <option value="http://irfan-view.pl/">Poland 1</option>
                                <option value="http://www.programosy.pl/program,irfanview.html">Poland 2</option>
                                <option value="http://alpinefile.ru/irfanview.html/">Russia</option>
                            </select>
                        </li>
                        <li>
                            <a href="privacy_policy.htm" class="mirror-icon">Privacy Policy</a>
                        </li>
                        <li>
                            <a href="main_what_is_engl.htm" class="english-icon"></a>
                            <a href="main_what_is_ger.htm" class="germany-icon"></a>
                        </li>
                    </ul>
                </div>
            </div>
            <div id="main-navigation">
                <div class="container">
                    <ul>
                        <li class="dropdown">
                            <a class="caret"><span>Download</span></a>
                            <ul class="dropdown-content">
                                <li><a href="main_download_engl.htm">IrfanView 32-bit</a></li>
                                <li><a href="64bit.htm">IrfanView 64-bit</a></li>
                            </ul>
                        </li>
                        <li><a href="languages.htm">Languages</a></li>
                        <li><a href="plugins.htm">Plugins</a></li>
                        <li><a href="skins.htm">Skins</a></li>
                        <li class="nav-tablet-break"><a href="screenshot.htm">Screenshot</a></li>
                        <li class="dropdown">
                            <a class="caret"><span>About</span></a>
                            <ul class="dropdown-content">
                                <li><a href="main_what_is_engl.htm">What is Irfanview?</a></li>
                                <li><a href="main_history.htm">History of Changes</a></li>
                                <li><a href="main_links_engl.htm">Nice www Links</a></li>
                                <li><a href="main_about.htm">About the Author</a></li>
                            </ul>
                        </li>
                        <li><a href="main_support_engl.htm">Support</a></li>
                        <li><a href="faq.htm">Faq</a></li>
                        <li><a href="https://irfanview-forum.de/" target="_blank">Forum</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </header>
    <div class="main">
        <div class="inner-header">
            <h2 class="container">
                   Download IrfanView
        </h2>
        </div>
        <div class="container">
            <div class="inner-content">
                <div class="g-box"><strong class="info">Thank you very much for downloading and using IrfanView.<br />
                    Since year 2003, IrfanView has over 1 Million downloads every month.&nbsp;</strong></div>
                <p>
                    <strong>SHA-256 checksums:</strong>
                    <br />
                    <code>iview453_setup.exe &nbsp;- 7ebcf9fe4f4e41293d8808d2ad4b369577209dc64db04d79b1bce370e2c79b69</code>
                    <br />
                    <code>iview453.zip &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- 89c0d29424299f9b0d36248884059baf815f0b5d4adc9c3b426f61fe68f1444a</code>
                    <br />
                    <code>iview453g_setup.exe - c597df4fef1825c1df119a0b4115729e89d0ea97941e698ccbcb8eb4f2b0b7f2</code> (<strong>g</strong>erman installer)
                    <br />
                    <code>iview453g.zip &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- d0ab1f0eabd391baaed8061fbaf72729c3ab4a680968475e4dde639db7fcfbec</code>
                    <br />
                    <br />
                </p>
                <h3><em><strong>Recommended (fastest) download option (32-bit version):</strong></em></h3>

                <ul class="download-links">
                    <li>
                        <div class="logo">
                            <a href="http://www.fosshub.com/IrfanView.html" target="_blank">
                                <img alt="Get it from FossHub" src="images/fosshub.png" />
                            </a>
                        </div>
                        <div class="links">
                            <a href="http://www.fosshub.com/IrfanView.html" target="_blank">FossHub - download IrfanView</a>
                            <br>
                            <a href="http://www.fosshub.com/IrfanView.html" target="_blank">FossHub - download IrfanView plugins</a>
                        </div>
                    </li>

                    <li>
                        <div class="logo">
                            <a href="http://download.cnet.com/IrfanView/3000-2192_4-10021962.html?part=dl-&amp;subj=dl&amp;tag=button" target="_blank">
                                <img alt="Get it from CNET Download.com!" src="http://i.i.cbsi.com/cnwk.1d/i/dl/button/dl-button_a.gif" />
                            </a>
                        </div>
                        <div class="links">
                            Get it from CNET Download.com!
                        </div>
                    </li>

                    <li>
                        <div class="logo">
                            <a href="http://fileforum.betanews.com/detail/967963863/1" target="_blank">
                                <img src="http://www.irfanview.com/images/fileforum.png" style="height:59px; width:128px" />
                            </a>
                        </div>
                        <div class="links">
                            <a href="http://fileforum.betanews.com/detail/967963863/1" target="_blank">Fileforum - download IrfanView</a>
                            <br>
                            <a href="http://fileforum.betanews.com/detail/1099412658/1" target="_blank">Fileforum - download IrfanView plugins</a>
                        </div>
                    </li>

                    <li>
                        <div class="logo">
                            <a href="http://www.techspot.com/downloads/299-irfanview.html" target="_blank">
                                <img src="http://www.irfanview.com/images/techspot.png" />
                            </a>
                        </div>
                        <div class="links">
                            <a href="http://www.techspot.com/downloads/299-irfanview.html" target="_blank">TechSpot - download IrfanView</a>
                            <br>
                            <a href="http://www.techspot.com/downloads/472-irfanview-plugins.html" target="_blank">TechSpot - download IrfanView plugins</a>
                        </div>
                    </li>

                    <li>
                        <div class="logo">
                            <a href="http://www.tucows.com/preview/194967" target="_blank">
                                <img src="http://www.irfanview.com/images/tucows.png" />
                            </a>
                        </div>
                        <div class="links">
                            <a href="http://www.tucows.com/preview/194967" target="_blank">TUCOWS Network - download IrfanView</a>
                            <br>
                            <a href="http://www.tucows.com/preview/415586" target="_blank">TUCOWS Network - download IrfanView plugins</a>
                        </div>
                    </li>

                    <li>
                        <div class="logo">
                            <a href="https://www.heise.de/download/product/irfanview-1965" target="_blank">
                                <img src="http://www.irfanview.com/images/heise2.png" />
                            </a>
                        </div>
                        <div class="links">
                            <a href="https://www.heise.de/download/product/irfanview-1965" target="_blank">Heise (Germany)</a>
                        </div>
                    </li>

                    <li>
                        <div class="logo">
                            <a href="http://www.programosy.pl/program,irfanview.html" target="_blank">
                                <img src="http://www.irfanview.com/images/programosy.png" />
                            </a>
                        </div>
                        <div class="links">
                            <a href="http://www.programosy.pl/program,irfanview.html" target="_blank">Programosy.pl - download IrfanView and plugins</a>
                        </div>
                    </li>

                    <li>
                        <div class="logo">
                            <a href="http://www.computerbild.de/programme/IrfanView_902306.html" target="_blank">
                                <img src="http://www.irfanview.com/images/compbild3.jpg" />
                            </a>
                        </div>
                        <div class="links">
                            <a href="http://www.computerbild.de/programme/IrfanView_902306.html" target="_blank">COMPUTER BILD (Germany)</a>
                        </div>
                    </li>

                    <li>
                        <div class="logo">
                            <a href="http://www.winsoftware.de/irfanview,9,2.htm" target="_blank"><img src="http://www.irfanview.com/images/winsoftware.jpg" /></a>
                        </div>
                        <div class="links">
                            <a href="http://www.winsoftware.de/irfanview,9,2.htm" target="_blank">Winsoftware.de (Germany)</a>
                        </div>
                    </li>



                    <br />

                </ul>
                &nbsp;<strong><a href="download_sites.htm">Other download sites</a></strong>&nbsp;(Mirrors)
            </div>
        </div>
    </div>
    <footer>
       <div class="footer-line"></div>
        <div class="footer-content">
            <div class="container">
                <a href="index.htm"><img src="images/logo-footer.png" alt="Footer Logo"></a>
                <div class="footer-text">Copyright &copy; 1996-2019 by Irfan Skiljan. All Rights Reserved. Hosted by <a href="http://domainunion.de/">domainunion</a>.</div>
                <div class="playmain">design by <a href="http://playmain.com/" target="_blank">Playmain</a>.</div>
            </div>
        </div>
    </footer>

</body>

</html>